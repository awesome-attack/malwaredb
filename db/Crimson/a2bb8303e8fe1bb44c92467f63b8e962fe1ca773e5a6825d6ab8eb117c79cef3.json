{
    "alias": "MSIL_Crimson", 
    "analysis": {
        "_id": {
            "$oid": "5ba555e3ba80ffe26b51539a"
        }, 
        "description": "PE32 executable (GUI) Intel 80386 Mono/.Net assembly, for MS Windows", 
        "file_id": "aef0684878db6bc8c8f5cbebb9a40949f2e1b199", 
        "fuzzy_hash": "384:R5luBPiZCMfdfSJrQbsLRGSIxYVL46pg/i8BD9BmRvR6JZlbw8hqIusZzZv8:ROOmhtIiRpcnuH", 
        "hash": {
            "md5": "a61624f733d9852fa285c62b1a79f5e4", 
            "sha1": "aef0684878db6bc8c8f5cbebb9a40949f2e1b199", 
            "sha2": "a2bb8303e8fe1bb44c92467f63b8e962fe1ca773e5a6825d6ab8eb117c79cef3"
        }, 
        "mime_type": "application/x-dosexec", 
        "particular_header": {
            "av_analysis": "Not_implemented", 
            "certificate": {}, 
            "child_of": "Not_implemented", 
            "cypher": "Not_implemented", 
            "date": "'0x558AD246 [SUSPICIOUS]'", 
            "ep": "'0x40748e .text 0/3'", 
            "exports": {}, 
            "file_entropy": 5.526698274241916, 
            "headers": {
                "dos_header": {
                    "cblp": "'0x90'", 
                    "cp": "'0x3'", 
                    "cparhdr": "'0x4'", 
                    "crlc": "'0x0'", 
                    "cs": "'0x0'", 
                    "csum": "'0x0'", 
                    "ip": "'0x0'", 
                    "lfanew": "'0x80'", 
                    "lfarlc": "'0x40'", 
                    "magic": "'0x5a4d'", 
                    "maxalloc": "'0xffff'", 
                    "minalloc": "'0x0'", 
                    "oemid": "'0x0'", 
                    "oeminfo": "'0x0'", 
                    "ovno": "'0x0'", 
                    "res": "'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", 
                    "res2": "'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", 
                    "sp": "'0xb8'", 
                    "ss": "'0x0'"
                }, 
                "file_header": {
                    "Characteristics": "'0x102'", 
                    "Machine": "'0x14c'", 
                    "NumberOfSections": "'0x3'", 
                    "NumberOfSymbols": "'0x0'", 
                    "PointerToSymbolTable": "'0x0'", 
                    "SizeOfOptionalHeader": "'0xe0'", 
                    "TimeDateStamp": "'0x558ad246'"
                }, 
                "nt_header": {
                    "Signature": "'0x4550'"
                }, 
                "optional_header": {
                    "AddressOfEntryPoint": "'0x748e'", 
                    "BaseOfCode": "'0x2000'", 
                    "CheckSum": "'0x0'", 
                    "DllCharacteristics": "'0x8540'", 
                    "FileAlignment": "'0x200'", 
                    "ImageBase": "'0x400000'", 
                    "LoaderFlags": "'0x0'", 
                    "Magic": "'0x10b'", 
                    "MajorImageVersion": "'0x0'", 
                    "MajorLinkerVersion": "'0x8'", 
                    "MajorOperatingSystemVersion": "'0x4'", 
                    "MajorSubsystemVersion": "'0x4'", 
                    "MinorImageVersion": "'0x0'", 
                    "MinorLinkerVersion": "'0x0'", 
                    "MinorOperatingSystemVersion": "'0x0'", 
                    "MinorSubsystemVersion": "'0x0'", 
                    "NumberOfRvaAndSizes": "'0x10'", 
                    "Reserved1": "'0x0'", 
                    "SectionAlignment": "'0x2000'", 
                    "SizeOfCode": "'0x5600'", 
                    "SizeOfHeaders": "'0x200'", 
                    "SizeOfHeapCommit": "'0x1000'", 
                    "SizeOfHeapReserve": "'0x100000'", 
                    "SizeOfImage": "'0xc000'", 
                    "SizeOfInitializedData": "'0x600'", 
                    "SizeOfStackCommit": "'0x1000'", 
                    "SizeOfStackReserve": "'0x100000'", 
                    "SizeOfUninitializedData": "'0x0'", 
                    "Subsystem": "'0x2'"
                }
            }, 
            "imports": [
                {
                    "functions": [
                        "'_corexemain'"
                    ], 
                    "lib": "'mscoree.dll'"
                }
            ], 
            "imports_tree": "added", 
            "packer_detection": "Unknown", 
            "packer_version": "Not_implemented", 
            "res_entries": [
                {
                    "lang": "'LANG_NEUTRAL'", 
                    "name": "'RT_MANIFEST'", 
                    "rva": "'0x8058'", 
                    "sha1": "5c34374c2dd5afa92e0489f1d6f86dde616aca6c", 
                    "size": "'0x1e7'", 
                    "sublang": "'SUBLANG_NEUTRAL'", 
                    "type": "'XML document text'"
                }
            ], 
            "sections": [
                {
                    "characteristics": "0x60000020", 
                    "entropy": 5.573132169473609, 
                    "fuzzy_hash": "384:25luBPiZCMfdfSJrQbsLRGSIxYVL46pg/i8BD9BmRvR6JZlbw8hqIusZzZv8:2OOmhtIiRpcnuH", 
                    "md5": "4b35a6eef1e50096d454f1829508454d", 
                    "name": "'.text\\x00\\x00\\x00'", 
                    "sha1": "ff2b69b3ab62d9593d49b2de920778d3136935cf", 
                    "sha2": "64b97bef621f236ef7b22e4905e2a78d58fd829ca19f2798e514b68d23db3ed7", 
                    "size_raw_data": 22016, 
                    "virtual_size": 21652, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0x40000040", 
                    "entropy": 4.966081309608112, 
                    "fuzzy_hash": "12:gTATMHdt43O5lEGaN/2UjMNciC2xA5NEjChhhhhhhhhhhhhhhhhhhhhhhhhh5:Kdt4+lEbNFjMyi0h", 
                    "md5": "0243c9a7f8755f2c2b18037cdad6cc91", 
                    "name": "'.rsrc\\x00\\x00\\x00'", 
                    "sha1": "1ffa22fd5de34253aa3b8ffab97ec5c401513128", 
                    "sha2": "9a77791d60c4f151b59916a63b8b03359bdbfdf7f11e37c5e53729b0f0778d49", 
                    "size_raw_data": 1024, 
                    "virtual_size": 576, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0x42000040", 
                    "entropy": 0.08153941274837788, 
                    "fuzzy_hash": "3:LllRl:", 
                    "md5": "8f9fb76ec87ec8b0a5110a8a33506bf3", 
                    "name": "'.reloc\\x00\\x00'", 
                    "sha1": "98b6db59be26d4e28afade309354fff0561c2405", 
                    "sha2": "1b31e0f74b32adac41d1c45ea89afacb78cb8a7e03fb04bb30100193e0de21e5", 
                    "size_raw_data": 512, 
                    "virtual_size": 12, 
                    "write_executable": "False"
                }
            ], 
            "strings": {
                "domains": [
                    "'microsoft.visualbasic'", 
                    "'microsoft.visualbasic.compilerservices'", 
                    "'microsoft.visualbasic.devices'", 
                    "'microsoft.visualbasic.myservices'", 
                    "'myapplication.app'", 
                    "'system.diagnostics'", 
                    "'system.drawing'", 
                    "'system.drawing.imaging'", 
                    "'system.io'", 
                    "'system.io.compression'", 
                    "'system.net'", 
                    "'system.net.sockets'", 
                    "'system.reflection'", 
                    "'system.runtime.compilerservices'", 
                    "'system.security.cryptography'", 
                    "'system.text'", 
                    "'system.threading'", 
                    "'system.windows.forms'"
                ], 
                "hidden_dll": [
                    "'avicap32.dll'", 
                    "'user32.dll'"
                ], 
                "hidden_imports": [
                    "'connect'", 
                    "'exit'", 
                    "'getasynckeystate'", 
                    "'getcurrentprocess'", 
                    "'getforegroundwindow'", 
                    "'getvolumeinformationa'", 
                    "'getwindowtexta'", 
                    "'getwindowtextlengtha'", 
                    "'getwindowthreadprocessid'", 
                    "'rectangle'", 
                    "'send'", 
                    "'sleep'", 
                    "'socket'", 
                    "'tolower'"
                ], 
                "interesting": [
                    "'j.exe'"
                ], 
                "ips": [
                    "'1.0.0.0'"
                ], 
                "raw_strings": [
                    "'        <requestedexecutionlevel level='", 
                    "'      </requestedprivileges>'", 
                    "'      <requestedprivileges xmlns='", 
                    "'    </security>'", 
                    "'    <security>'", 
                    "'  </trustinfo>'", 
                    "'  <assemblyidentity version='", 
                    "'  <trustinfo xmlns='", 
                    "' encoding='", 
                    "' manifestversion='", 
                    "' name='", 
                    "' standalone='", 
                    "' uiaccess='", 
                    "'.cctor'", 
                    "'.ctor'", 
                    "'1.0.0.0'", 
                    "'3 rm'", 
                    "'</assembly>'", 
                    "'<?xml version='", 
                    "'<assembly xmlns='", 
                    "'<module>'", 
                    "'_lambda$__1'", 
                    "'_lambda$__2'", 
                    "'add_sessionending'", 
                    "'application'", 
                    "'appwinstyle'", 
                    "'asinvoker'", 
                    "'assembly'", 
                    "'avicap32.dll'", 
                    "'bitconverter'", 
                    "'bitmap'", 
                    "'blob'", 
                    "'boolean'", 
                    "'bsjb'", 
                    "'byte'", 
                    "'capgetdriverdescriptiona'", 
                    "'cbname'", 
                    "'cbver'", 
                    "'changetype'", 
                    "'char'", 
                    "'chrw'", 
                    "'clearprojecterror'", 
                    "'close'", 
                    "'command'", 
                    "'comparemethod'", 
                    "'compareobjectequal'", 
                    "'comparestring'", 
                    "'compdir'", 
                    "'compilationrelaxationsattribute'", 
                    "'compilergeneratedattribute'", 
                    "'compressionmode'", 
                    "'computehash'", 
                    "'computer'", 
                    "'computerinfo'", 
                    "'concat'", 
                    "'concatenateobject'", 
                    "'conditionalcompareobjectequal'", 
                    "'conditionalcompareobjectnotequal'", 
                    "'connect'", 
                    "'contains'", 
                    "'conversion'", 
                    "'conversions'", 
                    "'convert'", 
                    "'copy'", 
                    "'copyfromscreen'", 
                    "'copypixeloperation'", 
                    "'createinstance'", 
                    "'createsubkey'", 
                    "'cursor'", 
                    "'cursors'", 
                    "'dateandtime'", 
                    "'datetime'", 
                    "'debuggerstepthroughattribute'", 
                    "'delete'", 
                    "'deletesubkey'", 
                    "'deletevalue'", 
                    "'directoryinfo'", 
                    "'dispose'", 
                    "'doevents'", 
                    "'downloaddata'", 
                    "'draw'", 
                    "'drawimage'", 
                    "'encoding'", 
                    "'endapp'", 
                    "'endswith'", 
                    "'enter'", 
                    "'enum'", 
                    "'environ'", 
                    "'environment'", 
                    "'environmentvariabletarget'", 
                    "'exception'", 
                    "'exists'", 
                    "'exit'", 
                    "'false'", 
                    "'file'", 
                    "'fileinfo'", 
                    "'filemode'", 
                    "'filestream'", 
                    "'filesysteminfo'", 
                    "'flush'", 
                    "'frombase64string'", 
                    "'fromimage'", 
                    "'get_assembly'", 
                    "'get_available'", 
                    "'get_bounds'", 
                    "'get_capslock'", 
                    "'get_chars'", 
                    "'get_client'", 
                    "'get_ctrlkeydown'", 
                    "'get_currentuser'", 
                    "'get_date'", 
                    "'get_default'", 
                    "'get_directory'", 
                    "'get_fullname'", 
                    "'get_handle'", 
                    "'get_height'", 
                    "'get_info'", 
                    "'get_jpeg'", 
                    "'get_keyboard'", 
                    "'get_lastwritetime'", 
                    "'get_length'", 
                    "'get_localmachine'", 
                    "'get_location'", 
                    "'get_machinename'", 
                    "'get_mainwindowtitle'", 
                    "'get_message'", 
                    "'get_name'", 
                    "'get_now'", 
                    "'get_osfullname'", 
                    "'get_osversion'", 
                    "'get_parent'", 
                    "'get_position'", 
                    "'get_primaryscreen'", 
                    "'get_processname'", 
                    "'get_registry'", 
                    "'get_servicepack'", 
                    "'get_shiftkeydown'", 
                    "'get_username'", 
                    "'get_utf8'", 
                    "'get_width'", 
                    "'getasynckeystate'", 
                    "'getbytes'", 
                    "'getcurrentprocess'", 
                    "'getentryassembly'", 
                    "'getfolderpath'", 
                    "'getforegroundwindow'", 
                    "'getkeyboardlayout'", 
                    "'getkeyboardstate'", 
                    "'getmodules'", 
                    "'getobjectvalue'", 
                    "'getprocessbyid'", 
                    "'getstream'", 
                    "'getstring'", 
                    "'gettempfilename'", 
                    "'gettypefromhandle'", 
                    "'gettypes'", 
                    "'getvalue'", 
                    "'getvaluenames'", 
                    "'getvolumeinformation'", 
                    "'getvolumeinformationa'", 
                    "'getwindowtext'", 
                    "'getwindowtexta'", 
                    "'getwindowtextlength'", 
                    "'getwindowtextlengtha'", 
                    "'getwindowthreadprocessid'", 
                    "'graphics'", 
                    "'guid'", 
                    "'gzipstream'", 
                    "'hashalgorithm'", 
                    "'hprocess'", 
                    "'hwnd'", 
                    "'image'", 
                    "'imageformat'", 
                    "'int32'", 
                    "'interaction'", 
                    "'intptr'", 
                    "'j.exe'", 
                    "'j3wr5'", 
                    "'join'", 
                    "'kernel32'", 
                    "'keyboard'", 
                    "'keys'", 
                    "'lastas'", 
                    "'lastav'", 
                    "'lastcap'", 
                    "'lastkey'", 
                    "'latecall'", 
                    "'lateget'", 
                    "'lateset'", 
                    "'load'", 
                    "'logs'", 
                    "'lpfilesystemflags'", 
                    "'lpfilesystemnamebuffer'", 
                    "'lpmaximumcomponentlength'", 
                    "'lprootpathname'", 
                    "'lpszname'", 
                    "'lpszver'", 
                    "'lpvolumenamebuffer'", 
                    "'lpvolumeserialnumber'", 
                    "'main'", 
                    "'mapvirtualkey'", 
                    "'maxlength'", 
                    "'md5cryptoserviceprovider'", 
                    "'memorystream'", 
                    "'microsoft.visualbasic'", 
                    "'microsoft.visualbasic.compilerservices'", 
                    "'microsoft.visualbasic.devices'", 
                    "'microsoft.visualbasic.myservices'", 
                    "'microsoft.win32'", 
                    "'module'", 
                    "'monitor'", 
                    "'mscorlib'", 
                    "'mutex'", 
                    "'myapplication.app'", 
                    "'networkstream'", 
                    "'newlatebinding'", 
                    "'nfilesystemnamesize'", 
                    "'ntdll'", 
                    "'ntsetinformationprocess'", 
                    "'nvolumenamesize'", 
                    "'object'", 
                    "'op_equality'", 
                    "'op_explicit'", 
                    "'opensubkey'", 
                    "'operatingsystem'", 
                    "'operators'", 
                    "'orobject'", 
                    "'parameterizedthreadstart'", 
                    "'path'", 
                    "'pixelformat'", 
                    "'plugin'", 
                    "'point'", 
                    "'poll'", 
                    "'ppaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpadding'", 
                    "'process'", 
                    "'processinformation'", 
                    "'processinformationclass'", 
                    "'processinformationlength'", 
                    "'projectdata'", 
                    "'read'", 
                    "'readallbytes'", 
                    "'readbyte'", 
                    "'receive'", 
                    "'rectangle'", 
                    "'registrykey'", 
                    "'registrykeypermissioncheck'", 
                    "'registryproxy'", 
                    "'registryvaluekind'", 
                    "'remove'", 
                    "'replace'", 
                    "'runtimecompatibilityattribute'", 
                    "'runtimehelpers'", 
                    "'runtimetypehandle'", 
                    "'save'", 
                    "'screen'", 
                    "'selectmode'", 
                    "'send'", 
                    "'sendb'", 
                    "'servercomputer'", 
                    "'sessionendingeventargs'", 
                    "'sessionendingeventhandler'", 
                    "'set_minworkingset'", 
                    "'set_position'", 
                    "'set_receivebuffersize'", 
                    "'set_receivetimeout'", 
                    "'set_sendbuffersize'", 
                    "'set_sendtimeout'", 
                    "'setenvironmentvariable'", 
                    "'setprojecterror'", 
                    "'setvalue'", 
                    "'shell'", 
                    "'size'", 
                    "'sleep'", 
                    "'socket'", 
                    "'socketflags'", 
                    "'space'", 
                    "'specialfolder'", 
                    "'split'", 
                    "'standardmoduleattribute'", 
                    "'start'", 
                    "'stathreadattribute'", 
                    "'stream'", 
                    "'string'", 
                    "'stringbuilder'", 
                    "'strings'", 
                    "'system'", 
                    "'system.diagnostics'", 
                    "'system.drawing'", 
                    "'system.drawing.imaging'", 
                    "'system.io'", 
                    "'system.io.compression'", 
                    "'system.net'", 
                    "'system.net.sockets'", 
                    "'system.reflection'", 
                    "'system.runtime.compilerservices'", 
                    "'system.security.cryptography'", 
                    "'system.text'", 
                    "'system.threading'", 
                    "'system.windows.forms'", 
                    "'systemevents'", 
                    "'tcpclient'", 
                    "'thread'", 
                    "'threadstart'", 
                    "'toarray'", 
                    "'tobase64string'", 
                    "'toboolean'", 
                    "'toint32'", 
                    "'tointeger'", 
                    "'tolong'", 
                    "'tolower'", 
                    "'tostring'", 
                    "'tounicodeex'", 
                    "'toupper'", 
                    "'type'", 
                    "'urn:schemas-microsoft-com:asm.v1'", 
                    "'urn:schemas-microsoft-com:asm.v2'", 
                    "'urn:schemas-microsoft-com:asm.v3'", 
                    "'user32'", 
                    "'user32.dll'", 
                    "'utf-8'", 
                    "'v2.0.50727'", 
                    "'vkcodetounicode'", 
                    "'wdriver'", 
                    "'webclient'", 
                    "'wintitle'", 
                    "'wrapnonexceptionthrows'", 
                    "'write'", 
                    "'writeallbytes'", 
                    "'writebyte'", 
                    "'zero'"
                ]
            }, 
            "version": {}
        }, 
        "size": 24064
    }, 
    "attack-pattern": [
        {
            "created": "2017-05-31T21:31:04.710Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. \n\n===Windows===\n\nExample utilities used to obtain this information are <code>dir</code> and <code>tree</code>. (Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the Windows API.\n\n===Mac and Linux===\n\nIn Mac and Linux, this kind of discovery is accomplished with the <code>ls</code>, <code>find</code>, and <code>locate</code> commands.\n\nDetection: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: File monitoring, Process command-line parameters, Process monitoring\n\nPermissions Required: User, Administrator, SYSTEM\n\nSystem Requirements: Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls", 
            "external_references": [
                {
                    "external_id": "T1083", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1083"
                }, 
                {
                    "description": "Tomonaga, S. (2016, January 26). Windows Commands Abused by Attackers. Retrieved February 2, 2016.", 
                    "source_name": "Windows Commands JPCERT", 
                    "url": "http://blog.jpcert.or.jp/2016/01/windows-commands-abused-by-attackers.html"
                }
            ], 
            "id": "attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "discovery"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "File and Directory Discovery", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "File monitoring", 
                "Process command-line parameters", 
                "Process monitoring"
            ], 
            "x_mitre_permissions_required": [
                "User", 
                "Administrator", 
                "SYSTEM"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ], 
            "x_mitre_system_requirements": [
                "Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:31.584Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to Exfiltration.\n\nAdversaries may search connected removable media on computers they have compromised to find files of interest. Interactive command shells may be in use, and common functionality within cmd may be used to gather information. Some adversaries may also use Automated Collection on removable media.\n\nDetection: Monitor processes and command-line arguments for actions that could be taken to collect files from a system's connected removable media. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: File monitoring, Process monitoring, Process command-line parameters\n\nSystem Requirements: Privileges to access removable media drive and files", 
            "external_references": [
                {
                    "external_id": "T1025", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1025"
                }
            ], 
            "id": "attack-pattern--1b7ba276-eedc-4951-a762-0ceea2c030ec", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "collection"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Data from Removable Media", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "File monitoring", 
                "Process monitoring", 
                "Process command-line parameters"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ], 
            "x_mitre_system_requirements": [
                "Privileges to access removable media drive and files"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:04.307Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture.\n\n===Windows===\n\nExample commands and utilities that obtain this information include <code>ver</code>, Systeminfo, and <code>dir</code> within cmd for identifying information based on present files and directories.\n\n===Mac===\n\nOn Mac, the <code>systemsetup</code> command gives a detailed breakdown of the system, but it requires administrative privileges. Additionally, the <code>system_profiler</code> gives a very detailed breakdown of configurations, firewall rules, mounted volumes, hardware, and many other things without needing elevated permissions.\n\nDetection: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Process command-line parameters, Process monitoring\n\nPermissions Required: User", 
            "external_references": [
                {
                    "external_id": "T1082", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1082"
                }
            ], 
            "id": "attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "discovery"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "System Information Discovery", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Process command-line parameters", 
                "Process monitoring"
            ], 
            "x_mitre_permissions_required": [
                "User"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:25.060Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations.\n\n===Mac===\n\nOn OSX, the native command <code>screencapture</code> is used to capture screenshots.\n\n===Linux===\n\nOn Linux, there is the native command <code>xwd</code>. (Citation: Antiquated Mac Malware)\n\nDetection: Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: API monitoring, Process monitoring, File monitoring", 
            "external_references": [
                {
                    "external_id": "T1113", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1113"
                }, 
                {
                    "description": "Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.", 
                    "source_name": "Antiquated Mac Malware", 
                    "url": "https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/"
                }
            ], 
            "id": "attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "collection"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Screen Capture", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "API monitoring", 
                "Process monitoring", 
                "File monitoring"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:27.342Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries will likely look for details about the network configuration and settings of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig/ifconfig, nbtstat, and route.\n\nDetection: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Process command-line parameters, Process monitoring\n\nPermissions Required: User", 
            "external_references": [
                {
                    "external_id": "T1016", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1016"
                }
            ], 
            "id": "attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "discovery"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "System Network Configuration Discovery", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Process command-line parameters", 
                "Process monitoring"
            ], 
            "x_mitre_permissions_required": [
                "User"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:51.330Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on the system. This may include things such as local firewall rules, anti-virus, and virtualization. These checks may be built into early-stage remote access tools.\n\n===Windows===\n\nExample commands that can be used to obtain security software information are netsh, <code>reg query</code> with Reg, <code>dir</code> with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for.\n\n===Mac===\n\nIt's becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\n\nDetection: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nPlatforms: macOS, Windows\n\nData Sources: File monitoring, Process command-line parameters, Process monitoring\n\nPermissions Required: User, Administrator, SYSTEM", 
            "external_references": [
                {
                    "external_id": "T1063", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1063"
                }
            ], 
            "id": "attack-pattern--241814ae-de3f-4656-b49e-f9a80764d4b7", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "discovery"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Security Software Discovery", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "File monitoring", 
                "Process command-line parameters", 
                "Process monitoring"
            ], 
            "x_mitre_permissions_required": [
                "User", 
                "Administrator", 
                "SYSTEM"
            ], 
            "x_mitre_platforms": [
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:16.408Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Files may be copied from one system to another to stage adversary tools or other files over the course of an operation. Files may be copied from an external adversary-controlled system through the Command and Control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.\n\nAdversaries may also copy files laterally between internal victim systems to support Lateral Movement with remote Execution using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with Windows Admin Shares or Remote Desktop Protocol.\n\nDetection: Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: File monitoring, Packet capture, Process use of network, Netflow/Enclave netflow, Network protocol analysis, Process monitoring\n\nPermissions Required: User\n\nRequires Network: Yes", 
            "external_references": [
                {
                    "external_id": "T1105", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1105"
                }, 
                {
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", 
                    "source_name": "University of Birmingham C2", 
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ], 
            "id": "attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "command-and-control"
                }, 
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "lateral-movement"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Remote File Copy", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "File monitoring", 
                "Packet capture", 
                "Process use of network", 
                "Netflow/Enclave netflow", 
                "Network protocol analysis", 
                "Process monitoring"
            ], 
            "x_mitre_network_requirements": true, 
            "x_mitre_permissions_required": [
                "User"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:25.454Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may target user email to collect sensitive information from a target.\n\nFiles containing email data can be acquired from a user's system, such as Outlook storage or cache files .pst and .ost.\n\nAdversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network.\n\nSome adversaries may acquire user credentials and access externally facing webmail applications, such as Outlook Web Access.\n\nDetection: There are likely a variety of ways an adversary could collect email from a target, each with a different mechanism for detection.\n\nFile access of local system email files for Exfiltration, unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.\n\nMonitor processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nPlatforms: Windows\n\nData Sources: Authentication logs, File monitoring, Process monitoring, Process use of network", 
            "external_references": [
                {
                    "external_id": "T1114", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1114"
                }
            ], 
            "id": "attack-pattern--1608f3e1-598a-42f4-a01a-2e252e81728f", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "collection"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Email Collection", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Authentication logs", 
                "File monitoring", 
                "Process monitoring", 
                "Process use of network"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:19.735Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Credential dumping is the process of obtaining account login and password information, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform\u00a0Lateral Movement\u00a0and access restricted information.\n\nSeveral of the tools mentioned in this technique may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n\n===SAM (Security Accounts Manager)===\n\nThe SAM is a database file that contains local accounts for the host, typically those found with the \u2018net user\u2019 command.  To enumerate the SAM database, system level access is required.\n\u00a0\nA number of tools can be used to retrieve the SAM file through in-memory techniques:\n* pwdumpx.exe \n* gsecdump\n* Mimikatz\n* secretsdump.py\n\nAlternatively, the SAM can be extracted from the Registry with Reg:\n* <code>reg save HKLM\\sam sam</code>\n* <code>reg save HKLM\\system system</code>\n\nCreddump7 can then be used to process the SAM database locally to retrieve hashes. (Citation: GitHub Creddump7)\n\nNotes:\nRid 500 account is the local, in-built administrator.\nRid 501 is the guest account.\nUser accounts start with a RID of 1,000+.\n\n===Cached Credentials===\n\nThe DCC2 (Domain Cached Credentials version 2) hash, used by Windows Vista and newer caches credentials when the domain controller is unavailable.  The number of default cached credentials varies, and this number can be altered per system.  This hash does not allow pass-the-hash style attacks.\n\u00a0\nA number of tools can be used to retrieve the SAM file through in-memory techniques.\n* pwdumpx.exe \n* gsecdump\n* Mimikatz\n\nAlternatively, reg.exe can be used to extract from the Registry and Creddump7 used to gather the credentials.\n\nNotes:\nCached credentials for Windows Vista are derived using PBKDF2.\n\n===Local Security Authority (LSA) Secrets===\n\nWith SYSTEM access to a host, the LSA secrets often allows trivial access from a local account to domain-based account credentials. The Registry is used to store the LSA secrets.\n\u00a0\nWhen services are run under the context of local or domain users, their passwords are stored in the Registry. If auto-logon is enabled, this information will be stored in the Registry as well.\n\u00a0\nA number of tools can be used to retrieve the SAM file through in-memory techniques.\n* pwdumpx.exe \n* gsecdump\n* Mimikatz\n* secretsdump.py\n\nAlternatively, reg.exe can be used to extract from the Registry and Creddump7 used to gather the credentials.\n\nNotes:\nThe passwords extracted by his mechanism are\u00a0UTF-16\u00a0encoded, which means that they are returned in\u00a0plaintext.\nWindows 10 adds protections for LSA Secrets described in Mitigation.\n\n===NTDS from Domain Controller===\n\nActive Directory stores information about members of the domain including devices and users to verify credentials and define access rights. The Active Directory domain database is stored in the NTDS.dit file. By default the NTDS file will be located in %SystemRoot%\\NTDS\\Ntds.dit of a domain controller. (Citation: Wikipedia Active Directory)\n \nThe following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.\n\u00a0\n* Volume Shadow Copy\n* secretsdump.py\n* Using the in-built Windows tool, ntdsutil.exe\n* Invoke-NinjaCopy\n\n===Group Policy Preference (GPP) Files===\n\nGroup Policy Preferences (GPP) are tools that allowed administrators to create domain policies with embedded credentials. These policies, amongst other things, allow administrators to set local accounts.\n\u00a0\nThese group policies are stored in SYSVOL on a domain controller, this means that any domain user can view the SYSVOL share and decrypt the password (the AES private key was leaked on-line. (Citation: Microsoft GPP Key) (Citation: SRD GPP)\n\u00a0\nThe following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:\n\u00a0\n* Metasploit\u2019s post exploitation module: \"post/windows/gather/credentials/gpp\"\n* Get-GPPPassword (Citation: Obscuresecurity Get-GPPPassword)\n* gpprefdecrypt.py\n\u00a0\nNotes:\nOn the SYSVOL share, the following can be used to enumerate potential XML files.\ndir /s *.xml\n\n===Service Principle Names (SPNs)===\n\nSee Kerberoasting.\n\n===Plaintext Credentials===\n\nAfter a user logs on to a system, a variety of credentials are generated and stored in the\u00a0Local Security Authority Subsystem Service\u00a0(LSASS) process in memory. These credentials can be harvested by a administrative user or SYSTEM.\n\u00a0\nSSPI (Security Support Provider Interface) functions as a common interface to several Security Support Providers (SSPs):\u00a0A Security Support Provider is a\u00a0dynamic-link library\u00a0(DLL) that makes one or more security packages available to applications.\n\nThe following SSPs can be used to access credentials:\n\u00a0\nMsv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\nWdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges. (Citation: TechNet Blogs Credential Protection)\nKerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\nCredSSP: \u00a0Provides SSO and\u00a0Network Level Authentication\u00a0for\u00a0Remote Desktop Services. (Citation: Microsoft CredSSP)\n\u00a0\nThe following tools can be used to enumerate credentials:\n\u00a0\n* Windows Credential Editor\n* Mimikatz\n\u00a0\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\n\u00a0\nFor example, on the target host use procdump:\n* <code>procdump -ma lsass.exe lsass_dump</code>\n\u00a0\nLocally, mimikatz can be run:\n* <code>sekurlsa::Minidump\u00a0lsassdump.dmp</code>\n* <code>sekurlsa::logonPasswords</code>\n\n===DCSync=== \n\nDCSync is a variation on credential dumping which can be used to acquire sensitive information from a domain controller. Rather than executing recognizable malicious code, the action works by abusing the domain controller's  application programming interface (API) (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) (Citation: Wine API samlib.dll) to simulate the replication process from a remote domain controller.  Any members of the Administrators, Domain Admins, Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data  (Citation: ADSecurity Mimikatz DCSync) from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a Golden Ticket for use in Pass the Ticket (Citation: Harmj0y Mimikatz and DCSync) or change an account's password as noted in Account Manipulation. (Citation: InsiderThreat ChangeNTLM July 2017) DCSync functionality has been included in the \"lsadump\" module in Mimikatz. (Citation: GitHub Mimikatz lsadump Module) Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol. (Citation: Microsoft NRPC Dec 2017)\n\nDetection: Common credential dumpers such as Mimikatz access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective Process Injection to reduce potential indicators of malicious activity.\n\nHash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised Valid Accounts in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, (Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nMonitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync. (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Note: Domain controllers may not log replication requests originating from the default domain controller account. (Citation: Harmj0y DCSync Sept 2015). Also monitor for network protocols  (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft NRPC Dec 2017) and other replication requests (Citation: Microsoft SAMR) from IPs not associated with known domain controllers. (Citation: AdSecurity DCSync Sept 2015)\n\nPlatforms: Windows\n\nData Sources: API monitoring, Process command-line parameters, Process monitoring, PowerShell logs\n\nPermissions Required: Administrator, SYSTEM\n\nContributors: Vincent Le Toux, Ed Williams, Trustwave, SpiderLabs", 
            "external_references": [
                {
                    "external_id": "T1003", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1003"
                }, 
                {
                    "description": "PowerSploit. (n.d.).  Retrieved December 4, 2014.", 
                    "source_name": "Powersploit", 
                    "url": "https://github.com/mattifestation/PowerSploit"
                }, 
                {
                    "description": "Metcalf, S. (2015, September 25). Mimikatz DCSync Usage, Exploitation, and Detection. Retrieved August 7, 2017.", 
                    "source_name": "ADSecurity Mimikatz DCSync", 
                    "url": "https://adsecurity.org/?p=1729"
                }, 
                {
                    "description": "Schroeder, W. (2015, September 22). Mimikatz and DCSync and ExtraSids, Oh My. Retrieved August 7, 2017.", 
                    "source_name": "Harmj0y Mimikatz and DCSync", 
                    "url": "http://www.harmj0y.net/blog/redteaming/mimikatz-and-dcsync-and-extrasids-oh-my/"
                }, 
                {
                    "description": "Deply, B., Le Toux, V. (2016, June 5). module ~ lsadump. Retrieved August 7, 2017.", 
                    "source_name": "GitHub Mimikatz lsadump Module", 
                    "url": "https://github.com/gentilkiwi/mimikatz/wiki/module-~-lsadump"
                }, 
                {
                    "description": "Microsoft. (2017, December 1). MS-DRSR Directory Replication Service (DRS) Remote Protocol. Retrieved December 4, 2017.", 
                    "source_name": "Microsoft DRSR Dec 2017", 
                    "url": "https://msdn.microsoft.com/library/cc228086.aspx"
                }, 
                {
                    "description": "Microsoft. (n.d.). IDL_DRSGetNCChanges (Opnum 3). Retrieved December 4, 2017.", 
                    "source_name": "Microsoft GetNCCChanges", 
                    "url": "https://msdn.microsoft.com/library/dd207691.aspx"
                }, 
                {
                    "description": "SambaWiki. (n.d.). DRSUAPI. Retrieved December 4, 2017.", 
                    "source_name": "Samba DRSUAPI", 
                    "url": "https://wiki.samba.org/index.php/DRSUAPI"
                }, 
                {
                    "description": "Wine API. (n.d.). samlib.dll. Retrieved December 4, 2017.", 
                    "source_name": "Wine API samlib.dll", 
                    "url": "https://source.winehq.org/WineAPI/samlib.html"
                }, 
                {
                    "description": "Warren, J. (2017, July 11). Manipulating User Passwords with Mimikatz. Retrieved December 4, 2017.", 
                    "source_name": "InsiderThreat ChangeNTLM July 2017", 
                    "url": "https://blog.stealthbits.com/manipulating-user-passwords-with-mimikatz-SetNTLM-ChangeNTLM"
                }, 
                {
                    "description": "Microsoft. (2017, December 1). MS-NRPC - Netlogon Remote Protocol. Retrieved December 6, 2017.", 
                    "source_name": "Microsoft NRPC Dec 2017", 
                    "url": "https://msdn.microsoft.com/library/cc237008.aspx"
                }, 
                {
                    "description": "Metcalf, S. (2015, September 25). Mimikatz DCSync Usage, Exploitation, and Detection. Retrieved December 4, 2017.", 
                    "source_name": "AdSecurity DCSync Sept 2015", 
                    "url": "https://adsecurity.org/?p=1729"
                }, 
                {
                    "description": "Schroeder, W. (2015, September 22). Mimikatz and DCSync and ExtraSids, Oh My. Retrieved December 4, 2017.", 
                    "source_name": "Harmj0y DCSync Sept 2015", 
                    "url": "http://www.harmj0y.net/blog/redteaming/mimikatz-and-dcsync-and-extrasids-oh-my/"
                }, 
                {
                    "description": "Microsoft. (n.d.). MS-SAMR Security Account Manager (SAM) Remote Protocol (Client-to-Server) - Transport. Retrieved December 4, 2017.", 
                    "source_name": "Microsoft SAMR", 
                    "url": "https://msdn.microsoft.com/library/cc245496.aspx"
                }, 
                {
                    "description": "Flathers, R. (2018, February 19). creddump7. Retrieved April 11, 2018.", 
                    "source_name": "GitHub Creddump7", 
                    "url": "https://github.com/Neohapsis/creddump7"
                }, 
                {
                    "description": "Wikipedia. (2018, March 10). Active Directory. Retrieved April 11, 2018.", 
                    "source_name": "Wikipedia Active Directory", 
                    "url": "https://en.wikipedia.org/wiki/Active%20Directory"
                }, 
                {
                    "description": "Microsoft. (n.d.). 2.2.1.1.4 Password Encryption. Retrieved April 11, 2018.", 
                    "source_name": "Microsoft GPP Key", 
                    "url": "https://msdn.microsoft.com/library/cc422924.aspx"
                }, 
                {
                    "description": "Security Research and Defense. (2014, May 13). MS14-025: An Update for Group Policy Preferences. Retrieved January 28, 2015.", 
                    "source_name": "SRD GPP", 
                    "url": "http://blogs.technet.com/b/srd/archive/2014/05/13/ms14-025-an-update-for-group-policy-preferences.aspx"
                }, 
                {
                    "description": "Campbell, C. (2012, May 24). GPP Password Retrieval with PowerShell. Retrieved April 11, 2018.", 
                    "source_name": "Obscuresecurity Get-GPPPassword", 
                    "url": "https://obscuresecurity.blogspot.co.uk/2012/05/gpp-password-retrieval-with-powershell.html"
                }, 
                {
                    "description": "Wilson, B. (2016, April 18). The Importance of KB2871997 and KB2928120 for Credential Protection. Retrieved April 11, 2018.", 
                    "source_name": "TechNet Blogs Credential Protection", 
                    "url": "https://blogs.technet.microsoft.com/askpfeplat/2016/04/18/the-importance-of-kb2871997-and-kb2928120-for-credential-protection/"
                }, 
                {
                    "description": "Microsoft. (2008, July 25). Credential Security Service Provider and SSO for Terminal Services Logon. Retrieved April 11, 2018.", 
                    "source_name": "Microsoft CredSSP", 
                    "url": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-vista/cc749211(v=ws.10)"
                }
            ], 
            "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "credential-access"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Credential Dumping", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "Vincent Le Toux", 
                "Ed Williams, Trustwave, SpiderLabs"
            ], 
            "x_mitre_data_sources": [
                "API monitoring", 
                "Process command-line parameters", 
                "Process monitoring", 
                "PowerShell logs"
            ], 
            "x_mitre_permissions_required": [
                "Administrator", 
                "SYSTEM"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:48.728Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software running on systems within the network.\n\n===Windows===\n\nAn example command that would obtain details on processes is \"tasklist\" using the Tasklist utility.\n\n===Mac and Linux===\n\nIn Mac and Linux, this is accomplished with the <code>ps</code> command.\n\nDetection: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Process command-line parameters, Process monitoring\n\nPermissions Required: User, Administrator, SYSTEM\n\nSystem Requirements: Administrator, SYSTEM may provide better process ownership details", 
            "external_references": [
                {
                    "external_id": "T1057", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1057"
                }
            ], 
            "id": "attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "discovery"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Process Discovery", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Process command-line parameters", 
                "Process monitoring"
            ], 
            "x_mitre_permissions_required": [
                "User", 
                "Administrator", 
                "SYSTEM"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ], 
            "x_mitre_system_requirements": [
                "Administrator, SYSTEM may provide better process ownership details"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:10.728Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Use of a standard non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. (Citation: Wikipedia OSI) Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), and transport layer protocols, such as the User Datagram Protocol (UDP).\n\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts; (Citation: Microsoft ICMP) however, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.\n\nDetection: Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\n\nPlatforms: Linux, macOS, Windows\n\nRequires Network: Yes", 
            "external_references": [
                {
                    "external_id": "T1095", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1095"
                }, 
                {
                    "description": "Wikipedia. (n.d.). List of network protocols (OSI model). Retrieved December 4, 2014.", 
                    "source_name": "Wikipedia OSI"
                }, 
                {
                    "description": "Microsoft. (n.d.). Internet Control Message Protocol (ICMP) Basics. Retrieved December 1, 2014.", 
                    "source_name": "Microsoft ICMP", 
                    "url": "http://support.microsoft.com/KB/170292"
                }, 
                {
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", 
                    "source_name": "University of Birmingham C2", 
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ], 
            "id": "attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "command-and-control"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Standard Non-Application Layer Protocol", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_network_requirements": true, 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }
    ], 
    "hash": "a2bb8303e8fe1bb44c92467f63b8e962fe1ca773e5a6825d6ab8eb117c79cef3", 
    "name": "Crimson"
}