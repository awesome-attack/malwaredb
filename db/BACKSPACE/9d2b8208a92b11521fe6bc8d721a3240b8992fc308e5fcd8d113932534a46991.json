{
    "alias": "Lecna", 
    "analysis": {
        "_id": {
            "$oid": "5ba55496ba80ffe26b51506a"
        }, 
        "description": "PE32 executable (GUI) Intel 80386, for MS Windows", 
        "file_id": "075e03b4a438e226044f1676f39f4cd4ad1d3037", 
        "fuzzy_hash": "768:omXN0kgKBYUqzM0/G3eTQ/kI7QXe0IUUiM95Zxp2:LmhKBYUqzvOuT5xBIVJ99p2", 
        "hash": {
            "md5": "2e0b428b44c7d342c3a1b9a264131913", 
            "sha1": "075e03b4a438e226044f1676f39f4cd4ad1d3037", 
            "sha2": "9d2b8208a92b11521fe6bc8d721a3240b8992fc308e5fcd8d113932534a46991"
        }, 
        "mime_type": "application/x-dosexec", 
        "particular_header": {
            "av_analysis": "Not_implemented", 
            "certificate": {}, 
            "child_of": "Not_implemented", 
            "cypher": "Not_implemented", 
            "date": "'0x48C3A19A [SUSPICIOUS]'", 
            "ep": "'0x403296 .text 0/4'", 
            "exports": {}, 
            "file_entropy": 4.0600634584793385, 
            "headers": {
                "dos_header": {
                    "cblp": "'0x90'", 
                    "cp": "'0x3'", 
                    "cparhdr": "'0x4'", 
                    "crlc": "'0x0'", 
                    "cs": "'0x0'", 
                    "csum": "'0x0'", 
                    "ip": "'0x0'", 
                    "lfanew": "'0xe0'", 
                    "lfarlc": "'0x40'", 
                    "magic": "'0x5a4d'", 
                    "maxalloc": "'0xffff'", 
                    "minalloc": "'0x0'", 
                    "oemid": "'0x0'", 
                    "oeminfo": "'0x0'", 
                    "ovno": "'0x0'", 
                    "res": "'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", 
                    "res2": "'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", 
                    "sp": "'0xb8'", 
                    "ss": "'0x0'"
                }, 
                "file_header": {
                    "Characteristics": "'0x10f'", 
                    "Machine": "'0x14c'", 
                    "NumberOfSections": "'0x4'", 
                    "NumberOfSymbols": "'0x0'", 
                    "PointerToSymbolTable": "'0x0'", 
                    "SizeOfOptionalHeader": "'0xe0'", 
                    "TimeDateStamp": "'0x48c3a19a'"
                }, 
                "nt_header": {
                    "Signature": "'0x4550'"
                }, 
                "optional_header": {
                    "AddressOfEntryPoint": "'0x3296'", 
                    "BaseOfCode": "'0x1000'", 
                    "CheckSum": "'0x0'", 
                    "DllCharacteristics": "'0x0'", 
                    "FileAlignment": "'0x1000'", 
                    "ImageBase": "'0x400000'", 
                    "LoaderFlags": "'0x0'", 
                    "Magic": "'0x10b'", 
                    "MajorImageVersion": "'0x0'", 
                    "MajorLinkerVersion": "'0x6'", 
                    "MajorOperatingSystemVersion": "'0x4'", 
                    "MajorSubsystemVersion": "'0x4'", 
                    "MinorImageVersion": "'0x0'", 
                    "MinorLinkerVersion": "'0x0'", 
                    "MinorOperatingSystemVersion": "'0x0'", 
                    "MinorSubsystemVersion": "'0x0'", 
                    "NumberOfRvaAndSizes": "'0x10'", 
                    "Reserved1": "'0x0'", 
                    "SectionAlignment": "'0x1000'", 
                    "SizeOfCode": "'0x3000'", 
                    "SizeOfHeaders": "'0x1000'", 
                    "SizeOfHeapCommit": "'0x1000'", 
                    "SizeOfHeapReserve": "'0x100000'", 
                    "SizeOfImage": "'0x8000'", 
                    "SizeOfInitializedData": "'0x4000'", 
                    "SizeOfStackCommit": "'0x1000'", 
                    "SizeOfStackReserve": "'0x100000'", 
                    "SizeOfUninitializedData": "'0x0'", 
                    "Subsystem": "'0x2'"
                }
            }, 
            "imports": [
                {
                    "functions": [
                        "'regclosekey'", 
                        "'regsetvalueexa'", 
                        "'regqueryvalueexa'", 
                        "'regcreatekeyexa'", 
                        "'regopenkeyexa'"
                    ], 
                    "lib": "'advapi32.dll'"
                }, 
                {
                    "functions": [
                        "'gethostname'", 
                        "'gethostbyname'", 
                        "'wsagetlasterror'", 
                        "'inet_ntoa'", 
                        "'inet_addr'", 
                        "'socket'", 
                        "'ioctlsocket'", 
                        "'htons'", 
                        "'connect'", 
                        "'select'", 
                        "'closesocket'", 
                        "'recv'", 
                        "'wsastartup'", 
                        "'wsacleanup'"
                    ], 
                    "lib": "'ws2_32.dll'"
                }, 
                {
                    "functions": [
                        "'_exit'", 
                        "'_xcptfilter'", 
                        "'exit'", 
                        "'_acmdln'", 
                        "'__getmainargs'", 
                        "'_initterm'", 
                        "'__setusermatherr'", 
                        "'_adjust_fdiv'", 
                        "'__p__commode'", 
                        "'__p__fmode'", 
                        "'__set_app_type'", 
                        "'_except_handler3'", 
                        "'_controlfp'", 
                        "'fwrite'", 
                        "'fopen'", 
                        "'fclose'", 
                        "'strcmp'", 
                        "'sprintf'", 
                        "'free'", 
                        "'memcpy'", 
                        "'strstr'", 
                        "'strchr'", 
                        "'atoi'", 
                        "'memset'", 
                        "'rename'", 
                        "'strlen'", 
                        "'strrchr'", 
                        "'time'", 
                        "'srand'", 
                        "'rand'", 
                        "'strcpy'", 
                        "'strcat'", 
                        "'malloc'", 
                        "'_eh_prolog'", 
                        "'__cxxframehandler'", 
                        "'_itoa'"
                    ], 
                    "lib": "'msvcrt.dll'"
                }, 
                {
                    "functions": [
                        "'getstartupinfoa'", 
                        "'getmodulehandlea'", 
                        "'setcurrentdirectorya'", 
                        "'createprocessa'", 
                        "'getfiletime'", 
                        "'setfiletime'", 
                        "'getfileattributesa'", 
                        "'findnextfilea'", 
                        "'findfirstfilea'", 
                        "'findclose'", 
                        "'getlogicaldrivestringsa'", 
                        "'getdrivetypea'", 
                        "'getvolumeinformationa'", 
                        "'createfilea'", 
                        "'writefile'", 
                        "'gettickcount'", 
                        "'getversionexa'", 
                        "'getsystemdefaultlangid'", 
                        "'openmutexa'", 
                        "'closehandle'", 
                        "'lstrcmpia'", 
                        "'exitprocess'", 
                        "'setevent'", 
                        "'waitforsingleobject'", 
                        "'sleep'", 
                        "'createmutexa'", 
                        "'setfileattributesa'", 
                        "'deletefilea'", 
                        "'copyfilea'", 
                        "'getwindowsdirectorya'", 
                        "'getmodulefilenamea'", 
                        "'loadlibrarya'", 
                        "'getprocaddress'", 
                        "'getcomputernamea'", 
                        "'freelibrary'", 
                        "'createeventa'", 
                        "'createthread'"
                    ], 
                    "lib": "'kernel32.dll'"
                }
            ], 
            "imports_tree": "added", 
            "packer_detection": "Unknown", 
            "packer_version": "Not_implemented", 
            "res_entries": [
                {
                    "lang": "'LANG_CHINESE'", 
                    "name": "'RT_ICON'", 
                    "rva": "'0x60f0'", 
                    "sha1": "296a407e4ea3888826c25c0f43ed015285e3e6db", 
                    "size": "'0x10a8'", 
                    "sublang": "'SUBLANG_CHINESE_SIMPLIFIED'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_CHINESE'", 
                    "name": "'RT_GROUP_ICON'", 
                    "rva": "'0x7198'", 
                    "sha1": "0b40150c95fc2c6414c90d44ee78b8d8814b3393", 
                    "size": "'0x14'", 
                    "sublang": "'SUBLANG_CHINESE_SIMPLIFIED'", 
                    "type": "'MS Windows icon resource - 1 icon, 32x32'"
                }, 
                {
                    "lang": "'LANG_CHINESE'", 
                    "name": "'RT_VERSION'", 
                    "rva": "'0x71b0'", 
                    "sha1": "9165822ee8a4bb3bd4011f48cef709bbd21bf6b6", 
                    "size": "'0x39c'", 
                    "sublang": "'SUBLANG_CHINESE_SIMPLIFIED'", 
                    "type": "'data'"
                }
            ], 
            "sections": [
                {
                    "characteristics": "0x60000020", 
                    "entropy": 5.087321129701981, 
                    "fuzzy_hash": "192:wGHt154kgKBY5YrIJa7JblLqnfLMnelahwBhyTu/G3n86QPLv:LN0kgKBY5KtxLqnfLMnanhIu/G3eT", 
                    "md5": "1c25ce31cac0677b34d1eaa55a6f40e7", 
                    "name": "'.text\\x00\\x00\\x00'", 
                    "sha1": "17d7d14d5c3ed75d553b0e5febadff0601f29e89", 
                    "sha2": "020b96de5283c5eecc364b15d2fa6f3fa5040ff6967a8b8120b9284678b8ed2b", 
                    "size_raw_data": 12288, 
                    "virtual_size": 9274, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0x40000040", 
                    "entropy": 3.044371421906417, 
                    "fuzzy_hash": "48:22OOz+Y8Ic2OOz+Y8fZ+2p6RCPtboyl1hQAGBqEDyZ0TIsjt:27Eqz7EqfANCPtboynhQ30kMsj", 
                    "md5": "9ad8a3c519d918522ac3bcb124208168", 
                    "name": "'.rdata\\x00\\x00'", 
                    "sha1": "2f2ea4935d3b0864245c3381fda324488d61aae2", 
                    "sha2": "fc407a620d8606c307e41c9f9d95f234e6cc7c65ca42726da69edfb81be2aeec", 
                    "size_raw_data": 4096, 
                    "virtual_size": 2158, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0xc0000040", 
                    "entropy": 1.5359788086706718, 
                    "fuzzy_hash": "12:BLr8g/r8OrL/BRShK+R/3V0/n+Wj3gKumx2xVjX/ffaMAIKLGi75vQbhypl/J5Ex:BLxDrtRSk+R/3VltmAxVpBK1vghypt", 
                    "md5": "44b30a84b89b719ab507be092ab5b7ea", 
                    "name": "'.data\\x00\\x00\\x00'", 
                    "sha1": "9a7238c2e89a905ee6f80276d8581e531367b456", 
                    "sha2": "2d50cabc6cf79a751acc90bb25ffdfff5d2eb06ea32a6edb9ae8d4b821daf2c3", 
                    "size_raw_data": 4096, 
                    "virtual_size": 3016, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0x40000040", 
                    "entropy": 4.480316570473697, 
                    "fuzzy_hash": "96:G7IXzEsZT4nmwL3wJDzAAUJ46AuyhNaZoOhx/cWzva8m0rpWL:G0IUTfwrwJgAUJD2aZ1ZcWO8ppWL", 
                    "md5": "7117460b970593a99c35d308b9c5a2ff", 
                    "name": "'.rsrc\\x00\\x00\\x00'", 
                    "sha1": "003b810faed107815e3d15031231ff540e016dc3", 
                    "sha2": "6a7ce2cd2a7b91df0fa13be0c94a948e32fd7e94c3f2774cabd471f2c5f9c13a", 
                    "size_raw_data": 8192, 
                    "virtual_size": 5456, 
                    "write_executable": "False"
                }
            ], 
            "strings": {
                "hidden_imports": [
                    "'send'"
                ], 
                "interesting": [
                    "'.exe'", 
                    "'/index.htm'"
                ], 
                "raw_strings": [
                    "' http/1.0'", 
                    "' msie 6.0'", 
                    "' win32)'", 
                    "'%(a@'", 
                    "'%,a@'", 
                    "'%4a@'", 
                    "'%8a@'", 
                    "'%lx@'", 
                    "'%px@'", 
                    "'%u:%u'", 
                    "',j.p'", 
                    "'-px@'", 
                    "'.exe'", 
                    "'/index.htm'", 
                    "'0cst3n'", 
                    "'0errskj'", 
                    "'0jrwyrp'", 
                    "'0kpttx'", 
                    "'0xhv3n'", 
                    "'200 ok'", 
                    "'5 t@'", 
                    "'5$t@'", 
                    "'5,t@'", 
                    "'50a@'", 
                    "'54@@'", 
                    "'54t@'", 
                    "'58t@'", 
                    "'5<t@'", 
                    "'5d@@'", 
                    "'5ht@'", 
                    "'5hx@'", 
                    "'5l@@'", 
                    "'5lt@'", 
                    "'5pt@'", 
                    "'5tt@'", 
                    "'5x@@'", 
                    "'7qtr'", 
                    "'95,t@'", 
                    "'9=dx@'", 
                    "'=$t@'", 
                    "'=,t@'", 
                    "'=<a@'", 
                    "'=@t@'", 
                    "'=h@@'", 
                    "'=ht@'", 
                    "'=hx@'", 
                    "'=lx@'", 
                    "'=t@@'", 
                    "'=ta@'", 
                    "'=x@@'", 
                    "'>at?9'", 
                    "']phxx'", 
                    "']phxxi'", 
                    "'cght3k'", 
                    "'content-length: '", 
                    "'currentversion'", 
                    "'euv5p'", 
                    "'fvhxt@'", 
                    "'get '", 
                    "'gymewto'", 
                    "'h$r@'", 
                    "'hlq@'", 
                    "'hlr@'", 
                    "'host: '", 
                    "'hostid'", 
                    "'hpp@'", 
                    "'hsvw'", 
                    "'http://'", 
                    "'http='", 
                    "'hxr@'", 
                    "'iexpl0re'", 
                    "'internet settings'", 
                    "'j-h@p@'", 
                    "'jphlq@'", 
                    "'microsoft'", 
                    "'mo5orp'", 
                    "'nhgsgj2'", 
                    "'nkfvtyvn'", 
                    "'post '", 
                    "'ppppp'", 
                    "'pragma: no-cache'", 
                    "'proxy-connection: keep-alive'", 
                    "'proxyenable'", 
                    "'proxyserver'", 
                    "'pssh'", 
                    "'pssssss'", 
                    "'pwsw'", 
                    "'pwvw'", 
                    "'pwwh'", 
                    "'pwwhe(@'", 
                    "'qsvwh'", 
                    "'qvwh'", 
                    "'qwpw'", 
                    "'send'", 
                    "'sh@q@'", 
                    "'software'", 
                    "'spsh'", 
                    "'spvsh'", 
                    "'sqsp'", 
                    "'svwh'", 
                    "'swpv'", 
                    "'t=@j'", 
                    "'tkwh'", 
                    "'tqix'", 
                    "'u.hdr@'", 
                    "'user-agent: mozilla/4.0 (compatible'", 
                    "'vh@p@'", 
                    "'vh@q@'", 
                    "'vhlq@'", 
                    "'vpsvh'", 
                    "'vpvh'", 
                    "'vyyu@'", 
                    "'windows'", 
                    "'wpvwh'", 
                    "'xky:p'", 
                    "'xpvss'", 
                    "'xyz2'", 
                    "'xyz2ngu'", 
                    "'y9-px@'", 
                    "'yywss'", 
                    "'ztxr'"
                ]
            }, 
            "version": {
                "fixed_file_info": {
                    "FileDateLS": "'0x0'", 
                    "FileDateMS": "'0x0'", 
                    "FileFlags": "'0x8'", 
                    "FileFlagsMask": "'0x3f'", 
                    "FileOS": "'0x0'", 
                    "FileSubtype": "'0x0'", 
                    "FileType": "'0x0'", 
                    "FileVersionLS": "'0xb720884'", 
                    "FileVersionMS": "'0x60000'", 
                    "ProductVersionLS": "'0xb720884'", 
                    "ProductVersionMS": "'0x60000'", 
                    "Signature": "'0xfeef04bd'", 
                    "StrucVersion": "'0x10000'"
                }, 
                "string_file_info": {
                    "Comments": "None", 
                    "CompanyName": "Microsoft Corporation", 
                    "FileDescription": "Internet Explorer", 
                    "FileVersion": "6.00.2900.2180 (xpsp_sp2_rtm.040803-2158)", 
                    "InternalName": "iexplore", 
                    "LangID": "000004b0", 
                    "LegalCopyright": "(C) Microsoft Corporation. All rights reserved.", 
                    "LegalTrademarks": "None", 
                    "OriginalFilename": "IEXPLORE.EXE", 
                    "PrivateBuild": "None", 
                    "ProductName": "Microsoft(R) Windows(R) Operating System", 
                    "ProductVersion": "6.00.2900.2180", 
                    "SpecialBuild": "None"
                }, 
                "version_info": {
                    "Length": "'0x39c'", 
                    "Type": "'0x0'", 
                    "ValueLength": "'0x34'"
                }
            }
        }, 
        "size": 32768
    }, 
    "attack-pattern": [
        {
            "created": "2017-05-31T21:30:49.546Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Command-line interfaces provide a way of interacting with computer systems and is a common feature across many types of operating system platforms. (Citation: Wikipedia Command-Line Interface) One example command-line interface on Windows systems is cmd, which can be used to perform a number of tasks including execution of other software. Command-line interfaces can be interacted with locally or remotely via a remote desktop application, reverse shell session, etc. Commands that are executed run with the current permission level of the command-line interface process unless the command includes process invocation that changes permissions context for that execution (e.g. Scheduled Task).\n\nAdversaries may use command-line interfaces to interact with systems and execute other software during the course of an operation.\n\nDetection: Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.\n\nPlatforms: Linux, Windows, macOS\n\nData Sources: Process command-line parameters, Process monitoring\n\nPermissions Required: Administrator, SYSTEM, User\n\nRemote Support: No", 
            "external_references": [
                {
                    "external_id": "T1059", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1059"
                }, 
                {
                    "description": "Wikipedia. (2016, June 26). Command-line interface. Retrieved June 27, 2016.", 
                    "source_name": "Wikipedia Command-Line Interface", 
                    "url": "https://en.wikipedia.org/wiki/Command-line%20interface"
                }
            ], 
            "id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "execution"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Command-Line Interface", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Process command-line parameters", 
                "Process monitoring"
            ], 
            "x_mitre_permissions_required": [
                "Administrator", 
                "SYSTEM", 
                "User"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "Windows", 
                "macOS"
            ], 
            "x_mitre_remote_support": false
        }, 
        {
            "created": "2017-05-31T21:31:15.935Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions. Use of multiple stages may obfuscate the command and control channel to make detection more difficult.\n\nRemote access tools will call back to the first-stage command and control server for instructions. The first stage may have automated capabilities to collect basic host information, update tools, and upload additional files. A second remote access tool (RAT) could be uploaded at that point to redirect the host to the second-stage command and control server. The second stage will likely be more fully featured and allow the adversary to interact with the system through a reverse shell and additional RAT features.\n\nThe different stages will likely be hosted separately with no overlapping infrastructure. The loader may also have backup first-stage callbacks or Fallback Channels in case the original first-stage communication path is discovered and blocked.\n\nDetection: Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure. Relating subsequent actions that may result from Discovery of the system and network information or Lateral Movement to the originating process may also yield useful data.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Netflow/Enclave netflow, Network device logs, Network protocol analysis, Packet capture, Process use of network\n\nRequires Network: Yes", 
            "external_references": [
                {
                    "external_id": "T1104", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1104"
                }
            ], 
            "id": "attack-pattern--84e02621-8fdf-470f-bd58-993bb6a89d91", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "command-and-control"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Multi-Stage Channels", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Netflow/Enclave netflow", 
                "Network device logs", 
                "Network protocol analysis", 
                "Packet capture", 
                "Process use of network"
            ], 
            "x_mitre_network_requirements": true, 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:56.776Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may communicate using a common, standardized application layer protocol such as HTTP, HTTPS, SMTP, or DNS to avoid detection by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n\nFor connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are RPC, SSH, or RDP.\n\nDetection: Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used. (Citation: University of Birmingham C2)\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Packet capture, Netflow/Enclave netflow, Process use of network, Malware reverse engineering, Process monitoring\n\nRequires Network: Yes", 
            "external_references": [
                {
                    "external_id": "T1071", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1071"
                }, 
                {
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", 
                    "source_name": "University of Birmingham C2", 
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ], 
            "id": "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "command-and-control"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Standard Application Layer Protocol", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Packet capture", 
                "Netflow/Enclave netflow", 
                "Process use of network", 
                "Malware reverse engineering", 
                "Process monitoring"
            ], 
            "x_mitre_network_requirements": true, 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:04.710Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. \n\n===Windows===\n\nExample utilities used to obtain this information are <code>dir</code> and <code>tree</code>. (Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the Windows API.\n\n===Mac and Linux===\n\nIn Mac and Linux, this kind of discovery is accomplished with the <code>ls</code>, <code>find</code>, and <code>locate</code> commands.\n\nDetection: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: File monitoring, Process command-line parameters, Process monitoring\n\nPermissions Required: User, Administrator, SYSTEM\n\nSystem Requirements: Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls", 
            "external_references": [
                {
                    "external_id": "T1083", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1083"
                }, 
                {
                    "description": "Tomonaga, S. (2016, January 26). Windows Commands Abused by Attackers. Retrieved February 2, 2016.", 
                    "source_name": "Windows Commands JPCERT", 
                    "url": "http://blog.jpcert.or.jp/2016/01/windows-commands-abused-by-attackers.html"
                }
            ], 
            "id": "attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "discovery"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "File and Directory Discovery", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "File monitoring", 
                "Process command-line parameters", 
                "Process monitoring"
            ], 
            "x_mitre_permissions_required": [
                "User", 
                "Administrator", 
                "SYSTEM"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ], 
            "x_mitre_system_requirements": [
                "Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:23.587Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in Persistence and Execution.\n\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility Reg may be used for local or remote Registry modification. (Citation: Microsoft Reg) Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API (see examples).\n\nThe Registry of a remote system may be modified to aid in execution of files as part of Lateral Movement. It requires the remote Registry service to be running on the target system. (Citation: Microsoft Remote) Often Valid Accounts are required, along with access to the remote system's Windows Admin Shares for RPC communication.\n\nDetection: Modifications to the Registry are normal and occur throughout typical use of the Windows operating system. Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.\n\nMonitor processes and command-line arguments for actions that could be taken to change or delete information in the Registry. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell, which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nPlatforms: Windows\n\nData Sources: Windows Registry, File monitoring, Process monitoring, Process command-line parameters\n\nDefense Bypassed: Host forensic analysis\n\nPermissions Required: User, Administrator, SYSTEM\n\nContributors: Bartosz Jerzman, Travis Smith, Tripwire", 
            "external_references": [
                {
                    "external_id": "T1112", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1112"
                }, 
                {
                    "description": "Microsoft. (2012, April 17). Reg. Retrieved May 1, 2015.", 
                    "source_name": "Microsoft Reg", 
                    "url": "https://technet.microsoft.com/en-us/library/cc732643.aspx"
                }, 
                {
                    "description": "Microsoft. (n.d.). Enable the Remote Registry Service. Retrieved May 1, 2015.", 
                    "source_name": "Microsoft Remote", 
                    "url": "https://technet.microsoft.com/en-us/library/cc754820.aspx"
                }
            ], 
            "id": "attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "defense-evasion"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Modify Registry", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "Bartosz Jerzman", 
                "Travis Smith, Tripwire"
            ], 
            "x_mitre_data_sources": [
                "Windows Registry", 
                "File monitoring", 
                "Process monitoring", 
                "Process command-line parameters"
            ], 
            "x_mitre_defense_bypassed": [
                "Host forensic analysis"
            ], 
            "x_mitre_permissions_required": [
                "User", 
                "Administrator", 
                "SYSTEM"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:04.307Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture.\n\n===Windows===\n\nExample commands and utilities that obtain this information include <code>ver</code>, Systeminfo, and <code>dir</code> within cmd for identifying information based on present files and directories.\n\n===Mac===\n\nOn Mac, the <code>systemsetup</code> command gives a detailed breakdown of the system, but it requires administrative privileges. Additionally, the <code>system_profiler</code> gives a very detailed breakdown of configurations, firewall rules, mounted volumes, hardware, and many other things without needing elevated permissions.\n\nDetection: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Process command-line parameters, Process monitoring\n\nPermissions Required: User", 
            "external_references": [
                {
                    "external_id": "T1082", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1082"
                }
            ], 
            "id": "attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "discovery"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "System Information Discovery", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Process command-line parameters", 
                "Process monitoring"
            ], 
            "x_mitre_permissions_required": [
                "User"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:49.988Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. (Citation: Microsoft Run Key) The program will be executed under the context of the user and will have the account's associated permissions level.\n\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.\n\nDetection: Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders. (Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nPlatforms: Windows\n\nData Sources: Windows Registry, File monitoring\n\nPermissions Required: User, Administrator", 
            "external_references": [
                {
                    "external_id": "T1060", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1060"
                }, 
                {
                    "description": "Microsoft. (n.d.). Run and RunOnce Registry Keys. Retrieved November 12, 2014.", 
                    "source_name": "Microsoft Run Key", 
                    "url": "http://msdn.microsoft.com/en-us/library/aa376977"
                }, 
                {
                    "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.", 
                    "source_name": "TechNet Autoruns", 
                    "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902"
                }
            ], 
            "id": "attack-pattern--9422fc14-1c43-410d-ab0f-a709b76c72dc", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "persistence"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Registry Run Keys / Start Folder", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Windows Registry", 
                "File monitoring"
            ], 
            "x_mitre_permissions_required": [
                "User", 
                "Administrator"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:07.958Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may disable security tools to avoid possible detection of their tools and activities. This can take the form of killing security software or event logging processes, deleting Registry keys so that tools do not start at run time, or other methods to interfere with security scanning or event reporting.\n\nDetection: Monitor processes and command-line arguments to see if security tools are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Lack of log or event file reporting may be suspicious.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: API monitoring, Anti-virus, File monitoring, Services, Windows Registry, Process command-line parameters\n\nDefense Bypassed: Anti-virus, File monitoring, Host intrusion prevention systems, Signature-based detection, Log analysis", 
            "external_references": [
                {
                    "external_id": "T1089", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1089"
                }
            ], 
            "id": "attack-pattern--2e0dd10b-676d-4964-acd0-8a404c92b044", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "defense-evasion"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Disabling Security Tools", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "API monitoring", 
                "Anti-virus", 
                "File monitoring", 
                "Services", 
                "Windows Registry", 
                "Process command-line parameters"
            ], 
            "x_mitre_defense_bypassed": [
                "Anti-virus", 
                "File monitoring", 
                "Host intrusion prevention systems", 
                "Signature-based detection", 
                "Log analysis"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:25.584Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\n\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. (Citation: Wikipedia Windows Registry) Some of the information may help adversaries to further their operation within a network.\n\nDetection: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nInteraction with the Windows Registry may come from the command line using utilities such as Reg or through running malware that may interact with the Registry through an API. Command-line invocation of utilities used to query the Registry may be detected through process and command-line monitoring. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nPlatforms: Windows\n\nData Sources: Windows Registry, Process monitoring, Process command-line parameters\n\nPermissions Required: User, Administrator, SYSTEM", 
            "external_references": [
                {
                    "external_id": "T1012", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1012"
                }, 
                {
                    "description": "Wikipedia. (n.d.). Windows Registry. Retrieved February 2, 2015.", 
                    "source_name": "Wikipedia Windows Registry", 
                    "url": "https://en.wikipedia.org/wiki/Windows%20Registry"
                }
            ], 
            "id": "attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "discovery"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Query Registry", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Windows Registry", 
                "Process monitoring", 
                "Process command-line parameters"
            ], 
            "x_mitre_permissions_required": [
                "User", 
                "Administrator", 
                "SYSTEM"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:48.728Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software running on systems within the network.\n\n===Windows===\n\nAn example command that would obtain details on processes is \"tasklist\" using the Tasklist utility.\n\n===Mac and Linux===\n\nIn Mac and Linux, this is accomplished with the <code>ps</code> command.\n\nDetection: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Process command-line parameters, Process monitoring\n\nPermissions Required: User, Administrator, SYSTEM\n\nSystem Requirements: Administrator, SYSTEM may provide better process ownership details", 
            "external_references": [
                {
                    "external_id": "T1057", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1057"
                }
            ], 
            "id": "attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "discovery"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Process Discovery", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Process command-line parameters", 
                "Process monitoring"
            ], 
            "x_mitre_permissions_required": [
                "User", 
                "Administrator", 
                "SYSTEM"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ], 
            "x_mitre_system_requirements": [
                "Administrator, SYSTEM may provide better process ownership details"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:41.804Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Data exfiltration is performed over the Command and Control channel.  Data is encoded into the normal communications channel using the same protocol as command and control communications.\n\nDetection: Detection for command and control applies. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: User interface, Process monitoring\n\nRequires Network: Yes", 
            "external_references": [
                {
                    "external_id": "T1041", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1041"
                }, 
                {
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", 
                    "source_name": "University of Birmingham C2", 
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ], 
            "id": "attack-pattern--92d7da27-2d91-488e-a00c-059dc162766d", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "exfiltration"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Exfiltration Over Command and Control Channel", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "User interface", 
                "Process monitoring"
            ], 
            "x_mitre_network_requirements": true, 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:18.931Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, commingling legitimate traffic with C2 communications traffic, or using a non-standard data encoding system, such as a modified Base64 encoding for the message body of an HTTP request.\n\nDetection: Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Packet capture, Process use of network, Process monitoring, Network protocol analysis\n\nRequires Network: Yes", 
            "external_references": [
                {
                    "external_id": "T1001", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1001"
                }, 
                {
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", 
                    "source_name": "University of Birmingham C2", 
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ], 
            "id": "attack-pattern--ad255bfe-a9e6-4b52-a258-8d3462abe842", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "command-and-control"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Data Obfuscation", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Packet capture", 
                "Process use of network", 
                "Process monitoring", 
                "Network protocol analysis"
            ], 
            "x_mitre_network_requirements": true, 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:30.757Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Shortcuts or symbolic links are ways of referencing other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process. Adversaries could use shortcuts to execute their tools for persistence. They may create a new shortcut as a means of indirection that may use Masquerading to look like a legitimate program. Adversaries could also edit the target path or entirely replace an existing shortcut so their tools will be executed instead of the intended legitimate program.\n\nDetection: Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change or creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.\n\nPlatforms: Windows\n\nData Sources: File monitoring, Process command-line parameters, Process monitoring\n\nPermissions Required: User, Administrator\n\nContributors: Travis Smith, Tripwire", 
            "external_references": [
                {
                    "external_id": "T1023", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1023"
                }
            ], 
            "id": "attack-pattern--970cdb5c-02fb-4c38-b17e-d6327cf3c810", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "persistence"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Shortcut Modification", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "Travis Smith, Tripwire"
            ], 
            "x_mitre_data_sources": [
                "File monitoring", 
                "Process command-line parameters", 
                "Process monitoring"
            ], 
            "x_mitre_permissions_required": [
                "User", 
                "Administrator"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:08.479Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "A connection proxy is used to direct network traffic between systems or act as an intermediary for network communications. Many tools exist that enable traffic redirection through proxies or port redirection, including HTRAN, ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools)\n\nThe definition of a proxy can also be expanded out to encompass trust relationships between networks in peer-to-peer, mesh, or trusted connections between networks consisting of hosts or systems that regularly communicate with each other.\n\nThe network may be within a single organization or across organizations with trust relationships. Adversaries could use these types of relationships to manage command and control communications, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion.\n\nDetection: Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network activities disassociated from user-driven actions from processes that normally require user direction are suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Process use of network, Process monitoring, Netflow/Enclave netflow, Packet capture\n\nRequires Network: Yes\n\nContributors: Walker Johnson", 
            "external_references": [
                {
                    "external_id": "T1090", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1090"
                }, 
                {
                    "description": "Wilhoit, K. (2013, March 4). In-Depth Look: APT Attack Tools of the Trade. Retrieved December 2, 2015.", 
                    "source_name": "Trend Micro APT Attack Tools", 
                    "url": "http://blog.trendmicro.com/trendlabs-security-intelligence/in-depth-look-apt-attack-tools-of-the-trade/"
                }, 
                {
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", 
                    "source_name": "University of Birmingham C2", 
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ], 
            "id": "attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "command-and-control"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Connection Proxy", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "Walker Johnson"
            ], 
            "x_mitre_data_sources": [
                "Process use of network", 
                "Process monitoring", 
                "Netflow/Enclave netflow", 
                "Packet capture"
            ], 
            "x_mitre_network_requirements": true, 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }
    ], 
    "hash": "9d2b8208a92b11521fe6bc8d721a3240b8992fc308e5fcd8d113932534a46991", 
    "name": "BACKSPACE"
}