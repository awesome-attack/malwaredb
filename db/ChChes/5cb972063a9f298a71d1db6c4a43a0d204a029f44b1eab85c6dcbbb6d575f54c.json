{
    "alias": "Scorpion", 
    "analysis": {
        "_id": {
            "$oid": "5ba55452ba80ffe26b514fcf"
        }, 
        "description": "PE32 executable (GUI) Intel 80386, for MS Windows", 
        "file_id": "0b75590c09a70d535fd9a7e338d1ff10582119bf", 
        "fuzzy_hash": "1536:hkEqFY6xgFoB7qUbMUtatrMaOqSvryicFYFazeb:hmYc4zMcSvr6YFazeb", 
        "hash": {
            "md5": "db85ccdc8398bd817e65fa1d56e9868d", 
            "sha1": "0b75590c09a70d535fd9a7e338d1ff10582119bf", 
            "sha2": "5cb972063a9f298a71d1db6c4a43a0d204a029f44b1eab85c6dcbbb6d575f54c"
        }, 
        "mime_type": "application/x-dosexec", 
        "particular_header": {
            "av_analysis": "Not_implemented", 
            "certificate": {}, 
            "child_of": "Not_implemented", 
            "cypher": "Not_implemented", 
            "date": "'0x2FF353DB [SUSPICIOUS]'", 
            "ep": "'0x412200 .reloc 5/6'", 
            "exports": {}, 
            "file_entropy": 6.320070840947632, 
            "headers": {
                "dos_header": {
                    "cblp": "'0x90'", 
                    "cp": "'0x3'", 
                    "cparhdr": "'0x4'", 
                    "crlc": "'0x0'", 
                    "cs": "'0x0'", 
                    "csum": "'0x0'", 
                    "ip": "'0x0'", 
                    "lfanew": "'0x80'", 
                    "lfarlc": "'0x40'", 
                    "magic": "'0x5a4d'", 
                    "maxalloc": "'0xffff'", 
                    "minalloc": "'0x0'", 
                    "oemid": "'0x0'", 
                    "oeminfo": "'0x0'", 
                    "ovno": "'0x0'", 
                    "res": "'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", 
                    "res2": "'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", 
                    "sp": "'0xb8'", 
                    "ss": "'0x0'"
                }, 
                "file_header": {
                    "Characteristics": "'0x10e'", 
                    "Machine": "'0x14c'", 
                    "NumberOfSections": "'0x6'", 
                    "NumberOfSymbols": "'0x0'", 
                    "PointerToSymbolTable": "'0x0'", 
                    "SizeOfOptionalHeader": "'0xe0'", 
                    "TimeDateStamp": "'0x2ff353db'"
                }, 
                "nt_header": {
                    "Signature": "'0x4550'"
                }, 
                "optional_header": {
                    "AddressOfEntryPoint": "'0x12200'", 
                    "BaseOfCode": "'0x1000'", 
                    "CheckSum": "'0x13b55'", 
                    "DllCharacteristics": "'0x0'", 
                    "FileAlignment": "'0x200'", 
                    "ImageBase": "'0x400000'", 
                    "LoaderFlags": "'0x0'", 
                    "Magic": "'0x10b'", 
                    "MajorImageVersion": "'0x0'", 
                    "MajorLinkerVersion": "'0x2'", 
                    "MajorOperatingSystemVersion": "'0x1'", 
                    "MajorSubsystemVersion": "'0x4'", 
                    "MinorImageVersion": "'0x0'", 
                    "MinorLinkerVersion": "'0x32'", 
                    "MinorOperatingSystemVersion": "'0x0'", 
                    "MinorSubsystemVersion": "'0x0'", 
                    "NumberOfRvaAndSizes": "'0x10'", 
                    "Reserved1": "'0x0'", 
                    "SectionAlignment": "'0x1000'", 
                    "SizeOfCode": "'0x9800'", 
                    "SizeOfHeaders": "'0x400'", 
                    "SizeOfHeapCommit": "'0x1000'", 
                    "SizeOfHeapReserve": "'0x100000'", 
                    "SizeOfImage": "'0x14000'", 
                    "SizeOfInitializedData": "'0x4c00'", 
                    "SizeOfStackCommit": "'0x1000'", 
                    "SizeOfStackReserve": "'0x100000'", 
                    "SizeOfUninitializedData": "'0xa00'", 
                    "Subsystem": "'0x2'"
                }
            }, 
            "imports": [
                {
                    "functions": [
                        "'shellabouta'"
                    ], 
                    "lib": "'shell32.dll'"
                }, 
                {
                    "functions": [
                        "'globalunlock'", 
                        "'globalalloc'", 
                        "'globalrealloc'", 
                        "'globalsize'", 
                        "'globalcompact'", 
                        "'globalfree'", 
                        "'globallock'", 
                        "'lstrlena'", 
                        "'lstrcata'", 
                        "'writeprofilestringa'", 
                        "'getmodulehandlea'", 
                        "'getstartupinfoa'", 
                        "'getenvironmentstrings'", 
                        "'getcommandlinea'", 
                        "'sleep'", 
                        "'lstrcmpa'", 
                        "'getprofilestringa'", 
                        "'unhandledexceptionfilter'", 
                        "'getmodulefilenamea'", 
                        "'getacp'", 
                        "'getoemcp'", 
                        "'getcpinfo'", 
                        "'getstdhandle'", 
                        "'getfiletype'", 
                        "'virtualfree'", 
                        "'virtualalloc'", 
                        "'raiseexception'", 
                        "'multibytetowidechar'", 
                        "'widechartomultibyte'", 
                        "'getprocaddress'", 
                        "'getlasterror'", 
                        "'localalloc'", 
                        "'localrealloc'", 
                        "'lstrcpya'", 
                        "'getprofileinta'", 
                        "'gettickcount'", 
                        "'localfree'", 
                        "'getversion'", 
                        "'exitprocess'", 
                        "'rtlunwind'"
                    ], 
                    "lib": "'kernel32.dll'"
                }, 
                {
                    "functions": [
                        "'winhelpa'", 
                        "'getdc'", 
                        "'getwindowrect'", 
                        "'createdialogparama'", 
                        "'checkradiobutton'", 
                        "'loadstringa'", 
                        "'registerclassexa'", 
                        "'getsyscolorbrush'", 
                        "'loadcursora'", 
                        "'loadicona'", 
                        "'setdlgitemtexta'", 
                        "'getdlgitem'", 
                        "'fillrect'", 
                        "'setrect'", 
                        "'checkmenuitem'", 
                        "'getsubmenu'", 
                        "'getmenu'", 
                        "'setwindowpos'", 
                        "'mapdialogrect'", 
                        "'invalidaterect'", 
                        "'setfocus'", 
                        "'isiconic'", 
                        "'getsyscolor'", 
                        "'destroymenu'", 
                        "'trackpopupmenuex'", 
                        "'loadmenua'", 
                        "'releasecapture'", 
                        "'setcapture'", 
                        "'getdlgctrlid'", 
                        "'enablemenuitem'", 
                        "'isclipboardformatavailable'", 
                        "'releasedc'", 
                        "'screentoclient'", 
                        "'destroywindow'", 
                        "'postquitmessage'", 
                        "'defwindowproca'", 
                        "'messagebeep'", 
                        "'getwindowtexta'", 
                        "'drawframecontrol'", 
                        "'getclientrect'", 
                        "'showcursor'", 
                        "'setcursor'", 
                        "'endpaint'", 
                        "'drawedge'", 
                        "'beginpaint'", 
                        "'closeclipboard'", 
                        "'charuppera'", 
                        "'getclipboarddata'", 
                        "'openclipboard'", 
                        "'setwindowtexta'", 
                        "'enablewindow'", 
                        "'checkdlgbutton'", 
                        "'showwindow'", 
                        "'updatewindow'", 
                        "'createwindowexa'", 
                        "'sendmessagea'", 
                        "'loadacceleratorsa'", 
                        "'getmessagea'", 
                        "'translateacceleratora'", 
                        "'translatemessage'", 
                        "'isdialogmessagea'", 
                        "'dispatchmessagea'", 
                        "'messageboxa'"
                    ], 
                    "lib": "'user32.dll'"
                }, 
                {
                    "functions": [
                        "'getstockobject'", 
                        "'getdevicecaps'", 
                        "'gettextmetricsa'", 
                        "'settextcolor'", 
                        "'setbkcolor'", 
                        "'textouta'", 
                        "'gettextextentpointa'", 
                        "'setbkmode'", 
                        "'selectobject'", 
                        "'deleteobject'"
                    ], 
                    "lib": "'gdi32.dll'"
                }
            ], 
            "imports_tree": "added", 
            "packer_detection": "Unknown", 
            "packer_version": "Not_implemented", 
            "res_entries": [
                {
                    "lang": "'LANG_RUSSIAN'", 
                    "name": "'RT_ICON'", 
                    "rva": "'0xf378'", 
                    "sha1": "d0467fc674836f0daa18828a8969a7a1d145ca98", 
                    "size": "'0x2e8'", 
                    "sublang": "'SUBLANG_RUSSIAN'", 
                    "type": "'dBase IV DBT of @.DBF, block length 512, next free block index 40, next free block 1717986918, next used block 1617323622'"
                }, 
                {
                    "lang": "'LANG_RUSSIAN'", 
                    "name": "'RT_ICON'", 
                    "rva": "'0xf660'", 
                    "sha1": "3ad7e68b9af2cba7508f6cc58969dd3d3967f8d1", 
                    "size": "'0x128'", 
                    "sublang": "'SUBLANG_RUSSIAN'", 
                    "type": "'GLS_BINARY_LSB_FIRST'"
                }, 
                {
                    "lang": "'LANG_RUSSIAN'", 
                    "name": "'RT_MENU'", 
                    "rva": "'0xf788'", 
                    "sha1": "94e85fcde41d51ad610677c887f1b8cbf5a4f72c", 
                    "size": "'0x100'", 
                    "sublang": "'SUBLANG_RUSSIAN'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_RUSSIAN'", 
                    "name": "'RT_MENU'", 
                    "rva": "'0xf888'", 
                    "sha1": "41a561c432a5ff359aaa0037bdcf2dbc9f912de7", 
                    "size": "'0x30'", 
                    "sublang": "'SUBLANG_RUSSIAN'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_RUSSIAN'", 
                    "name": "'RT_DIALOG'", 
                    "rva": "'0xf8b8'", 
                    "sha1": "b5125c31896783f239fa4d8d7ba320ad67c12d21", 
                    "size": "'0x130'", 
                    "sublang": "'SUBLANG_RUSSIAN'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_RUSSIAN'", 
                    "name": "'RT_DIALOG'", 
                    "rva": "'0xf9e8'", 
                    "sha1": "ffab505e302179eba9d557b4cdfd64057d0aad50", 
                    "size": "'0x1fc'", 
                    "sublang": "'SUBLANG_RUSSIAN'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_RUSSIAN'", 
                    "name": "'RT_STRING'", 
                    "rva": "'0xfbe4'", 
                    "sha1": "44cc17e93b6ecab730c01b9fa360af1a5fbfe3ee", 
                    "size": "'0x74'", 
                    "sublang": "'SUBLANG_RUSSIAN'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_RUSSIAN'", 
                    "name": "'RT_STRING'", 
                    "rva": "'0xfc58'", 
                    "sha1": "d214ac3741c993e33c02f107e8a733ce60976d8e", 
                    "size": "'0x58'", 
                    "sublang": "'SUBLANG_RUSSIAN'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_RUSSIAN'", 
                    "name": "'RT_STRING'", 
                    "rva": "'0xfcb0'", 
                    "sha1": "8f08a657244f66450c5a5babc2ec82d3d75dd47d", 
                    "size": "'0x50'", 
                    "sublang": "'SUBLANG_RUSSIAN'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_RUSSIAN'", 
                    "name": "'RT_STRING'", 
                    "rva": "'0xfd00'", 
                    "sha1": "92cf4d47fc212878866ddaf0430711cc4be14b2c", 
                    "size": "'0x78'", 
                    "sublang": "'SUBLANG_RUSSIAN'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_RUSSIAN'", 
                    "name": "'RT_STRING'", 
                    "rva": "'0xfd78'", 
                    "sha1": "bfb9adcebca45c3d2b51f7030433fe12e60f5535", 
                    "size": "'0x2b8'", 
                    "sublang": "'SUBLANG_RUSSIAN'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_RUSSIAN'", 
                    "name": "'RT_ACCELERATOR'", 
                    "rva": "'0x10030'", 
                    "sha1": "22444cd65488885b6f486f40284db28ab05aba04", 
                    "size": "'0x260'", 
                    "sublang": "'SUBLANG_RUSSIAN'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_RUSSIAN'", 
                    "name": "'RT_GROUP_ICON'", 
                    "rva": "'0x10290'", 
                    "sha1": "6883ce60e71a83424db0b41d0ab6bf61080e3de2", 
                    "size": "'0x22'", 
                    "sublang": "'SUBLANG_RUSSIAN'", 
                    "type": "'MS Windows icon resource - 2 icons, 32x32, 16 colors'"
                }, 
                {
                    "lang": "'LANG_RUSSIAN'", 
                    "name": "'RT_VERSION'", 
                    "rva": "'0x102b4'", 
                    "sha1": "062ccc08a439942ee414e77502d42ae0873fff64", 
                    "size": "'0x340'", 
                    "sublang": "'SUBLANG_RUSSIAN'", 
                    "type": "'data'"
                }
            ], 
            "sections": [
                {
                    "characteristics": "0x60000020", 
                    "entropy": 6.5291702739355815, 
                    "fuzzy_hash": "768:1kE6xqcufGHXBDRTw6cwiE8x0KoBmGDqU/2KMUtatrMxgtsqSvcevyicvd:1kEqFY6xgFoB7qUbMUtatrMaOqSvryiI", 
                    "md5": "a94dfbf6ffe4afa2f1fca71b6bfbf3c3", 
                    "name": "'.text\\x00\\x00\\x00'", 
                    "sha1": "cc851d846e8d668d3fa747f5c4a40d4b82160936", 
                    "sha2": "0b58eab63b4ae991184ea8ceaf740eedeeee20050f1f6e59b64bc31adc3597b1", 
                    "size_raw_data": 38912, 
                    "virtual_size": 38576, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0xc0000080", 
                    "entropy": 0.0, 
                    "fuzzy_hash": "3::", 
                    "md5": "d41d8cd98f00b204e9800998ecf8427e", 
                    "name": "'.bss\\x00\\x00\\x00\\x00'", 
                    "sha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709", 
                    "sha2": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855", 
                    "size_raw_data": 0, 
                    "virtual_size": 2380, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0xc0000040", 
                    "entropy": 4.484569863788747, 
                    "fuzzy_hash": "96:BAIC3WccevuHxjZfgSFffWGhiuEXr7zFvUhoSkb/:BHdevsFFHcuQzF8Ib/", 
                    "md5": "3584278530813708de351421ed650e37", 
                    "name": "'.data\\x00\\x00\\x00'", 
                    "sha1": "a9ec67467a83e9e9a11166f0da3ba6d614eb6dfd", 
                    "sha2": "11e9c987c99ae0aa14d3833ec2ca30da286a1331764e030a0bac53dd18e89ed2", 
                    "size_raw_data": 6144, 
                    "virtual_size": 5888, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0x40000040", 
                    "entropy": 5.626596852862597, 
                    "fuzzy_hash": "48:GnnOc36YLm3d9Ioen5ZLm3Fjs7or9zBtGvfsgwTAYCcY14uxntwYArOMP9hG4DU9:Gnf43goen5ZLu1vOfslAYJVOKDG4", 
                    "md5": "d061332c309fec9f3c7cd8316965db18", 
                    "name": "'.idata\\x00\\x00'", 
                    "sha1": "3dbdc6d1bd761a9de5fe402f2b09de96e528bcd5", 
                    "sha2": "1eaeaebd696008235fde617ad8797dfe7a9f0c44c0cb6874f75034baf9620208", 
                    "size_raw_data": 3072, 
                    "virtual_size": 2916, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0x40000040", 
                    "entropy": 4.043829363030792, 
                    "fuzzy_hash": "96:0eF8YbAvUkdWzLd0vis1y77FPba9WujYvA4:hF8sAvU/0hC7FPSWBA4", 
                    "md5": "28384636727610cbe3ef20dd61eff5dd", 
                    "name": "'.rsrc\\x00\\x00\\x00'", 
                    "sha1": "72ffc13782a7a4474f7eb5caad51532f9b01df04", 
                    "sha2": "ba0bb49632be1f629410d3255c7597e671499077c06cf7dc93a6d1ca5cd26f75", 
                    "size_raw_data": 5632, 
                    "virtual_size": 8192, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0x42000040", 
                    "entropy": 6.412093312397086, 
                    "fuzzy_hash": "96:hMyqnrYBMwZpFhM4SN8qtG8VHHH0uTJLc8pROFg+czuTw:DqnfOpTMEqLVnUuc8pZvX", 
                    "md5": "f18412349260e94c791fc77195157889", 
                    "name": "'.reloc\\x00\\x00'", 
                    "sha1": "e77f9981bc5aaabd242f201f54874336ef38ce69", 
                    "sha2": "4da95df026d13f1a062fe8645e2fa1315cc06263774b40f0f7ab7804cf48d8cf", 
                    "size_raw_data": 6144, 
                    "virtual_size": 5883, 
                    "write_executable": "False"
                }
            ], 
            "strings": {
                "hidden_imports": [
                    "'_hypot'", 
                    "'ceil'", 
                    "'filetimetosystemtime'", 
                    "'findclose'", 
                    "'findfirstfilea'", 
                    "'findnextfilea'", 
                    "'floor'", 
                    "'frexp'", 
                    "'getstringtypea'", 
                    "'getstringtypew'", 
                    "'lcmapstringa'", 
                    "'lcmapstringw'", 
                    "'ldexp'", 
                    "'modf'", 
                    "'setfiletime'", 
                    "'systemtimetofiletime'", 
                    "'virtualprotect'"
                ], 
                "raw_strings": [
                    "' svw3'", 
                    "'$(9t$'", 
                    "'$@tw'", 
                    "'(((('", 
                    "'(<1<:<a<w<d<j<p<v<'", 
                    "'- floating point not loaded'", 
                    "'- not enough space for _onexit/atexit table'", 
                    "'- not enough space for arguments'", 
                    "'- not enough space for environment'", 
                    "'- not enough space for thread data'", 
                    "'- pure virtual function call'", 
                    "'- unable to open console device'", 
                    "'- unexpected heap error'", 
                    "'- unexpected multithread lock error'", 
                    "'-64os'", 
                    "'-]=o'", 
                    "'-dtt'", 
                    "'.:3q'", 
                    "'0)0-0105090=0a0e0i0b0i0p0w0'", 
                    "'0/181c1q1'", 
                    "'0000'", 
                    "'0=0c0i0q0_0e0o0'", 
                    "'0>0q0i0'", 
                    "'0e0g1'", 
                    "'0fhu'", 
                    "'0h0w0b0o0v0'", 
                    "'0l1u1'", 
                    "'1(1=1c1l1y1l1z1'", 
                    "'1,151?1s1'", 
                    "'10161>1l1u1]1r1x1'", 
                    "'152?2m2s2a2'", 
                    "'1<9<s<]<h<'", 
                    "'1b3n3z3'", 
                    "'1f1n1'", 
                    "'1p1y1'", 
                    "'2$2.2@2h2'", 
                    "'2%2-2=2o2b2y2'", 
                    "'2(2,20242h2l2p2t2h2l2p2t2'", 
                    "'2(2-222s2m2'", 
                    "'2(2.252'", 
                    "'2(3.3l3r3w3e3j3x3'", 
                    "'2)2.242'", 
                    "'252p2u2_2f2m2'", 
                    "'2a2g2m2]2i2n2t2'", 
                    "'2b2h2z2'", 
                    "'2m2t2'", 
                    "'3(3,3034383<3@3d3h3l3p3t3x3'", 
                    "'3.3j3p3n3s3'", 
                    "'31373m3'", 
                    "'313<3p3y3_3g3r3'", 
                    "'323d3'", 
                    "'334n4'", 
                    "'3=3g3m3'", 
                    "'3@5m5s5b5h5p5'", 
                    "'3d3h3'", 
                    "'3d3z3_3v3'", 
                    "'4$4)4.43484=4b4g4q4w4]4f4l4r4'", 
                    "'4$595p5'", 
                    "'4&595q5[5i5'", 
                    "'4,5a5'", 
                    "'4/494c4j4q4_4g4n4x4'", 
                    "'4444686'", 
                    "'484e4k4[4r4'", 
                    "'4<u<'", 
                    "'4@4n4'", 
                    "'4b4o4]4k4y4'", 
                    "'5(535'", 
                    "'5,50545p5t5x5'", 
                    "'5.5g5m5s5[5h5s5z5'", 
                    "'575d5p5k5q5'", 
                    "'576p6e7'", 
                    "'5a5w5_586i6r6a6'", 
                    "'5d5h5l5p5t5x5'", 
                    "'5q5[5f5'", 
                    "'6&62686>6h6s6y6_6f6l6r6'", 
                    "'6(6.63696b6g6l6r6]6b6i6o6'", 
                    "'6(64696d6k6s6[6k6p6'", 
                    "'6-6d6k6q6w6d6m6'", 
                    "'6/6b6z6'", 
                    "'6h7r7'", 
                    "'7 7&7,747'", 
                    "'7)7e7'", 
                    "'7/7d7h7'", 
                    "'707>7j7o7b7p7'", 
                    "'767b7]7m7'", 
                    "'7<7c7o7'", 
                    "'7a7m7z7c7k7'", 
                    "'7f8d'", 
                    "'7fb8l'", 
                    "'7p9t9x9'", 
                    "'8&8,8b8m8v8'", 
                    "'8&8/878=8b8h8n8x8'", 
                    "'8&848:8j8p8b8'", 
                    "'8,828:8w8l8'", 
                    "'80td'", 
                    "'8421504'", 
                    "'8<9c9l9'", 
                    "'8f8k8q8x8'", 
                    "'8u)zj'", 
                    "'9 9%9'", 
                    "'9/9n9'", 
                    "'90999?9x9'", 
                    "'92:::@:h:s:'", 
                    "'979h9l9p9t9x9'", 
                    "'999?9l9c9i9t9'", 
                    "'9d9h9l9p9'", 
                    "'9d9h9l9p9t9x9'", 
                    "'9g9v4'", 
                    "'9i9v9'", 
                    "'9p9w9'", 
                    "':$<,<4<<<d<l<t<'", 
                    "':%:9:x:'", 
                    "':):n:z:'", 
                    "':/:8:@:i:a:'", 
                    "':0:7:f:m:j:s:'", 
                    "':5:<:c:m:w:'", 
                    "':e:o:v:'", 
                    "':j:p:'", 
                    "'<%<,<3<'", 
                    "'<&<c<i<'", 
                    "'<(<9<?<e<'", 
                    "'</<k<'", 
                    "'</=9=i=o=u=]=f=l='", 
                    "'<:t]'", 
                    "'<@<p<a<j<q<w<'", 
                    "'<d<l<t<'", 
                    "'<f<m<w<'", 
                    "'<main> not enough memory.'", 
                    "'<n<w<'", 
                    "'<y(()).u,u'", 
                    "'=,===f=n=o=z='", 
                    "'=4=:='", 
                    "'=@=n=p='", 
                    "'=f=s='", 
                    "'=t?q'", 
                    "'>%>,>9>d>i>a>f>'", 
                    "'>&>2>8>h>n>x>]>d>j>p>v>'", 
                    "'>->4>'", 
                    "'>2>>>f>v>'", 
                    "'>a>k>r>y>'", 
                    "'>k?t?y?_?j?'", 
                    "'>o>v>'", 
                    "'?$?,?4?<?d?l?t?'", 
                    "'?)?/?5?d?m?v?'", 
                    "'?-?3?<?d?z?a?y?'", 
                    "'?/l['", 
                    "'?1?8???g?s?y?a?n?t?y?'", 
                    "'?d?l?t?'", 
                    "'?k?t?'", 
                    "'@offffff@n'", 
                    "'[sj@'", 
                    "'_cabs'", 
                    "'_hypot'", 
                    "'_lclose'", 
                    "'_llseek'", 
                    "'_lopen'", 
                    "'_lread'", 
                    "'_lwrite'", 
                    "'_uuuuuu'", 
                    "'a48t'", 
                    "'a4h('", 
                    "'a9b4'", 
                    "'aabbccddeeff00112233445566778899'", 
                    "'abnormal program termination'", 
                    "'acos'", 
                    "'asin'", 
                    "'atan'", 
                    "'atan2'", 
                    "'background'", 
                    "'ceil'", 
                    "'colors'", 
                    "'cosh'", 
                    "'d$ a'", 
                    "'d$ f'", 
                    "'d$ p'", 
                    "'d$( t'", 
                    "'d$0j'", 
                    "'d?$?'", 
                    "'data'", 
                    "'dddddddddddddd@'", 
                    "'domain error'", 
                    "'edit'", 
                    "'eu53'", 
                    "'fabs'", 
                    "'fdddddd@offffff@n'", 
                    "'ff@n'", 
                    "'ff@o'", 
                    "'fffff@'", 
                    "'ffffff'", 
                    "'fffffffffffff@'", 
                    "'ffffffffffffff'", 
                    "'filetimetosystemtime'", 
                    "'findclose'", 
                    "'findfirstfilea'", 
                    "'findnextfilea'", 
                    "'floor'", 
                    "'fmod'", 
                    "'frexp'", 
                    "'g8tn3'", 
                    "'getstringtypea'", 
                    "'getstringtypew'", 
                    "'gpsj'", 
                    "'h@gm'", 
                    "'hle@'", 
                    "'hmxb'", 
                    "'intl'", 
                    "'isboctdrjy_'", 
                    "'jnswvg'", 
                    "'layout'", 
                    "'lcmapstringa'", 
                    "'lcmapstringw'", 
                    "'ldexp'", 
                    "'log10'", 
                    "'lstrcmpi'", 
                    "'modf'", 
                    "'mzui'", 
                    "'n0t,'", 
                    "'n@tj'", 
                    "'nelfvmxti'", 
                    "'nkeb'", 
                    "'o8rp'", 
                    "'o<rp'", 
                    "'o@0.'", 
                    "'oeq0'", 
                    "'opopopopopopf@'", 
                    "'opopopopowwpf@'", 
                    "'p@offffff@n'", 
                    "'paddingxxpad'", 
                    "'pn/z'", 
                    "'qnan'", 
                    "'qprh'", 
                    "'qprj'", 
                    "'r6002'", 
                    "'r6008'", 
                    "'r6009'", 
                    "'r6016'", 
                    "'r6017'", 
                    "'r6018'", 
                    "'r6019'", 
                    "'r6024'", 
                    "'r6025'", 
                    "'rqvp'", 
                    "'runtime error '", 
                    "'runtime error'", 
                    "'scicalc'", 
                    "'scorpion.win.1275copyright (c) 1995-1998 taek software.j'", 
                    "'sdecimal'", 
                    "'setfiletime'", 
                    "'sing error'", 
                    "'sinh'", 
                    "'snan'", 
                    "'sqrt'", 
                    "'squs'", 
                    "'svw3'", 
                    "'svwt<=-'", 
                    "'svwu'", 
                    "'svwuj'", 
                    "'svwut1'", 
                    "'svwut3'", 
                    "'svwuuhh'", 
                    "'svwuuih'", 
                    "'systemtimetofiletime'", 
                    "'t$ ]_'", 
                    "'t$ swv'", 
                    "'t$ vh '", 
                    "'t$$j'", 
                    "'t$$pw'", 
                    "'t$$q'", 
                    "'t$$t'", 
                    "'t$$vh '", 
                    "'t$(j'", 
                    "'t$(pv'", 
                    "'t$(vs'", 
                    "'t$0j'", 
                    "'t$0ps'", 
                    "'t$0uw'", 
                    "'t(x1'", 
                    "'t:vu'", 
                    "'tanh'", 
                    "'tkje'", 
                    "'tloss error'", 
                    "'tsvw'", 
                    "'u qv'", 
                    "'u%fn'", 
                    "'ugjd'", 
                    "'vc20xc00u'", 
                    "'virtualprotect'", 
                    "'w%=,'", 
                    "'wwwff@o'", 
                    "'wwwvpq'", 
                    "'wwwwwwwfffff@'", 
                    "'xu)<'", 
                    "'z?auy'", 
                    "'zc%c1'"
                ]
            }, 
            "version": {
                "fixed_file_info": {
                    "FileDateLS": "'0x0'", 
                    "FileDateMS": "'0x0'", 
                    "FileFlags": "'0x0'", 
                    "FileFlagsMask": "'0x3f'", 
                    "FileOS": "'0x10001'", 
                    "FileSubtype": "'0x0'", 
                    "FileType": "'0x1'", 
                    "FileVersionLS": "'0x3b6'", 
                    "FileVersionMS": "'0x40000'", 
                    "ProductVersionLS": "'0x3b6'", 
                    "ProductVersionMS": "'0x40000'", 
                    "Signature": "'0xfeef04bd'", 
                    "StrucVersion": "'0x10000'"
                }, 
                "string_file_info": {
                    "Comments": "None", 
                    "CompanyName": "Microsoft Corporation", 
                    "FileDescription": "\\u041a\\u0430\\u043b\\u044c\\u043a\\u0443\\u043b\\u044f\\u0442\\u043e\\u0440 \\u0434\\u043b\\u044f Windows", 
                    "FileVersion": "4.00.950", 
                    "InternalName": "CALC", 
                    "LangID": "041904B0", 
                    "LegalCopyright": "Copyright \\xa9 Microsoft Corp. 1991-1995", 
                    "LegalTrademarks": "None", 
                    "OriginalFilename": "CALC.EXE", 
                    "PrivateBuild": "None", 
                    "ProductName": "\\u041e\\u043f\\u0435\\u0440\\u0430\\u0446\\u0438\\u043e\\u043d\\u043d\\u0430\\u044f \\u0441\\u0438\\u0441\\u0442\\u0435\\u043c\\u0430 Microsoft\\xae Windows\\xae", 
                    "ProductVersion": "4.00.950", 
                    "SpecialBuild": "None"
                }, 
                "version_info": {
                    "Length": "'0x338'", 
                    "Type": "'0x0'", 
                    "ValueLength": "'0x34'"
                }
            }
        }, 
        "size": 60928
    }, 
    "attack-pattern": [
        {
            "created": "2017-05-31T21:30:49.988Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. (Citation: Microsoft Run Key) The program will be executed under the context of the user and will have the account's associated permissions level.\n\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.\n\nDetection: Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders. (Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nPlatforms: Windows\n\nData Sources: Windows Registry, File monitoring\n\nPermissions Required: User, Administrator", 
            "external_references": [
                {
                    "external_id": "T1060", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1060"
                }, 
                {
                    "description": "Microsoft. (n.d.). Run and RunOnce Registry Keys. Retrieved November 12, 2014.", 
                    "source_name": "Microsoft Run Key", 
                    "url": "http://msdn.microsoft.com/en-us/library/aa376977"
                }, 
                {
                    "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.", 
                    "source_name": "TechNet Autoruns", 
                    "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902"
                }
            ], 
            "id": "attack-pattern--9422fc14-1c43-410d-ab0f-a709b76c72dc", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "persistence"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Registry Run Keys / Start Folder", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Windows Registry", 
                "File monitoring"
            ], 
            "x_mitre_permissions_required": [
                "User", 
                "Administrator"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:31.197Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may use a custom cryptographic protocol or algorithm to hide command and control traffic. A simple scheme, such as XOR-ing the plaintext with a fixed key, will produce a very weak ciphertext.\n\nCustom encryption schemes may vary in sophistication. Analysis and reverse engineering of malware samples may be enough to discover the algorithm and encryption key used.\n\nSome adversaries may also attempt to implement their own version of a well-known cryptographic algorithm instead of using a known implementation library, which may lead to unintentional errors. (Citation: F-Secure Cosmicduke)\n\nDetection: If malware uses custom encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures. (Citation: Fidelis DarkComet)\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect when communications do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Packet capture, Netflow/Enclave netflow, Process use of network, Malware reverse engineering, Process monitoring\n\nRequires Network: Yes", 
            "external_references": [
                {
                    "external_id": "T1024", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1024"
                }, 
                {
                    "description": "F-Secure Labs. (2014, July). COSMICDUKE Cosmu with a twist of MiniDuke. Retrieved July 3, 2014.", 
                    "source_name": "F-Secure Cosmicduke", 
                    "url": "https://www.f-secure.com/documents/996508/1030745/cosmicduke%20whitepaper.pdf"
                }, 
                {
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", 
                    "source_name": "University of Birmingham C2", 
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }, 
                {
                    "description": "Fidelis Cybersecurity. (2015, August 4). Looking at the Sky for a DarkComet. Retrieved April 5, 2016.", 
                    "source_name": "Fidelis DarkComet", 
                    "url": "https://www.fidelissecurity.com/sites/default/files/FTA%201018%20looking%20at%20the%20sky%20for%20a%20dark%20comet.pdf"
                }
            ], 
            "id": "attack-pattern--3b3cbbe0-6ed3-4334-b543-3ddfd8c5642d", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "command-and-control"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Custom Cryptographic Protocol", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Packet capture", 
                "Netflow/Enclave netflow", 
                "Process use of network", 
                "Malware reverse engineering", 
                "Process monitoring"
            ], 
            "x_mitre_network_requirements": true, 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:35.334Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries use command and control over an encrypted channel using a known encryption protocol like HTTPS or SSL/TLS. The use of strong encryption makes it difficult for defenders to detect signatures within adversary command and control traffic.\n\nSome adversaries may use other encryption protocols and algorithms with symmetric keys, such as RC4, that rely on encryption keys encoded into malware configuration files and not public key cryptography. Such keys may be obtained through malware reverse engineering.\n\nDetection: SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels. (Citation: SANS Decrypting SSL) SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation. (Citation: SEI SSL Inspection Risks)\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures. (Citation: Fidelis DarkComet)\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Packet capture, Netflow/Enclave netflow, Malware reverse engineering, Process use of network, Process monitoring, SSL/TLS inspection\n\nRequires Network: Yes", 
            "external_references": [
                {
                    "external_id": "T1032", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1032"
                }, 
                {
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", 
                    "source_name": "University of Birmingham C2", 
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }, 
                {
                    "description": "Butler, M. (2013, November). Finding Hidden Threats by Decrypting SSL. Retrieved April 5, 2016.", 
                    "source_name": "SANS Decrypting SSL", 
                    "url": "http://www.sans.org/reading-room/whitepapers/analyst/finding-hidden-threats-decrypting-ssl-34840"
                }, 
                {
                    "description": "Dormann, W. (2015, March 13). The Risks of SSL Inspection. Retrieved April 5, 2016.", 
                    "source_name": "SEI SSL Inspection Risks", 
                    "url": "https://insights.sei.cmu.edu/cert/2015/03/the-risks-of-ssl-inspection.html"
                }, 
                {
                    "description": "Fidelis Cybersecurity. (2015, August 4). Looking at the Sky for a DarkComet. Retrieved April 5, 2016.", 
                    "source_name": "Fidelis DarkComet", 
                    "url": "https://www.fidelissecurity.com/sites/default/files/FTA%201018%20looking%20at%20the%20sky%20for%20a%20dark%20comet.pdf"
                }
            ], 
            "id": "attack-pattern--4b74a1d4-b0e9-4ef1-93f1-14ecc6e2f5b5", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "command-and-control"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Standard Cryptographic Protocol", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Packet capture", 
                "Netflow/Enclave netflow", 
                "Malware reverse engineering", 
                "Process use of network", 
                "Process monitoring", 
                "SSL/TLS inspection"
            ], 
            "x_mitre_network_requirements": true, 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:04.307Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture.\n\n===Windows===\n\nExample commands and utilities that obtain this information include <code>ver</code>, Systeminfo, and <code>dir</code> within cmd for identifying information based on present files and directories.\n\n===Mac===\n\nOn Mac, the <code>systemsetup</code> command gives a detailed breakdown of the system, but it requires administrative privileges. Additionally, the <code>system_profiler</code> gives a very detailed breakdown of configurations, firewall rules, mounted volumes, hardware, and many other things without needing elevated permissions.\n\nDetection: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Process command-line parameters, Process monitoring\n\nPermissions Required: User", 
            "external_references": [
                {
                    "external_id": "T1082", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1082"
                }
            ], 
            "id": "attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "discovery"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "System Information Discovery", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Process command-line parameters", 
                "Process monitoring"
            ], 
            "x_mitre_permissions_required": [
                "User"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:56.776Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may communicate using a common, standardized application layer protocol such as HTTP, HTTPS, SMTP, or DNS to avoid detection by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n\nFor connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are RPC, SSH, or RDP.\n\nDetection: Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used. (Citation: University of Birmingham C2)\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Packet capture, Netflow/Enclave netflow, Process use of network, Malware reverse engineering, Process monitoring\n\nRequires Network: Yes", 
            "external_references": [
                {
                    "external_id": "T1071", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1071"
                }, 
                {
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", 
                    "source_name": "University of Birmingham C2", 
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ], 
            "id": "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "command-and-control"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Standard Application Layer Protocol", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Packet capture", 
                "Netflow/Enclave netflow", 
                "Process use of network", 
                "Malware reverse engineering", 
                "Process monitoring"
            ], 
            "x_mitre_network_requirements": true, 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:16.408Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Files may be copied from one system to another to stage adversary tools or other files over the course of an operation. Files may be copied from an external adversary-controlled system through the Command and Control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.\n\nAdversaries may also copy files laterally between internal victim systems to support Lateral Movement with remote Execution using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with Windows Admin Shares or Remote Desktop Protocol.\n\nDetection: Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: File monitoring, Packet capture, Process use of network, Netflow/Enclave netflow, Network protocol analysis, Process monitoring\n\nPermissions Required: User\n\nRequires Network: Yes", 
            "external_references": [
                {
                    "external_id": "T1105", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1105"
                }, 
                {
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", 
                    "source_name": "University of Birmingham C2", 
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ], 
            "id": "attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "command-and-control"
                }, 
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "lateral-movement"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Remote File Copy", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "File monitoring", 
                "Packet capture", 
                "Process use of network", 
                "Netflow/Enclave netflow", 
                "Network protocol analysis", 
                "Process monitoring"
            ], 
            "x_mitre_network_requirements": true, 
            "x_mitre_permissions_required": [
                "User"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:04.710Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. \n\n===Windows===\n\nExample utilities used to obtain this information are <code>dir</code> and <code>tree</code>. (Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the Windows API.\n\n===Mac and Linux===\n\nIn Mac and Linux, this kind of discovery is accomplished with the <code>ls</code>, <code>find</code>, and <code>locate</code> commands.\n\nDetection: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: File monitoring, Process command-line parameters, Process monitoring\n\nPermissions Required: User, Administrator, SYSTEM\n\nSystem Requirements: Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls", 
            "external_references": [
                {
                    "external_id": "T1083", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1083"
                }, 
                {
                    "description": "Tomonaga, S. (2016, January 26). Windows Commands Abused by Attackers. Retrieved February 2, 2016.", 
                    "source_name": "Windows Commands JPCERT", 
                    "url": "http://blog.jpcert.or.jp/2016/01/windows-commands-abused-by-attackers.html"
                }
            ], 
            "id": "attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "discovery"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "File and Directory Discovery", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "File monitoring", 
                "Process command-line parameters", 
                "Process monitoring"
            ], 
            "x_mitre_permissions_required": [
                "User", 
                "Administrator", 
                "SYSTEM"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ], 
            "x_mitre_system_requirements": [
                "Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:07.958Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may disable security tools to avoid possible detection of their tools and activities. This can take the form of killing security software or event logging processes, deleting Registry keys so that tools do not start at run time, or other methods to interfere with security scanning or event reporting.\n\nDetection: Monitor processes and command-line arguments to see if security tools are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Lack of log or event file reporting may be suspicious.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: API monitoring, Anti-virus, File monitoring, Services, Windows Registry, Process command-line parameters\n\nDefense Bypassed: Anti-virus, File monitoring, Host intrusion prevention systems, Signature-based detection, Log analysis", 
            "external_references": [
                {
                    "external_id": "T1089", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1089"
                }
            ], 
            "id": "attack-pattern--2e0dd10b-676d-4964-acd0-8a404c92b044", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "defense-evasion"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Disabling Security Tools", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "API monitoring", 
                "Anti-virus", 
                "File monitoring", 
                "Services", 
                "Windows Registry", 
                "Process command-line parameters"
            ], 
            "x_mitre_defense_bypassed": [
                "Anti-virus", 
                "File monitoring", 
                "Host intrusion prevention systems", 
                "Signature-based detection", 
                "Log analysis"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:19.735Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Credential dumping is the process of obtaining account login and password information, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform\u00a0Lateral Movement\u00a0and access restricted information.\n\nSeveral of the tools mentioned in this technique may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n\n===SAM (Security Accounts Manager)===\n\nThe SAM is a database file that contains local accounts for the host, typically those found with the \u2018net user\u2019 command.  To enumerate the SAM database, system level access is required.\n\u00a0\nA number of tools can be used to retrieve the SAM file through in-memory techniques:\n* pwdumpx.exe \n* gsecdump\n* Mimikatz\n* secretsdump.py\n\nAlternatively, the SAM can be extracted from the Registry with Reg:\n* <code>reg save HKLM\\sam sam</code>\n* <code>reg save HKLM\\system system</code>\n\nCreddump7 can then be used to process the SAM database locally to retrieve hashes. (Citation: GitHub Creddump7)\n\nNotes:\nRid 500 account is the local, in-built administrator.\nRid 501 is the guest account.\nUser accounts start with a RID of 1,000+.\n\n===Cached Credentials===\n\nThe DCC2 (Domain Cached Credentials version 2) hash, used by Windows Vista and newer caches credentials when the domain controller is unavailable.  The number of default cached credentials varies, and this number can be altered per system.  This hash does not allow pass-the-hash style attacks.\n\u00a0\nA number of tools can be used to retrieve the SAM file through in-memory techniques.\n* pwdumpx.exe \n* gsecdump\n* Mimikatz\n\nAlternatively, reg.exe can be used to extract from the Registry and Creddump7 used to gather the credentials.\n\nNotes:\nCached credentials for Windows Vista are derived using PBKDF2.\n\n===Local Security Authority (LSA) Secrets===\n\nWith SYSTEM access to a host, the LSA secrets often allows trivial access from a local account to domain-based account credentials. The Registry is used to store the LSA secrets.\n\u00a0\nWhen services are run under the context of local or domain users, their passwords are stored in the Registry. If auto-logon is enabled, this information will be stored in the Registry as well.\n\u00a0\nA number of tools can be used to retrieve the SAM file through in-memory techniques.\n* pwdumpx.exe \n* gsecdump\n* Mimikatz\n* secretsdump.py\n\nAlternatively, reg.exe can be used to extract from the Registry and Creddump7 used to gather the credentials.\n\nNotes:\nThe passwords extracted by his mechanism are\u00a0UTF-16\u00a0encoded, which means that they are returned in\u00a0plaintext.\nWindows 10 adds protections for LSA Secrets described in Mitigation.\n\n===NTDS from Domain Controller===\n\nActive Directory stores information about members of the domain including devices and users to verify credentials and define access rights. The Active Directory domain database is stored in the NTDS.dit file. By default the NTDS file will be located in %SystemRoot%\\NTDS\\Ntds.dit of a domain controller. (Citation: Wikipedia Active Directory)\n \nThe following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.\n\u00a0\n* Volume Shadow Copy\n* secretsdump.py\n* Using the in-built Windows tool, ntdsutil.exe\n* Invoke-NinjaCopy\n\n===Group Policy Preference (GPP) Files===\n\nGroup Policy Preferences (GPP) are tools that allowed administrators to create domain policies with embedded credentials. These policies, amongst other things, allow administrators to set local accounts.\n\u00a0\nThese group policies are stored in SYSVOL on a domain controller, this means that any domain user can view the SYSVOL share and decrypt the password (the AES private key was leaked on-line. (Citation: Microsoft GPP Key) (Citation: SRD GPP)\n\u00a0\nThe following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:\n\u00a0\n* Metasploit\u2019s post exploitation module: \"post/windows/gather/credentials/gpp\"\n* Get-GPPPassword (Citation: Obscuresecurity Get-GPPPassword)\n* gpprefdecrypt.py\n\u00a0\nNotes:\nOn the SYSVOL share, the following can be used to enumerate potential XML files.\ndir /s *.xml\n\n===Service Principle Names (SPNs)===\n\nSee Kerberoasting.\n\n===Plaintext Credentials===\n\nAfter a user logs on to a system, a variety of credentials are generated and stored in the\u00a0Local Security Authority Subsystem Service\u00a0(LSASS) process in memory. These credentials can be harvested by a administrative user or SYSTEM.\n\u00a0\nSSPI (Security Support Provider Interface) functions as a common interface to several Security Support Providers (SSPs):\u00a0A Security Support Provider is a\u00a0dynamic-link library\u00a0(DLL) that makes one or more security packages available to applications.\n\nThe following SSPs can be used to access credentials:\n\u00a0\nMsv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\nWdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges. (Citation: TechNet Blogs Credential Protection)\nKerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\nCredSSP: \u00a0Provides SSO and\u00a0Network Level Authentication\u00a0for\u00a0Remote Desktop Services. (Citation: Microsoft CredSSP)\n\u00a0\nThe following tools can be used to enumerate credentials:\n\u00a0\n* Windows Credential Editor\n* Mimikatz\n\u00a0\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\n\u00a0\nFor example, on the target host use procdump:\n* <code>procdump -ma lsass.exe lsass_dump</code>\n\u00a0\nLocally, mimikatz can be run:\n* <code>sekurlsa::Minidump\u00a0lsassdump.dmp</code>\n* <code>sekurlsa::logonPasswords</code>\n\n===DCSync=== \n\nDCSync is a variation on credential dumping which can be used to acquire sensitive information from a domain controller. Rather than executing recognizable malicious code, the action works by abusing the domain controller's  application programming interface (API) (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) (Citation: Wine API samlib.dll) to simulate the replication process from a remote domain controller.  Any members of the Administrators, Domain Admins, Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data  (Citation: ADSecurity Mimikatz DCSync) from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a Golden Ticket for use in Pass the Ticket (Citation: Harmj0y Mimikatz and DCSync) or change an account's password as noted in Account Manipulation. (Citation: InsiderThreat ChangeNTLM July 2017) DCSync functionality has been included in the \"lsadump\" module in Mimikatz. (Citation: GitHub Mimikatz lsadump Module) Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol. (Citation: Microsoft NRPC Dec 2017)\n\nDetection: Common credential dumpers such as Mimikatz access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective Process Injection to reduce potential indicators of malicious activity.\n\nHash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised Valid Accounts in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, (Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nMonitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync. (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Note: Domain controllers may not log replication requests originating from the default domain controller account. (Citation: Harmj0y DCSync Sept 2015). Also monitor for network protocols  (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft NRPC Dec 2017) and other replication requests (Citation: Microsoft SAMR) from IPs not associated with known domain controllers. (Citation: AdSecurity DCSync Sept 2015)\n\nPlatforms: Windows\n\nData Sources: API monitoring, Process command-line parameters, Process monitoring, PowerShell logs\n\nPermissions Required: Administrator, SYSTEM\n\nContributors: Vincent Le Toux, Ed Williams, Trustwave, SpiderLabs", 
            "external_references": [
                {
                    "external_id": "T1003", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1003"
                }, 
                {
                    "description": "PowerSploit. (n.d.).  Retrieved December 4, 2014.", 
                    "source_name": "Powersploit", 
                    "url": "https://github.com/mattifestation/PowerSploit"
                }, 
                {
                    "description": "Metcalf, S. (2015, September 25). Mimikatz DCSync Usage, Exploitation, and Detection. Retrieved August 7, 2017.", 
                    "source_name": "ADSecurity Mimikatz DCSync", 
                    "url": "https://adsecurity.org/?p=1729"
                }, 
                {
                    "description": "Schroeder, W. (2015, September 22). Mimikatz and DCSync and ExtraSids, Oh My. Retrieved August 7, 2017.", 
                    "source_name": "Harmj0y Mimikatz and DCSync", 
                    "url": "http://www.harmj0y.net/blog/redteaming/mimikatz-and-dcsync-and-extrasids-oh-my/"
                }, 
                {
                    "description": "Deply, B., Le Toux, V. (2016, June 5). module ~ lsadump. Retrieved August 7, 2017.", 
                    "source_name": "GitHub Mimikatz lsadump Module", 
                    "url": "https://github.com/gentilkiwi/mimikatz/wiki/module-~-lsadump"
                }, 
                {
                    "description": "Microsoft. (2017, December 1). MS-DRSR Directory Replication Service (DRS) Remote Protocol. Retrieved December 4, 2017.", 
                    "source_name": "Microsoft DRSR Dec 2017", 
                    "url": "https://msdn.microsoft.com/library/cc228086.aspx"
                }, 
                {
                    "description": "Microsoft. (n.d.). IDL_DRSGetNCChanges (Opnum 3). Retrieved December 4, 2017.", 
                    "source_name": "Microsoft GetNCCChanges", 
                    "url": "https://msdn.microsoft.com/library/dd207691.aspx"
                }, 
                {
                    "description": "SambaWiki. (n.d.). DRSUAPI. Retrieved December 4, 2017.", 
                    "source_name": "Samba DRSUAPI", 
                    "url": "https://wiki.samba.org/index.php/DRSUAPI"
                }, 
                {
                    "description": "Wine API. (n.d.). samlib.dll. Retrieved December 4, 2017.", 
                    "source_name": "Wine API samlib.dll", 
                    "url": "https://source.winehq.org/WineAPI/samlib.html"
                }, 
                {
                    "description": "Warren, J. (2017, July 11). Manipulating User Passwords with Mimikatz. Retrieved December 4, 2017.", 
                    "source_name": "InsiderThreat ChangeNTLM July 2017", 
                    "url": "https://blog.stealthbits.com/manipulating-user-passwords-with-mimikatz-SetNTLM-ChangeNTLM"
                }, 
                {
                    "description": "Microsoft. (2017, December 1). MS-NRPC - Netlogon Remote Protocol. Retrieved December 6, 2017.", 
                    "source_name": "Microsoft NRPC Dec 2017", 
                    "url": "https://msdn.microsoft.com/library/cc237008.aspx"
                }, 
                {
                    "description": "Metcalf, S. (2015, September 25). Mimikatz DCSync Usage, Exploitation, and Detection. Retrieved December 4, 2017.", 
                    "source_name": "AdSecurity DCSync Sept 2015", 
                    "url": "https://adsecurity.org/?p=1729"
                }, 
                {
                    "description": "Schroeder, W. (2015, September 22). Mimikatz and DCSync and ExtraSids, Oh My. Retrieved December 4, 2017.", 
                    "source_name": "Harmj0y DCSync Sept 2015", 
                    "url": "http://www.harmj0y.net/blog/redteaming/mimikatz-and-dcsync-and-extrasids-oh-my/"
                }, 
                {
                    "description": "Microsoft. (n.d.). MS-SAMR Security Account Manager (SAM) Remote Protocol (Client-to-Server) - Transport. Retrieved December 4, 2017.", 
                    "source_name": "Microsoft SAMR", 
                    "url": "https://msdn.microsoft.com/library/cc245496.aspx"
                }, 
                {
                    "description": "Flathers, R. (2018, February 19). creddump7. Retrieved April 11, 2018.", 
                    "source_name": "GitHub Creddump7", 
                    "url": "https://github.com/Neohapsis/creddump7"
                }, 
                {
                    "description": "Wikipedia. (2018, March 10). Active Directory. Retrieved April 11, 2018.", 
                    "source_name": "Wikipedia Active Directory", 
                    "url": "https://en.wikipedia.org/wiki/Active%20Directory"
                }, 
                {
                    "description": "Microsoft. (n.d.). 2.2.1.1.4 Password Encryption. Retrieved April 11, 2018.", 
                    "source_name": "Microsoft GPP Key", 
                    "url": "https://msdn.microsoft.com/library/cc422924.aspx"
                }, 
                {
                    "description": "Security Research and Defense. (2014, May 13). MS14-025: An Update for Group Policy Preferences. Retrieved January 28, 2015.", 
                    "source_name": "SRD GPP", 
                    "url": "http://blogs.technet.com/b/srd/archive/2014/05/13/ms14-025-an-update-for-group-policy-preferences.aspx"
                }, 
                {
                    "description": "Campbell, C. (2012, May 24). GPP Password Retrieval with PowerShell. Retrieved April 11, 2018.", 
                    "source_name": "Obscuresecurity Get-GPPPassword", 
                    "url": "https://obscuresecurity.blogspot.co.uk/2012/05/gpp-password-retrieval-with-powershell.html"
                }, 
                {
                    "description": "Wilson, B. (2016, April 18). The Importance of KB2871997 and KB2928120 for Credential Protection. Retrieved April 11, 2018.", 
                    "source_name": "TechNet Blogs Credential Protection", 
                    "url": "https://blogs.technet.microsoft.com/askpfeplat/2016/04/18/the-importance-of-kb2871997-and-kb2928120-for-credential-protection/"
                }, 
                {
                    "description": "Microsoft. (2008, July 25). Credential Security Service Provider and SSO for Terminal Services Logon. Retrieved April 11, 2018.", 
                    "source_name": "Microsoft CredSSP", 
                    "url": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-vista/cc749211(v=ws.10)"
                }
            ], 
            "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "credential-access"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Credential Dumping", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "Vincent Le Toux", 
                "Ed Williams, Trustwave, SpiderLabs"
            ], 
            "x_mitre_data_sources": [
                "API monitoring", 
                "Process command-line parameters", 
                "Process monitoring", 
                "PowerShell logs"
            ], 
            "x_mitre_permissions_required": [
                "Administrator", 
                "SYSTEM"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:26.474Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) However, adversaries are known to use code signing certificates to masquerade malware and tools as legitimate binaries (Citation: Janicab). The certificates used during an operation may be created, forged, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates)\n\nCode signing to verify software on first run can be used on modern Windows and macOS/OS X systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system.\n\nDetection: Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.\n\nPlatforms: Windows, macOS\n\nData Sources: Binary file metadata\n\nDefense Bypassed: Windows User Account Control", 
            "external_references": [
                {
                    "external_id": "T1116", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1116"
                }, 
                {
                    "description": "Wikipedia. (2015, November 10). Code Signing. Retrieved March 31, 2016.", 
                    "source_name": "Wikipedia Code Signing", 
                    "url": "https://en.wikipedia.org/wiki/Code%20signing"
                }, 
                {
                    "description": "Thomas. (2013, July 15). New signed malware called Janicab. Retrieved July 17, 2017.", 
                    "source_name": "Janicab", 
                    "url": "http://www.thesafemac.com/new-signed-malware-called-janicab/"
                }, 
                {
                    "description": "Ladikov, A. (2015, January 29). Why You Shouldn\u2019t Completely Trust Files Signed with Digital Certificates. Retrieved March 31, 2016.", 
                    "source_name": "Securelist Digital Certificates", 
                    "url": "https://securelist.com/why-you-shouldnt-completely-trust-files-signed-with-digital-certificates/68593/"
                }, 
                {
                    "description": "Shinotsuka, H. (2013, February 22). How Attackers Steal Private Keys from Digital Certificates. Retrieved March 31, 2016.", 
                    "source_name": "Symantec Digital Certificates", 
                    "url": "http://www.symantec.com/connect/blogs/how-attackers-steal-private-keys-digital-certificates"
                }
            ], 
            "id": "attack-pattern--1b84d551-6de8-4b96-9930-d177677c3b1d", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "defense-evasion"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Code Signing", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Binary file metadata"
            ], 
            "x_mitre_defense_bypassed": [
                "Windows User Account Control"
            ], 
            "x_mitre_platforms": [
                "Windows", 
                "macOS"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:48.728Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software running on systems within the network.\n\n===Windows===\n\nAn example command that would obtain details on processes is \"tasklist\" using the Tasklist utility.\n\n===Mac and Linux===\n\nIn Mac and Linux, this is accomplished with the <code>ps</code> command.\n\nDetection: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Process command-line parameters, Process monitoring\n\nPermissions Required: User, Administrator, SYSTEM\n\nSystem Requirements: Administrator, SYSTEM may provide better process ownership details", 
            "external_references": [
                {
                    "external_id": "T1057", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1057"
                }
            ], 
            "id": "attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "discovery"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Process Discovery", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Process command-line parameters", 
                "Process monitoring"
            ], 
            "x_mitre_permissions_required": [
                "User", 
                "Administrator", 
                "SYSTEM"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ], 
            "x_mitre_system_requirements": [
                "Administrator, SYSTEM may provide better process ownership details"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:38.511Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Masquerading occurs when the name or location of an executable, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation.  Several different variations of this technique have been observed.\n\nOne variant is for an executable to be placed in a commonly trusted directory or given the name of a legitimate, trusted program.  Alternatively, the filename given may be a close approximation of legitimate programs.  This is done to bypass tools that trust executables by relying on file name or path, as well as to deceive defenders and system administrators into thinking a file is benign by associating the name with something that is thought to be legitimate.\n\n\n===Windows===\nIn another variation of this technique, an adversary may use a renamed copy of a legitimate utility, such as rundll32.exe. (Citation: Endgame Masquerade Ball) An alternative case occurs when a legitimate utility is moved to a different directory and also renamed to avoid detections based on system utilities executing from non-standard paths. (Citation: F-Secure CozyDuke)\n\nAn example of abuse of trusted locations in Windows would be the <code>C:\\Windows\\System32</code> directory.  Examples of trusted binary names that can be given to malicious binares include \"explorer.exe\" and \"svchost.exe\".\n\n===Linux===\nAnother variation of this technique includes malicious binaries changing the name of their running process to that of a trusted or benign process, after they have been launched as opposed to before.  (Citation: Remaiten)\n\nAn example of abuse of trusted locations in Linux  would be the <code>/bin</code> directory.  Examples of trusted binary names that can be given to malicious binares include \"rsyncd\" and \"dbus-inotifier\".   (Citation: Fysbis Palo Alto Analysis)  (Citation: Fysbis Dr Web Analysis)\n\nDetection: Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity. (Citation: Endgame Masquerade Ball)\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: File monitoring, Process monitoring, Binary file metadata\n\nDefense Bypassed: Whitelisting by file name or path\n\nContributors: ENDGAME, Bartosz Jerzman", 
            "external_references": [
                {
                    "external_id": "T1036", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1036"
                }, 
                {
                    "description": "Ewing, P. (2016, October 31). How to Hunt: The Masquerade Ball. Retrieved October 31, 2016.", 
                    "source_name": "Endgame Masquerade Ball", 
                    "url": "https://www.endgame.com/blog/how-hunt-masquerade-ball"
                }, 
                {
                    "description": "F-Secure Labs. (2015, April 22). CozyDuke: Malware Analysis. Retrieved December 10, 2015.", 
                    "source_name": "F-Secure CozyDuke", 
                    "url": "https://www.f-secure.com/documents/996508/1030745/CozyDuke"
                }, 
                {
                    "description": "Michal Malik AND Marc-Etienne M.L\u00e9veill\u00e9. (2016, March 30). Meet Remaiten \u2013 a Linux bot on steroids targeting routers and potentially other IoT devices. Retrieved September 7, 2017.", 
                    "source_name": "Remaiten", 
                    "url": "https://www.welivesecurity.com/2016/03/30/meet-remaiten-a-linux-bot-on-steroids-targeting-routers-and-potentially-other-iot-devices/"
                }, 
                {
                    "description": "Bryan Lee and Rob Downs. (2016, February 12). A Look Into Fysbis: Sofacy\u2019s Linux Backdoor. Retrieved September 10, 2017.", 
                    "source_name": "Fysbis Palo Alto Analysis", 
                    "url": "https://researchcenter.paloaltonetworks.com/2016/02/a-look-into-fysbis-sofacys-linux-backdoor/"
                }, 
                {
                    "description": "Doctor Web. (2014, November 21). Linux.BackDoor.Fysbis.1. Retrieved December 7, 2017.", 
                    "source_name": "Fysbis Dr Web Analysis", 
                    "url": "https://vms.drweb.com/virus/?i=4276269"
                }
            ], 
            "id": "attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "defense-evasion"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Masquerading", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "ENDGAME", 
                "Bartosz Jerzman"
            ], 
            "x_mitre_data_sources": [
                "File monitoring", 
                "Process monitoring", 
                "Binary file metadata"
            ], 
            "x_mitre_defense_bypassed": [
                "Whitelisting by file name or path"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }
    ], 
    "hash": "5cb972063a9f298a71d1db6c4a43a0d204a029f44b1eab85c6dcbbb6d575f54c", 
    "name": "ChChes"
}