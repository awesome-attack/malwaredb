{
    "alias": "Sasfis", 
    "analysis": {
        "_id": {
            "$oid": "5ba555bcba80ffe26b5152e3"
        }, 
        "description": "PE32 executable (GUI) Intel 80386, for MS Windows", 
        "file_id": "ad7760f436e17639dbb3c68627d1ca515811fba7", 
        "fuzzy_hash": "1536:4SqNQ7F42yhTuBiLFy8gWnufXzju97NO6Y3O4XqZ3rJLRFrAPdxszClce0MUFA55:U+TyimpgiyXzjuFNO6YtY7JLRFrGd5co", 
        "hash": {
            "md5": "7269f50bd8b93e5b9ac783d7f975783b", 
            "sha1": "ad7760f436e17639dbb3c68627d1ca515811fba7", 
            "sha2": "e1cb003dd69a085b07d6202ecf6a892831d49b180ee69c4cec7e4113a4868f60"
        }, 
        "mime_type": "application/x-dosexec", 
        "particular_header": {
            "av_analysis": "Not_implemented", 
            "certificate": {}, 
            "child_of": "Not_implemented", 
            "cypher": "Not_implemented", 
            "date": "'0x2A425E19 [SUSPICIOUS]'", 
            "ep": "'0x1013698 CODE 0/8'", 
            "exports": {}, 
            "file_entropy": 6.394511820279789, 
            "headers": {
                "dos_header": {
                    "cblp": "'0x50'", 
                    "cp": "'0x2'", 
                    "cparhdr": "'0x4'", 
                    "crlc": "'0x0'", 
                    "cs": "'0x0'", 
                    "csum": "'0x0'", 
                    "ip": "'0x0'", 
                    "lfanew": "'0x100'", 
                    "lfarlc": "'0x40'", 
                    "magic": "'0x5a4d'", 
                    "maxalloc": "'0xffff'", 
                    "minalloc": "'0xf'", 
                    "oemid": "'0x0'", 
                    "oeminfo": "'0x0'", 
                    "ovno": "'0x1a'", 
                    "res": "'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", 
                    "res2": "'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", 
                    "sp": "'0xb8'", 
                    "ss": "'0x0'"
                }, 
                "file_header": {
                    "Characteristics": "'0x818e'", 
                    "Machine": "'0x14c'", 
                    "NumberOfSections": "'0x8'", 
                    "NumberOfSymbols": "'0x0'", 
                    "PointerToSymbolTable": "'0x0'", 
                    "SizeOfOptionalHeader": "'0xe0'", 
                    "TimeDateStamp": "'0x2a425e19'"
                }, 
                "nt_header": {
                    "Signature": "'0x4550'"
                }, 
                "optional_header": {
                    "AddressOfEntryPoint": "'0x13698'", 
                    "BaseOfCode": "'0x1000'", 
                    "CheckSum": "'0x0'", 
                    "DllCharacteristics": "'0x0'", 
                    "FileAlignment": "'0x200'", 
                    "ImageBase": "'0x1000000'", 
                    "LoaderFlags": "'0x0'", 
                    "Magic": "'0x10b'", 
                    "MajorImageVersion": "'0x0'", 
                    "MajorLinkerVersion": "'0x2'", 
                    "MajorOperatingSystemVersion": "'0x4'", 
                    "MajorSubsystemVersion": "'0x4'", 
                    "MinorImageVersion": "'0x0'", 
                    "MinorLinkerVersion": "'0x19'", 
                    "MinorOperatingSystemVersion": "'0x0'", 
                    "MinorSubsystemVersion": "'0x0'", 
                    "NumberOfRvaAndSizes": "'0x10'", 
                    "Reserved1": "'0x0'", 
                    "SectionAlignment": "'0x1000'", 
                    "SizeOfCode": "'0x12800'", 
                    "SizeOfHeaders": "'0x400'", 
                    "SizeOfHeapCommit": "'0x1000'", 
                    "SizeOfHeapReserve": "'0x100000'", 
                    "SizeOfImage": "'0x1d000'", 
                    "SizeOfInitializedData": "'0x4400'", 
                    "SizeOfStackCommit": "'0x4000'", 
                    "SizeOfStackReserve": "'0x100000'", 
                    "SizeOfUninitializedData": "'0x0'", 
                    "Subsystem": "'0x2'"
                }
            }, 
            "imports": [
                {
                    "functions": [
                        "'deletecriticalsection'", 
                        "'leavecriticalsection'", 
                        "'entercriticalsection'", 
                        "'initializecriticalsection'", 
                        "'virtualfree'", 
                        "'virtualalloc'", 
                        "'localfree'", 
                        "'localalloc'", 
                        "'getversion'", 
                        "'getcurrentthreadid'", 
                        "'interlockeddecrement'", 
                        "'interlockedincrement'", 
                        "'virtualquery'", 
                        "'widechartomultibyte'", 
                        "'multibytetowidechar'", 
                        "'lstrlena'", 
                        "'lstrcpyna'", 
                        "'loadlibraryexa'", 
                        "'getthreadlocale'", 
                        "'getstartupinfoa'", 
                        "'getprocaddress'", 
                        "'getmodulehandlea'", 
                        "'getmodulefilenamea'", 
                        "'getlocaleinfoa'", 
                        "'getcommandlinea'", 
                        "'freelibrary'", 
                        "'findfirstfilea'", 
                        "'findclose'", 
                        "'exitprocess'", 
                        "'writefile'", 
                        "'unhandledexceptionfilter'", 
                        "'rtlunwind'", 
                        "'raiseexception'", 
                        "'getstdhandle'"
                    ], 
                    "lib": "'kernel32.dll'"
                }, 
                {
                    "functions": [
                        "'getkeyboardtype'", 
                        "'loadstringa'", 
                        "'messageboxa'", 
                        "'charnexta'"
                    ], 
                    "lib": "'user32.dll'"
                }, 
                {
                    "functions": [
                        "'regqueryvalueexa'", 
                        "'regopenkeyexa'", 
                        "'regclosekey'"
                    ], 
                    "lib": "'advapi32.dll'"
                }, 
                {
                    "functions": [
                        "'sysfreestring'", 
                        "'sysreallocstringlen'", 
                        "'sysallocstringlen'"
                    ], 
                    "lib": "'oleaut32.dll'"
                }, 
                {
                    "functions": [
                        "'tlssetvalue'", 
                        "'tlsgetvalue'", 
                        "'localalloc'", 
                        "'getmodulehandlea'"
                    ], 
                    "lib": "'kernel32.dll'"
                }, 
                {
                    "functions": [
                        "'writefile'", 
                        "'waitforsingleobject'", 
                        "'virtualquery'", 
                        "'setfilepointer'", 
                        "'setevent'", 
                        "'setendoffile'", 
                        "'resetevent'", 
                        "'readfile'", 
                        "'leavecriticalsection'", 
                        "'initializecriticalsection'", 
                        "'getversionexa'", 
                        "'getthreadlocale'", 
                        "'getstringtypeexa'", 
                        "'getstdhandle'", 
                        "'getprocaddress'", 
                        "'getmodulehandlea'", 
                        "'getmodulefilenamea'", 
                        "'getlocaleinfoa'", 
                        "'getlocaltime'", 
                        "'getlasterror'", 
                        "'getfullpathnamea'", 
                        "'getdiskfreespacea'", 
                        "'getdateformata'", 
                        "'getcurrentthreadid'", 
                        "'getcpinfo'", 
                        "'getacp'", 
                        "'formatmessagea'", 
                        "'enumcalendarinfoa'", 
                        "'entercriticalsection'", 
                        "'deletecriticalsection'", 
                        "'createfilea'", 
                        "'createeventa'", 
                        "'comparestringa'", 
                        "'closehandle'"
                    ], 
                    "lib": "'kernel32.dll'"
                }, 
                {
                    "functions": [
                        "'messageboxa'", 
                        "'loadstringa'", 
                        "'getsystemmetrics'", 
                        "'charnexta'", 
                        "'chartooema'"
                    ], 
                    "lib": "'user32.dll'"
                }, 
                {
                    "functions": [
                        "'sleep'"
                    ], 
                    "lib": "'kernel32.dll'"
                }, 
                {
                    "functions": [
                        "'safearrayptrofindex'", 
                        "'safearraygetubound'", 
                        "'safearraygetlbound'", 
                        "'safearraycreate'", 
                        "'variantchangetype'", 
                        "'variantcopy'", 
                        "'variantclear'", 
                        "'variantinit'"
                    ], 
                    "lib": "'oleaut32.dll'"
                }
            ], 
            "imports_tree": "added", 
            "packer_detection": "Unknown", 
            "packer_version": "Not_implemented", 
            "res_entries": [
                {
                    "lang": "'LANG_ENGLISH'", 
                    "name": "'RT_ICON'", 
                    "rva": "'0x1b2b8'", 
                    "sha1": "d6fc4edac0bdb9cf081ad178589b59506906516f", 
                    "size": "'0x2e8'", 
                    "sublang": "'SUBLANG_ENGLISH_US'", 
                    "type": "'dBase IV DBT of @.DBF, block length 512, next free block index 40, next free block 49, next used block 48059'"
                }, 
                {
                    "lang": "'LANG_NEUTRAL'", 
                    "name": "'RT_STRING'", 
                    "rva": "'0x1b5a0'", 
                    "sha1": "bca594b4e130f8bd55c415c48ff4ffb6fbea3622", 
                    "size": "'0x15c'", 
                    "sublang": "'SUBLANG_NEUTRAL'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_NEUTRAL'", 
                    "name": "'RT_STRING'", 
                    "rva": "'0x1b6fc'", 
                    "sha1": "6099de7f5b5d60dea79984cbb5f72a26391231c5", 
                    "size": "'0x208'", 
                    "sublang": "'SUBLANG_NEUTRAL'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_NEUTRAL'", 
                    "name": "'RT_STRING'", 
                    "rva": "'0x1b904'", 
                    "sha1": "88c2784c8af158dda6cc6b9e0747fb4a25d5825b", 
                    "size": "'0xec'", 
                    "sublang": "'SUBLANG_NEUTRAL'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_NEUTRAL'", 
                    "name": "'RT_STRING'", 
                    "rva": "'0x1b9f0'", 
                    "sha1": "7518834ec4ab059bed837cfd5deecf8b9d8a42ad", 
                    "size": "'0x198'", 
                    "sublang": "'SUBLANG_NEUTRAL'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_NEUTRAL'", 
                    "name": "'RT_STRING'", 
                    "rva": "'0x1bb88'", 
                    "sha1": "e0b22bd7f0b9079d40dc26b3aa46d2345edb2122", 
                    "size": "'0x3b4'", 
                    "sublang": "'SUBLANG_NEUTRAL'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_NEUTRAL'", 
                    "name": "'RT_STRING'", 
                    "rva": "'0x1bf3c'", 
                    "sha1": "fc98a5c8d377a0048d5620d6424516063eeb0b42", 
                    "size": "'0x37c'", 
                    "sublang": "'SUBLANG_NEUTRAL'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_NEUTRAL'", 
                    "name": "'RT_STRING'", 
                    "rva": "'0x1c2b8'", 
                    "sha1": "4e75052a5967d31e7bfc1c5d6570fe70fdd1b44e", 
                    "size": "'0x2a0'", 
                    "sublang": "'SUBLANG_NEUTRAL'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_NEUTRAL'", 
                    "name": "'RT_RCDATA'", 
                    "rva": "'0x1c558'", 
                    "sha1": "04f73efb0801b18f6984b14cd057fb56519cd31b", 
                    "size": "'0x10'", 
                    "sublang": "'SUBLANG_NEUTRAL'", 
                    "type": "'Sendmail frozen configuration '"
                }, 
                {
                    "lang": "'LANG_NEUTRAL'", 
                    "name": "'RT_RCDATA'", 
                    "rva": "'0x1c568'", 
                    "sha1": "d8cc72762235b065ce9babee202d589979724669", 
                    "size": "'0xa4'", 
                    "sublang": "'SUBLANG_NEUTRAL'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_ENGLISH'", 
                    "name": "'RT_GROUP_ICON'", 
                    "rva": "'0x1c60c'", 
                    "sha1": "cf9a68a0b175f131381d3d29245441a6f9d53e3d", 
                    "size": "'0x14'", 
                    "sublang": "'SUBLANG_ENGLISH_US'", 
                    "type": "'MS Windows icon resource - 1 icon, 32x32, 4 colors'"
                }
            ], 
            "sections": [
                {
                    "characteristics": "0x60000020", 
                    "entropy": 6.408630678721315, 
                    "fuzzy_hash": "1536:WSqNQ7F42yhTuBiLFy8gWnufXzju97NO6Y3O4XqZ3rJLRFrAPdxs:S+TyimpgiyXzjuFNO6YtY7JLRFrGd", 
                    "md5": "00b84c3d5eb4dc63bdf7d044fb81e228", 
                    "name": "'CODE\\x00\\x00\\x00\\x00'", 
                    "sha1": "476d0a9f34aee1c1be6178089e698f28fa98fea9", 
                    "sha2": "b324cfc42821d612ba240d7c1413a025e734ffc6c916c0c6229fdc2b5b6f34b0", 
                    "size_raw_data": 75776, 
                    "virtual_size": 75444, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0xc0000040", 
                    "entropy": 3.887207052915783, 
                    "fuzzy_hash": "24:YLGJn8/YiOakJ1+1/ubigk4U4U4U4U4U4UL2cxK0L4+B6LfrbsCybzIbYHto:WbpXmwuWgk791L/8Xgr/qYH", 
                    "md5": "ee31b63a36be4ba7b2282185ede47dc0", 
                    "name": "'DATA\\x00\\x00\\x00\\x00'", 
                    "sha1": "42fda1425a6e678090833d572e35e9c677e87f57", 
                    "sha2": "cbaad314cb2486924bad6f3796211e0876aae9ea71cc4faa71ff05ba163e4be5", 
                    "size_raw_data": 2048, 
                    "virtual_size": 1692, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0xc0000000", 
                    "entropy": 0.0, 
                    "fuzzy_hash": "3::", 
                    "md5": "d41d8cd98f00b204e9800998ecf8427e", 
                    "name": "'BSS\\x00\\x00\\x00\\x00\\x00'", 
                    "sha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709", 
                    "sha2": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855", 
                    "size_raw_data": 0, 
                    "virtual_size": 3017, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0xc0000040", 
                    "entropy": 4.5000434633076045, 
                    "fuzzy_hash": "48:uPs1bvFNRm6V3SVf0VD6RBSWURgIzUDwiBmfAduJ6Aax:NLk0VDEcWUzUDtBmfAwCx", 
                    "md5": "1418f57f2d925c07c8a21b526ec854fd", 
                    "name": "'.idata\\x00\\x00'", 
                    "sha1": "a7682a0ef7ca0d74b08b3a17161cf436518e3434", 
                    "sha2": "bf21f32526ee53f995ddefb4b485ce4a5a21a904191200cff1c30f003fd740f3", 
                    "size_raw_data": 2560, 
                    "virtual_size": 2422, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0xc0000000", 
                    "entropy": 0.0, 
                    "fuzzy_hash": "3::", 
                    "md5": "d41d8cd98f00b204e9800998ecf8427e", 
                    "name": "'.tls\\x00\\x00\\x00\\x00'", 
                    "sha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709", 
                    "sha2": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855", 
                    "size_raw_data": 0, 
                    "virtual_size": 12, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0x50000040", 
                    "entropy": 0.25453180653875385, 
                    "fuzzy_hash": "3:DOaTlll:DXlll", 
                    "md5": "4b43769e7c2d09c6069d137437c4b35c", 
                    "name": "'.rdata\\x00\\x00'", 
                    "sha1": "c4c2721dd55d4671e8cace7125a4f4ba2e779075", 
                    "sha2": "f7a3b43857204a4dc7e4ffb678b3b492e54ff0c3211fe899fca810740613447b", 
                    "size_raw_data": 512, 
                    "virtual_size": 24, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0x50000040", 
                    "entropy": 6.626887905394456, 
                    "fuzzy_hash": "96:TyKYeWJMhHH63FCHvUL8JiWOk2SeBQunnWaiDcflP13G423Mb4U11DNHHo:mKYeWJMha3FCcL8xOk2SwxnWBwlw4TVW", 
                    "md5": "0056f66c1c6d987a442bea74cd247813", 
                    "name": "'.reloc\\x00\\x00'", 
                    "sha1": "f9109821978174922dc1d163bc1ba8c11afecbaf", 
                    "sha2": "20adaab72467fdcdc90e2a6e78dfcf5775a56698abc6648b8c25b0382da32e72", 
                    "size_raw_data": 6144, 
                    "virtual_size": 6100, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0x50000040", 
                    "entropy": 3.5804160530351363, 
                    "fuzzy_hash": "96:6K/7y4/K1K7+QipEnKa/fNqh2h+JYA8mocYrX0I+9xCl/K282A6Aid:z/zK1KaQiyKa8z21/K5Rg", 
                    "md5": "ab44b490a1587af7169ca6fbbdd67ae1", 
                    "name": "'.rsrc\\x00\\x00\\x00'", 
                    "sha1": "f466612643ed4c9e767cec47dee4a8c9beb74561", 
                    "sha2": "213712d968714628fdb43a284fd4122401b6d7ac18b8b58aa8daf1511a4d8d51", 
                    "size_raw_data": 6144, 
                    "virtual_size": 6144, 
                    "write_executable": "False"
                }
            ], 
            "strings": {
                "domains": [
                    "'hg.7fy9q0x.wqk'", 
                    "'kn.ei'", 
                    "'t.ht'", 
                    "'tc.dyhsfymwggc'"
                ], 
                "hidden_imports": [
                    "'getdiskfreespaceexa'", 
                    "'varnot'"
                ], 
                "raw_strings": [
                    "' $-@$ '", 
                    "' $@-$ '", 
                    "' $@@($'", 
                    "' ampm'", 
                    "'$)@-'", 
                    "'$)d$'", 
                    "'$-@@-'", 
                    "'$@@@$ '", 
                    "'$tmultireadexclusivewritesynchronizer'", 
                    "'$varutils'", 
                    "'$z]_'", 
                    "'&=o8'", 
                    "'&vvggd'", 
                    "'(z]_'", 
                    "')@-$'", 
                    "',ty='", 
                    "'- $@($ '", 
                    "'-$@@'", 
                    "'-@$ -'", 
                    "'-@@('", 
                    "'.d3cghjuf'", 
                    "'/1o_gtld8g_jm31aa'", 
                    "'/1osdb8nezm7qw'", 
                    "'/1ou1t/nepjfr7lo'", 
                    "'/1ou3xup0hbl'", 
                    "'0$0,040<0d0l0t0'", 
                    "'0,040<0d0l0t0'", 
                    "'0,080<0@0d0h0l0p0t0'", 
                    "'0/0j0'", 
                    "'0123456789abcdef'", 
                    "'020:0'", 
                    "'080o0y0b0m0'", 
                    "'0<:r'", 
                    "'0a1x1q1'", 
                    "'0c1y1'", 
                    "'0d0l0t0'", 
                    "'0g0[0'", 
                    "'0h1w1'", 
                    "'1 1(1,1014181<1@1d1h1b1j1r1z1'", 
                    "'1$1,141<1d1l1t1'", 
                    "'1%2y2'", 
                    "'1(1-121?1u1'", 
                    "'1(1>1j1h1'", 
                    "'1(272n2'", 
                    "'1.2a2m2d2p2'", 
                    "'111b1o1[1h1z1'", 
                    "'121>1h1p1h1'", 
                    "'181p1'", 
                    "'1<1e1u1]1c1l1s1x1'", 
                    "'1@1m1v1'", 
                    "'1a1p1g1v1'", 
                    "'1coeda/s grhjgg..'", 
                    "'1d1l1t1'", 
                    "'1i1n1x1'", 
                    "'1n1s1'", 
                    "'1p2a3'", 
                    "'1rwr'", 
                    "'1wwwr'", 
                    "'2 2$2<2'", 
                    "'2 2,242k2z2j2'", 
                    "'2 2d2h2l2p2t2x2'", 
                    "'2$2d2l2p2t2x2'", 
                    "'2%2n2'", 
                    "'2)3o3'", 
                    "'2-2h2'", 
                    "'2-353j4'", 
                    "'222:2b2j2r2z2b2j2r2'", 
                    "'2d2h2l2'", 
                    "'2d2h2l2p2t2x2'", 
                    "'2h2q2'", 
                    "'2n9ahk7a'", 
                    "'2p3f3'", 
                    "'2t5o8'", 
                    "'3 3$3(3,3034383h3h3p3t3x3'", 
                    "'3 3$343t3'", 
                    "'3%4g4'", 
                    "'303n3'", 
                    "'313b3o3v3z3'", 
                    "'323e3n3m3'", 
                    "'3333'", 
                    "'33331'", 
                    "'33333'", 
                    "'3<3d3l3t3'", 
                    "'3b3f3j3n3r3v3z3'", 
                    "'3d3h3l3p3t3x3'", 
                    "'3d3j3q3u3'", 
                    "'3d3l3'", 
                    "'3d3l3t3'", 
                    "'3dbu32u:uj.'", 
                    "'3f3j3n3r3v3z3'", 
                    "'3messages'", 
                    "'3p3w3'", 
                    "'4 4$4(4,4044484<4@4d4h4l4p4t4x4'", 
                    "'4 4$4(4,4044484<4@4p4p4x4'", 
                    "'4 4$4(4,40444d4d4l4p4t4x4'", 
                    "'4 4@4'", 
                    "'4&4.4v4'", 
                    "'41.i/ymr91.k'", 
                    "'414@4n4q4'", 
                    "'474f4v4'", 
                    "'4dabphps7yawm_1'", 
                    "'4gjvdigfy_.wcng'", 
                    "'4h5q5'", 
                    "'4l4v4'", 
                    "'4t4x4'", 
                    "'5 5$5(5,5054585<5@5d5h5l5p5t5x5'", 
                    "'5 5$5(5,5054585<5p5p5x5'", 
                    "'5(6n6w6'", 
                    "'5/565n5u5h5'", 
                    "'5/5<5n5'", 
                    "'515c5[5g5t5'", 
                    "'545<5@5d5h5l5p5t5x5'", 
                    "'585l5t5'", 
                    "'5@5k5q5v5a5g5l5w5'", 
                    "'5d5h5l5p5t5x5'", 
                    "'6 6$6(6,6064686<6@6d6h6l6p6t6x6'", 
                    "'6 6(6,6064686<6@6d6h6x6x6'", 
                    "'6&6-6k6v6'", 
                    "'6(737p7z7'", 
                    "'6-626=6c6h6s6y6'", 
                    "'6/6o6w6'", 
                    "'626f6j6p6t6y6'", 
                    "'69a0.g8g7yawm_17'", 
                    "'6=7z7'", 
                    "'6@6l6p6'", 
                    "'6@6o6c6'", 
                    "'6b6x6j6'", 
                    "'6d6h6l6p6t6x6'", 
                    "'6e8i8m8q8u8y8'", 
                    "'6h6l6p6t6x6'", 
                    "'6i6o6t6'", 
                    "'6m7t7'", 
                    "'7(7074787<7@7d7h7l7p7d7'", 
                    "'7(767:7l7e7p7'", 
                    "'7,838'", 
                    "'7<w<u<'", 
                    "'8 8$8(8,8084888<8@8d8h8l8p8'", 
                    "'8):e:'", 
                    "'8-8y8'", 
                    "'80<0@0'", 
                    "'819x9'", 
                    "'898m8'", 
                    "'8:9g9'", 
                    "'8<8d8h8l8p8t8x8'", 
                    "'8<=<'", 
                    "'8>8b8f8'", 
                    "'8c9o9'", 
                    "'8gj6e/isu..wqf5.'", 
                    "'8gu4'", 
                    "'8l8p8'", 
                    "'8q8u8'", 
                    "'9 9$9(9,9094989<9@9d9h9l9p9t9x9'", 
                    "'9 9$989x9'", 
                    "'909p9x9'", 
                    "'90:7:'", 
                    "'999t9'", 
                    "'9d9h9l9p9t9x9'", 
                    "'9r9o9z9'", 
                    "': :$:(:,:<:'", 
                    "': :$:(:,:d:d:l:p:t:x:'", 
                    "': :(:,:0:4:8:<:@:d:h:d:'", 
                    "':%:,:6:'", 
                    "':&:2:a:m:u:'", 
                    "':):c:'", 
                    "':/:g:_:'", 
                    "':0:h:y:e:'", 
                    "':3<j<q<s='", 
                    "':a:f:l:q:w:'", 
                    "':d:h:l:p:t:x:'", 
                    "':d:i:o:t:z:'", 
                    "':f:s:y:'", 
                    "':io0st1hu-mfkgh5a3g/rqhjd_3dhp4t1namdnmwpgu.7/syxjw9ed/p9bi:f:g'", 
                    "':k<u<'", 
                    "':l:c:'", 
                    "':mm:ss'", 
                    "'< <$<(<,<0<4<8<<<@<'", 
                    "'< <$<,<0<8<<<d<h<p<t<'", 
                    "'< <x<'", 
                    "'<%<)<-<1<5<9<=<a<e<i<m<q<u<y<]<a<e<i<m<q<'", 
                    "'<%=l='", 
                    "'<(<0<4<8<<<@<d<h<l<p<'", 
                    "'<0r=<9w9i'", 
                    "'<6=c='", 
                    "'<h<l<t<x<'", 
                    "'<m<)=0='", 
                    "'<p<w<'", 
                    "'<saf'", 
                    "'<sgf'", 
                    "'= =$=(=,='", 
                    "'= =(=,=4=8=@=d=l=p=x='", 
                    "'=&>:>k>z>'", 
                    "'=,=>=f=n=v='", 
                    "'=,=l=t=x='", 
                    "'=-=h=x=v='", 
                    "'=1=g='", 
                    "'=3=q=z=f=m='", 
                    "'=4>c>'", 
                    "'=d=h=l=p=t='", 
                    "'=d=h=p=t='", 
                    "'=d=x='", 
                    "'=f=n=v='", 
                    "'=g=o='", 
                    "'>%>/>:>d>o>y>c>i>s>y>'", 
                    "'>&>.>6>>>f>n>v>'", 
                    "'>&?c?x?'", 
                    "'>1>c>'", 
                    "'>:>a>c>'", 
                    "'>=>q>w>'", 
                    "'>f>n>v>'", 
                    "'>i?g?l?r?'", 
                    "'>mzu'", 
                    "'>n?c?'", 
                    "'?$?,?4?<?d?l?t?'", 
                    "'?(?2?<?f?x?o?'", 
                    "'?-?e?r?j?'", 
                    "'?0k0'", 
                    "'?1?7?a?l?v?'", 
                    "'?d?l?t?'", 
                    "'?t?w?'", 
                    "'@@$-'", 
                    "'@aqy'", 
                    "'@v:k'", 
                    "'@w2j'", 
                    "'@yy]'", 
                    "'[yy]'", 
                    "'a1q1'", 
                    "'a9mbgifcaio7albr'", 
                    "'a9mbgifn4_j3so'", 
                    "'a@ju'", 
                    "'aaaa'", 
                    "'am/pm'", 
                    "'ampm '", 
                    "'ampm'", 
                    "'array '", 
                    "'b0k0a0'", 
                    "'boolean'", 
                    "'borland'", 
                    "'byref '", 
                    "'byte'", 
                    "'c$t4'", 
                    "'c9bciy8'", 
                    "'cgdbzzlasyawl7ij.w'", 
                    "'classes'", 
                    "'cpdbyblsynbdpg0tevg'", 
                    "'currency'", 
                    "'cvariants'", 
                    "'d$,1'", 
                    "'d$dp'", 
                    "'d$hp'", 
                    "'d$lpj'", 
                    "'d$ppj'", 
                    "'date'", 
                    "'ddjs06dq9eek'", 
                    "'decimal'", 
                    "'delphi'", 
                    "'dispatch'", 
                    "'double'", 
                    "'eabstracterror'", 
                    "'eaccessviolation'", 
                    "'eassertionfailed'", 
                    "'econtrolc'", 
                    "'econverterror'", 
                    "'edivbyzero'", 
                    "'eeee'", 
                    "'eexternal'", 
                    "'eexternalexception'", 
                    "'efcreateerror'", 
                    "'efilererror'", 
                    "'efilestreamerror'", 
                    "'efopenerror<'", 
                    "'eheapexception'", 
                    "'einouterror'", 
                    "'einterror'", 
                    "'eintfcasterror'", 
                    "'eintoverflow'", 
                    "'einvalidcast'", 
                    "'einvalidop'", 
                    "'einvalidpointer'", 
                    "'elisterror'", 
                    "'ematherror'", 
                    "'empty'", 
                    "'eoserror'", 
                    "'eoutofmemory'", 
                    "'eoverflow'", 
                    "'eprivilege'", 
                    "'erangeerror@u'", 
                    "'ereaderror'", 
                    "'error'", 
                    "'esafecallexception'", 
                    "'estackoverflow'", 
                    "'estreamerror'", 
                    "'estringlisterror'", 
                    "'eunderflow'", 
                    "'evariantarraycreateerror'", 
                    "'evariantarraylockederror'", 
                    "'evariantbadindexerror'", 
                    "'evariantbadvartypeerrorx'", 
                    "'evariantdispatcherror'", 
                    "'evarianterror'", 
                    "'evariantinvalidargerror'", 
                    "'evariantinvalidoperror'", 
                    "'evariantnotimplerror'", 
                    "'evariantoutofmemoryerror'", 
                    "'evariantoverflowerror'", 
                    "'evarianttypecasterror'", 
                    "'evariantunexpectederror'", 
                    "'ewriteerrord'", 
                    "'exceptionpr'", 
                    "'ezerodivide'", 
                    "'f$t='", 
                    "'false'", 
                    "'fpumaskvalue'", 
                    "'fvvd'", 
                    "'fwq7i6v1qzgd'", 
                    "'getdiskfreespaceexa'", 
                    "'getlongpathnamea'", 
                    "'gggfv@'", 
                    "'hg.7fy9q0x.wqk'", 
                    "'iinterface'", 
                    "'infnan'", 
                    "'int64'", 
                    "'integer'", 
                    "'istringsadapter'", 
                    "'it2s'", 
                    "'j1ap_y:gayj5'", 
                    "'j1b9iyhwulpo:'", 
                    "'j1b:gylzfagmpll7'", 
                    "'j1b_9bmd3ye'", 
                    "'j92?'", 
                    "'kdiu7vmt'", 
                    "'kn.ei'", 
                    "'kwindows'", 
                    "'kxi[)'", 
                    "'lldbvtbbufa'", 
                    "'locales'", 
                    "'longword'", 
                    "'m/d/yy'", 
                    "'mgg4na3p4_'", 
                    "'mghtnmhk0a/8m09gee'", 
                    "'mh..no3p4_'", 
                    "'mmmm d, yyyy'", 
                    "'n1r09bldqyr7'", 
                    "'naibcpddetffgghhibjjwkllmmnaoopcqqrrssteuuvvxxzzyywk1234567890_/:.'", 
                    "'null'", 
                    "'olestr'", 
                    "'pprtj'", 
                    "'psvw'", 
                    "'pwvs'", 
                    "'qqqqqqqs'", 
                    "'qqqqqqsvw3'", 
                    "'qqqqqsvw'", 
                    "'qqqqsv'", 
                    "'qrwvp'", 
                    "'qs<$t'", 
                    "'qsvw'", 
                    "'qtypinfo'", 
                    "'r/f='", 
                    "'r1m6z/v1qzgd'", 
                    "'r3t7'", 
                    "'r6t0'", 
                    "'rtlconsts'", 
                    "'runtime error     at 00000000'", 
                    "'sactivex'", 
                    "'sdz]_'", 
                    "'shortint'", 
                    "'single'", 
                    "'smallint'", 
                    "'software'", 
                    "'sprq'", 
                    "'string'", 
                    "'strings'", 
                    "'stringx'", 
                    "'svw3'", 
                    "'svwq'", 
                    "'svwrp'", 
                    "'svwu'", 
                    "'svwuq'", 
                    "'sysconst'", 
                    "'sysinit'", 
                    "'system'", 
                    "'sysutils'", 
                    "'t$(j'", 
                    "'t%htihtm'", 
                    "'t(ht'", 
                    "'t-rf'", 
                    "'t.ht'", 
                    "'t1svw'", 
                    "'t<hth'", 
                    "'t=htn'", 
                    "'t?htb'", 
                    "'tc.dyhsfymwggc'", 
                    "'tcustomvarianttype'", 
                    "'terrorrec'", 
                    "'texceptrec'", 
                    "'tfilestream0'", 
                    "'th8zjrq'", 
                    "'thandlestream'", 
                    "'tinterfacedobject'", 
                    "'tlist'", 
                    "'tobjectd'", 
                    "'tobjectx'", 
                    "'tpersistent'", 
                    "'treggroup'", 
                    "'treggroups'", 
                    "'true'", 
                    "'tstreamd'", 
                    "'tstringitem'", 
                    "'tstringlist'", 
                    "'tstringlistd'", 
                    "'tstrings'", 
                    "'tthreadlist'", 
                    "'tthreadlocalcounter'", 
                    "'u:hd'", 
                    "'u:jt'", 
                    "'uajt'", 
                    "'uh1m'", 
                    "'uh3e'", 
                    "'uh6s'", 
                    "'uh9h'", 
                    "'uha.'", 
                    "'uhau'", 
                    "'uhg,'", 
                    "'uhh5'", 
                    "'uhj6'", 
                    "'uhrd'", 
                    "'uhu-'", 
                    "'uhuc'", 
                    "'uhza'", 
                    "'unknown'", 
                    "'utypes'", 
                    "'uxjt'", 
                    "'v0w0'", 
                    "'v<n<s<'", 
                    "'varadd'", 
                    "'varand'", 
                    "'varboolfromstr'", 
                    "'varbstrfrombool'", 
                    "'varbstrfromcy'", 
                    "'varbstrfromdate'", 
                    "'varcmp'", 
                    "'varcyfromstr'", 
                    "'vardatefromstr'", 
                    "'vardiv'", 
                    "'vari4fromstr'", 
                    "'variant'", 
                    "'variantchangetypeex'", 
                    "'variants'", 
                    "'varidiv'", 
                    "'varmod'", 
                    "'varmul'", 
                    "'varneg'", 
                    "'varnot'", 
                    "'varor'", 
                    "'varr4fromstr'", 
                    "'varr8fromstr'", 
                    "'varsub'", 
                    "'varxor'", 
                    "'vwud'", 
                    "'w)f%'", 
                    "'w<cnu'", 
                    "'word'", 
                    "'wuwsj'", 
                    "'wwgbvt'", 
                    "'yyyy'", 
                    "'yyzx'", 
                    "'yz]_'", 
                    "'yzxtp'", 
                    "'yzxu'", 
                    "'ztuwvsprtj'", 
                    "'zyyd'"
                ]
            }, 
            "version": {}
        }, 
        "size": 94208
    }, 
    "attack-pattern": [
        {
            "created": "2017-05-31T21:30:19.735Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Credential dumping is the process of obtaining account login and password information, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform\u00a0Lateral Movement\u00a0and access restricted information.\n\nSeveral of the tools mentioned in this technique may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n\n===SAM (Security Accounts Manager)===\n\nThe SAM is a database file that contains local accounts for the host, typically those found with the \u2018net user\u2019 command.  To enumerate the SAM database, system level access is required.\n\u00a0\nA number of tools can be used to retrieve the SAM file through in-memory techniques:\n* pwdumpx.exe \n* gsecdump\n* Mimikatz\n* secretsdump.py\n\nAlternatively, the SAM can be extracted from the Registry with Reg:\n* <code>reg save HKLM\\sam sam</code>\n* <code>reg save HKLM\\system system</code>\n\nCreddump7 can then be used to process the SAM database locally to retrieve hashes. (Citation: GitHub Creddump7)\n\nNotes:\nRid 500 account is the local, in-built administrator.\nRid 501 is the guest account.\nUser accounts start with a RID of 1,000+.\n\n===Cached Credentials===\n\nThe DCC2 (Domain Cached Credentials version 2) hash, used by Windows Vista and newer caches credentials when the domain controller is unavailable.  The number of default cached credentials varies, and this number can be altered per system.  This hash does not allow pass-the-hash style attacks.\n\u00a0\nA number of tools can be used to retrieve the SAM file through in-memory techniques.\n* pwdumpx.exe \n* gsecdump\n* Mimikatz\n\nAlternatively, reg.exe can be used to extract from the Registry and Creddump7 used to gather the credentials.\n\nNotes:\nCached credentials for Windows Vista are derived using PBKDF2.\n\n===Local Security Authority (LSA) Secrets===\n\nWith SYSTEM access to a host, the LSA secrets often allows trivial access from a local account to domain-based account credentials. The Registry is used to store the LSA secrets.\n\u00a0\nWhen services are run under the context of local or domain users, their passwords are stored in the Registry. If auto-logon is enabled, this information will be stored in the Registry as well.\n\u00a0\nA number of tools can be used to retrieve the SAM file through in-memory techniques.\n* pwdumpx.exe \n* gsecdump\n* Mimikatz\n* secretsdump.py\n\nAlternatively, reg.exe can be used to extract from the Registry and Creddump7 used to gather the credentials.\n\nNotes:\nThe passwords extracted by his mechanism are\u00a0UTF-16\u00a0encoded, which means that they are returned in\u00a0plaintext.\nWindows 10 adds protections for LSA Secrets described in Mitigation.\n\n===NTDS from Domain Controller===\n\nActive Directory stores information about members of the domain including devices and users to verify credentials and define access rights. The Active Directory domain database is stored in the NTDS.dit file. By default the NTDS file will be located in %SystemRoot%\\NTDS\\Ntds.dit of a domain controller. (Citation: Wikipedia Active Directory)\n \nThe following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.\n\u00a0\n* Volume Shadow Copy\n* secretsdump.py\n* Using the in-built Windows tool, ntdsutil.exe\n* Invoke-NinjaCopy\n\n===Group Policy Preference (GPP) Files===\n\nGroup Policy Preferences (GPP) are tools that allowed administrators to create domain policies with embedded credentials. These policies, amongst other things, allow administrators to set local accounts.\n\u00a0\nThese group policies are stored in SYSVOL on a domain controller, this means that any domain user can view the SYSVOL share and decrypt the password (the AES private key was leaked on-line. (Citation: Microsoft GPP Key) (Citation: SRD GPP)\n\u00a0\nThe following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:\n\u00a0\n* Metasploit\u2019s post exploitation module: \"post/windows/gather/credentials/gpp\"\n* Get-GPPPassword (Citation: Obscuresecurity Get-GPPPassword)\n* gpprefdecrypt.py\n\u00a0\nNotes:\nOn the SYSVOL share, the following can be used to enumerate potential XML files.\ndir /s *.xml\n\n===Service Principle Names (SPNs)===\n\nSee Kerberoasting.\n\n===Plaintext Credentials===\n\nAfter a user logs on to a system, a variety of credentials are generated and stored in the\u00a0Local Security Authority Subsystem Service\u00a0(LSASS) process in memory. These credentials can be harvested by a administrative user or SYSTEM.\n\u00a0\nSSPI (Security Support Provider Interface) functions as a common interface to several Security Support Providers (SSPs):\u00a0A Security Support Provider is a\u00a0dynamic-link library\u00a0(DLL) that makes one or more security packages available to applications.\n\nThe following SSPs can be used to access credentials:\n\u00a0\nMsv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\nWdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges. (Citation: TechNet Blogs Credential Protection)\nKerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\nCredSSP: \u00a0Provides SSO and\u00a0Network Level Authentication\u00a0for\u00a0Remote Desktop Services. (Citation: Microsoft CredSSP)\n\u00a0\nThe following tools can be used to enumerate credentials:\n\u00a0\n* Windows Credential Editor\n* Mimikatz\n\u00a0\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\n\u00a0\nFor example, on the target host use procdump:\n* <code>procdump -ma lsass.exe lsass_dump</code>\n\u00a0\nLocally, mimikatz can be run:\n* <code>sekurlsa::Minidump\u00a0lsassdump.dmp</code>\n* <code>sekurlsa::logonPasswords</code>\n\n===DCSync=== \n\nDCSync is a variation on credential dumping which can be used to acquire sensitive information from a domain controller. Rather than executing recognizable malicious code, the action works by abusing the domain controller's  application programming interface (API) (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) (Citation: Wine API samlib.dll) to simulate the replication process from a remote domain controller.  Any members of the Administrators, Domain Admins, Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data  (Citation: ADSecurity Mimikatz DCSync) from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a Golden Ticket for use in Pass the Ticket (Citation: Harmj0y Mimikatz and DCSync) or change an account's password as noted in Account Manipulation. (Citation: InsiderThreat ChangeNTLM July 2017) DCSync functionality has been included in the \"lsadump\" module in Mimikatz. (Citation: GitHub Mimikatz lsadump Module) Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol. (Citation: Microsoft NRPC Dec 2017)\n\nDetection: Common credential dumpers such as Mimikatz access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective Process Injection to reduce potential indicators of malicious activity.\n\nHash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised Valid Accounts in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, (Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nMonitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync. (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Note: Domain controllers may not log replication requests originating from the default domain controller account. (Citation: Harmj0y DCSync Sept 2015). Also monitor for network protocols  (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft NRPC Dec 2017) and other replication requests (Citation: Microsoft SAMR) from IPs not associated with known domain controllers. (Citation: AdSecurity DCSync Sept 2015)\n\nPlatforms: Windows\n\nData Sources: API monitoring, Process command-line parameters, Process monitoring, PowerShell logs\n\nPermissions Required: Administrator, SYSTEM\n\nContributors: Vincent Le Toux, Ed Williams, Trustwave, SpiderLabs", 
            "external_references": [
                {
                    "external_id": "T1003", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1003"
                }, 
                {
                    "description": "PowerSploit. (n.d.).  Retrieved December 4, 2014.", 
                    "source_name": "Powersploit", 
                    "url": "https://github.com/mattifestation/PowerSploit"
                }, 
                {
                    "description": "Metcalf, S. (2015, September 25). Mimikatz DCSync Usage, Exploitation, and Detection. Retrieved August 7, 2017.", 
                    "source_name": "ADSecurity Mimikatz DCSync", 
                    "url": "https://adsecurity.org/?p=1729"
                }, 
                {
                    "description": "Schroeder, W. (2015, September 22). Mimikatz and DCSync and ExtraSids, Oh My. Retrieved August 7, 2017.", 
                    "source_name": "Harmj0y Mimikatz and DCSync", 
                    "url": "http://www.harmj0y.net/blog/redteaming/mimikatz-and-dcsync-and-extrasids-oh-my/"
                }, 
                {
                    "description": "Deply, B., Le Toux, V. (2016, June 5). module ~ lsadump. Retrieved August 7, 2017.", 
                    "source_name": "GitHub Mimikatz lsadump Module", 
                    "url": "https://github.com/gentilkiwi/mimikatz/wiki/module-~-lsadump"
                }, 
                {
                    "description": "Microsoft. (2017, December 1). MS-DRSR Directory Replication Service (DRS) Remote Protocol. Retrieved December 4, 2017.", 
                    "source_name": "Microsoft DRSR Dec 2017", 
                    "url": "https://msdn.microsoft.com/library/cc228086.aspx"
                }, 
                {
                    "description": "Microsoft. (n.d.). IDL_DRSGetNCChanges (Opnum 3). Retrieved December 4, 2017.", 
                    "source_name": "Microsoft GetNCCChanges", 
                    "url": "https://msdn.microsoft.com/library/dd207691.aspx"
                }, 
                {
                    "description": "SambaWiki. (n.d.). DRSUAPI. Retrieved December 4, 2017.", 
                    "source_name": "Samba DRSUAPI", 
                    "url": "https://wiki.samba.org/index.php/DRSUAPI"
                }, 
                {
                    "description": "Wine API. (n.d.). samlib.dll. Retrieved December 4, 2017.", 
                    "source_name": "Wine API samlib.dll", 
                    "url": "https://source.winehq.org/WineAPI/samlib.html"
                }, 
                {
                    "description": "Warren, J. (2017, July 11). Manipulating User Passwords with Mimikatz. Retrieved December 4, 2017.", 
                    "source_name": "InsiderThreat ChangeNTLM July 2017", 
                    "url": "https://blog.stealthbits.com/manipulating-user-passwords-with-mimikatz-SetNTLM-ChangeNTLM"
                }, 
                {
                    "description": "Microsoft. (2017, December 1). MS-NRPC - Netlogon Remote Protocol. Retrieved December 6, 2017.", 
                    "source_name": "Microsoft NRPC Dec 2017", 
                    "url": "https://msdn.microsoft.com/library/cc237008.aspx"
                }, 
                {
                    "description": "Metcalf, S. (2015, September 25). Mimikatz DCSync Usage, Exploitation, and Detection. Retrieved December 4, 2017.", 
                    "source_name": "AdSecurity DCSync Sept 2015", 
                    "url": "https://adsecurity.org/?p=1729"
                }, 
                {
                    "description": "Schroeder, W. (2015, September 22). Mimikatz and DCSync and ExtraSids, Oh My. Retrieved December 4, 2017.", 
                    "source_name": "Harmj0y DCSync Sept 2015", 
                    "url": "http://www.harmj0y.net/blog/redteaming/mimikatz-and-dcsync-and-extrasids-oh-my/"
                }, 
                {
                    "description": "Microsoft. (n.d.). MS-SAMR Security Account Manager (SAM) Remote Protocol (Client-to-Server) - Transport. Retrieved December 4, 2017.", 
                    "source_name": "Microsoft SAMR", 
                    "url": "https://msdn.microsoft.com/library/cc245496.aspx"
                }, 
                {
                    "description": "Flathers, R. (2018, February 19). creddump7. Retrieved April 11, 2018.", 
                    "source_name": "GitHub Creddump7", 
                    "url": "https://github.com/Neohapsis/creddump7"
                }, 
                {
                    "description": "Wikipedia. (2018, March 10). Active Directory. Retrieved April 11, 2018.", 
                    "source_name": "Wikipedia Active Directory", 
                    "url": "https://en.wikipedia.org/wiki/Active%20Directory"
                }, 
                {
                    "description": "Microsoft. (n.d.). 2.2.1.1.4 Password Encryption. Retrieved April 11, 2018.", 
                    "source_name": "Microsoft GPP Key", 
                    "url": "https://msdn.microsoft.com/library/cc422924.aspx"
                }, 
                {
                    "description": "Security Research and Defense. (2014, May 13). MS14-025: An Update for Group Policy Preferences. Retrieved January 28, 2015.", 
                    "source_name": "SRD GPP", 
                    "url": "http://blogs.technet.com/b/srd/archive/2014/05/13/ms14-025-an-update-for-group-policy-preferences.aspx"
                }, 
                {
                    "description": "Campbell, C. (2012, May 24). GPP Password Retrieval with PowerShell. Retrieved April 11, 2018.", 
                    "source_name": "Obscuresecurity Get-GPPPassword", 
                    "url": "https://obscuresecurity.blogspot.co.uk/2012/05/gpp-password-retrieval-with-powershell.html"
                }, 
                {
                    "description": "Wilson, B. (2016, April 18). The Importance of KB2871997 and KB2928120 for Credential Protection. Retrieved April 11, 2018.", 
                    "source_name": "TechNet Blogs Credential Protection", 
                    "url": "https://blogs.technet.microsoft.com/askpfeplat/2016/04/18/the-importance-of-kb2871997-and-kb2928120-for-credential-protection/"
                }, 
                {
                    "description": "Microsoft. (2008, July 25). Credential Security Service Provider and SSO for Terminal Services Logon. Retrieved April 11, 2018.", 
                    "source_name": "Microsoft CredSSP", 
                    "url": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-vista/cc749211(v=ws.10)"
                }
            ], 
            "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "credential-access"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Credential Dumping", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "Vincent Le Toux", 
                "Ed Williams, Trustwave, SpiderLabs"
            ], 
            "x_mitre_data_sources": [
                "API monitoring", 
                "Process command-line parameters", 
                "Process monitoring", 
                "PowerShell logs"
            ], 
            "x_mitre_permissions_required": [
                "Administrator", 
                "SYSTEM"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:32.662Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses.\n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as Javascript.\n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also obfuscate commands executed from payloads or directly via a Command-Line Interface. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and whitelisting mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017) (Citation: PaloAlto EncodedCommand March 2017)\n\nAnother example of obfuscation is through the use of steganography, a technique of hiding messages or code in images, audio tracks, video clips, or text files. One of the first known and reported adversaries that used steganography activity surrounding Invoke-PSImage. The Duqu malware encrypted the gathered information from a victim's system and hid it into an image followed by exfiltrating the image to a C2 server. (Citation: Wikipedia Duqu) By the end of 2017, an adversary group used Invoke-PSImage to hide PowerShell commands in an image file (png) and execute the code on a victim's system. In this particular case the PowerShell code downloaded another obfuscated script to gather intelligence from the victim's machine and communicate it back to the adversary. (Citation: McAfee Malicious Doc Targets Pyeongchang Olympics)\n\nDetection: Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).\n\nFlag and analyze commands containing indicators of obfuscation and known suspicious syntax such as uninterpreted escape characters like '''^''' and '''\"'''. Windows' Sysmon and Event ID 4688 displays command-line arguments for processes. Deobfuscation tools can be used to detect these indicators in files/payloads. (Citation: GitHub Revoke-Obfuscation) (Citation: FireEye Revoke-Obfuscation July 2017) (Citation: GitHub Office-Crackros Aug 2016)\n\nObfuscation used in payloads for Initial Access can be detected at the network. Use network intrusion detection systems and email gateway filtering to identify compressed and encrypted attachments and scripts. Some email attachment detonation systems can open compressed and encrypted attachments. Payloads delivered over an encrypted connection from a website require encrypted network traffic inspection.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Network protocol analysis, Process use of network, Binary file metadata, File monitoring, Malware reverse engineering, Process command-line parameters, Environment variable, Process Monitoring, Windows event logs, Network intrusion detection system, Email gateway, SSL/TLS inspection\n\nDefense Bypassed: Host forensic analysis, Signature-based detection, Host intrusion prevention systems, Application whitelisting, Process whitelisting, Log analysis, Whitelisting by file name or path\n\nContributors: Red Canary, Christiaan Beek, @ChristiaanBeek", 
            "external_references": [
                {
                    "external_id": "T1027", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1027"
                }, 
                {
                    "description": "Adair, S.. (2016, November 9). PowerDuke: Widespread Post-Election Spear Phishing Campaigns Targeting Think Tanks and NGOs. Retrieved January 11, 2017.", 
                    "source_name": "Volexity PowerDuke November 2016", 
                    "url": "https://www.volexity.com/blog/2016/11/09/powerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos/"
                }, 
                {
                    "description": "Pierre-Marc Bureau. (2013, April 26). Linux/Cdorked.A: New Apache backdoor being used in the wild to serve Blackhole. Retrieved September 10, 2017.", 
                    "source_name": "Linux/Cdorked.A We Live Security Analysis", 
                    "url": "https://www.welivesecurity.com/2013/04/26/linuxcdorked-new-apache-backdoor-in-the-wild-serves-blackhole/"
                }, 
                {
                    "description": "Tedesco, B. (2016, September 23). Security Alert Summary. Retrieved February 12, 2018.", 
                    "source_name": "Carbon Black Obfuscation Sept 2016", 
                    "url": "https://www.carbonblack.com/2016/09/23/security-advisory-variants-well-known-adware-families-discovered-include-sophisticated-obfuscation-techniques-previously-associated-nation-state-attacks/"
                }, 
                {
                    "description": "Bohannon, D. & Carr N. (2017, June 30). Obfuscation in the Wild: Targeted Attackers Lead the Way in Evasion Techniques. Retrieved February 12, 2018.", 
                    "source_name": "FireEye Obfuscation June 2017", 
                    "url": "https://www.fireeye.com/blog/threat-research/2017/06/obfuscation-in-the-wild.html"
                }, 
                {
                    "description": "Bohannon, D. & Holmes, L. (2017, July 27). Revoke-Obfuscation: PowerShell Obfuscation Detection Using Science. Retrieved February 12, 2018.", 
                    "source_name": "FireEye Revoke-Obfuscation July 2017", 
                    "url": "https://www.fireeye.com/content/dam/fireeye-www/blog/pdfs/revoke-obfuscation-report.pdf"
                }, 
                {
                    "description": "White, J. (2017, March 10). Pulling Back the Curtains on EncodedCommand PowerShell Attacks. Retrieved February 12, 2018.", 
                    "source_name": "PaloAlto EncodedCommand March 2017", 
                    "url": "https://researchcenter.paloaltonetworks.com/2017/03/unit42-pulling-back-the-curtains-on-encodedcommand-powershell-attacks/"
                }, 
                {
                    "description": "Wikipedia. (2017, December 29). Duqu. Retrieved April 10, 2018.", 
                    "source_name": "Wikipedia Duqu", 
                    "url": "https://en.wikipedia.org/wiki/Duqu"
                }, 
                {
                    "description": "Saavedra-Morales, J., Sherstobitoff, R. (2018, January 6). Malicious Document Targets Pyeongchang Olympics. Retrieved April 10, 2018.", 
                    "source_name": "McAfee Malicious Doc Targets Pyeongchang Olympics", 
                    "url": "https://securingtomorrow.mcafee.com/mcafee-labs/malicious-document-targets-pyeongchang-olympics/"
                }, 
                {
                    "description": "Bohannon, D. (2017, July 27). Revoke-Obfuscation. Retrieved February 12, 2018.", 
                    "source_name": "GitHub Revoke-Obfuscation", 
                    "url": "https://github.com/danielbohannon/Revoke-Obfuscation"
                }, 
                {
                    "description": "Carr, N. (2016, August 14). OfficeCrackros. Retrieved February 12, 2018.", 
                    "source_name": "GitHub Office-Crackros Aug 2016", 
                    "url": "https://github.com/itsreallynick/office-crackros"
                }
            ], 
            "id": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "defense-evasion"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Obfuscated Files or Information", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "Red Canary", 
                "Christiaan Beek, @ChristiaanBeek"
            ], 
            "x_mitre_data_sources": [
                "Network protocol analysis", 
                "Process use of network", 
                "Binary file metadata", 
                "File monitoring", 
                "Malware reverse engineering", 
                "Process command-line parameters", 
                "Environment variable", 
                "Process Monitoring", 
                "Windows event logs", 
                "Network intrusion detection system", 
                "Email gateway", 
                "SSL/TLS inspection"
            ], 
            "x_mitre_defense_bypassed": [
                "Host forensic analysis", 
                "Signature-based detection", 
                "Host intrusion prevention systems", 
                "Application whitelisting", 
                "Process whitelisting", 
                "Log analysis", 
                "Whitelisting by file name or path"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:56.776Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may communicate using a common, standardized application layer protocol such as HTTP, HTTPS, SMTP, or DNS to avoid detection by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n\nFor connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are RPC, SSH, or RDP.\n\nDetection: Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used. (Citation: University of Birmingham C2)\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Packet capture, Netflow/Enclave netflow, Process use of network, Malware reverse engineering, Process monitoring\n\nRequires Network: Yes", 
            "external_references": [
                {
                    "external_id": "T1071", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1071"
                }, 
                {
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", 
                    "source_name": "University of Birmingham C2", 
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ], 
            "id": "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "command-and-control"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Standard Application Layer Protocol", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Packet capture", 
                "Netflow/Enclave netflow", 
                "Process use of network", 
                "Malware reverse engineering", 
                "Process monitoring"
            ], 
            "x_mitre_network_requirements": true, 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:38.511Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Masquerading occurs when the name or location of an executable, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation.  Several different variations of this technique have been observed.\n\nOne variant is for an executable to be placed in a commonly trusted directory or given the name of a legitimate, trusted program.  Alternatively, the filename given may be a close approximation of legitimate programs.  This is done to bypass tools that trust executables by relying on file name or path, as well as to deceive defenders and system administrators into thinking a file is benign by associating the name with something that is thought to be legitimate.\n\n\n===Windows===\nIn another variation of this technique, an adversary may use a renamed copy of a legitimate utility, such as rundll32.exe. (Citation: Endgame Masquerade Ball) An alternative case occurs when a legitimate utility is moved to a different directory and also renamed to avoid detections based on system utilities executing from non-standard paths. (Citation: F-Secure CozyDuke)\n\nAn example of abuse of trusted locations in Windows would be the <code>C:\\Windows\\System32</code> directory.  Examples of trusted binary names that can be given to malicious binares include \"explorer.exe\" and \"svchost.exe\".\n\n===Linux===\nAnother variation of this technique includes malicious binaries changing the name of their running process to that of a trusted or benign process, after they have been launched as opposed to before.  (Citation: Remaiten)\n\nAn example of abuse of trusted locations in Linux  would be the <code>/bin</code> directory.  Examples of trusted binary names that can be given to malicious binares include \"rsyncd\" and \"dbus-inotifier\".   (Citation: Fysbis Palo Alto Analysis)  (Citation: Fysbis Dr Web Analysis)\n\nDetection: Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity. (Citation: Endgame Masquerade Ball)\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: File monitoring, Process monitoring, Binary file metadata\n\nDefense Bypassed: Whitelisting by file name or path\n\nContributors: ENDGAME, Bartosz Jerzman", 
            "external_references": [
                {
                    "external_id": "T1036", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1036"
                }, 
                {
                    "description": "Ewing, P. (2016, October 31). How to Hunt: The Masquerade Ball. Retrieved October 31, 2016.", 
                    "source_name": "Endgame Masquerade Ball", 
                    "url": "https://www.endgame.com/blog/how-hunt-masquerade-ball"
                }, 
                {
                    "description": "F-Secure Labs. (2015, April 22). CozyDuke: Malware Analysis. Retrieved December 10, 2015.", 
                    "source_name": "F-Secure CozyDuke", 
                    "url": "https://www.f-secure.com/documents/996508/1030745/CozyDuke"
                }, 
                {
                    "description": "Michal Malik AND Marc-Etienne M.L\u00e9veill\u00e9. (2016, March 30). Meet Remaiten \u2013 a Linux bot on steroids targeting routers and potentially other IoT devices. Retrieved September 7, 2017.", 
                    "source_name": "Remaiten", 
                    "url": "https://www.welivesecurity.com/2016/03/30/meet-remaiten-a-linux-bot-on-steroids-targeting-routers-and-potentially-other-iot-devices/"
                }, 
                {
                    "description": "Bryan Lee and Rob Downs. (2016, February 12). A Look Into Fysbis: Sofacy\u2019s Linux Backdoor. Retrieved September 10, 2017.", 
                    "source_name": "Fysbis Palo Alto Analysis", 
                    "url": "https://researchcenter.paloaltonetworks.com/2016/02/a-look-into-fysbis-sofacys-linux-backdoor/"
                }, 
                {
                    "description": "Doctor Web. (2014, November 21). Linux.BackDoor.Fysbis.1. Retrieved December 7, 2017.", 
                    "source_name": "Fysbis Dr Web Analysis", 
                    "url": "https://vms.drweb.com/virus/?i=4276269"
                }
            ], 
            "id": "attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "defense-evasion"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Masquerading", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "ENDGAME", 
                "Bartosz Jerzman"
            ], 
            "x_mitre_data_sources": [
                "File monitoring", 
                "Process monitoring", 
                "Binary file metadata"
            ], 
            "x_mitre_defense_bypassed": [
                "Whitelisting by file name or path"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }
    ], 
    "hash": "e1cb003dd69a085b07d6202ecf6a892831d49b180ee69c4cec7e4113a4868f60", 
    "name": "OLDBAIT"
}