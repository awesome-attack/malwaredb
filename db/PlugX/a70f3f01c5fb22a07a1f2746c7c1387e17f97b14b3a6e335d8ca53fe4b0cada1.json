{
    "alias": "PlugX", 
    "analysis": {
        "_id": {
            "$oid": "5ba558edba80ffe26b515a3c"
        }, 
        "description": "PE32 executable (GUI) Intel 80386, for MS Windows", 
        "file_id": "9a8f1a42bc98296a5a76324ae4ef5dfac814d3f2", 
        "fuzzy_hash": "3072:zda/0wL/azJ71RcgiNR6fH3Bh+fCf6rfI:zdaMjN7jC6/Rh+fCq", 
        "hash": {
            "md5": "17883e9dc88ec7f2ce69dac32c0e30dc", 
            "sha1": "9a8f1a42bc98296a5a76324ae4ef5dfac814d3f2", 
            "sha2": "a70f3f01c5fb22a07a1f2746c7c1387e17f97b14b3a6e335d8ca53fe4b0cada1"
        }, 
        "mime_type": "application/x-dosexec", 
        "particular_header": {
            "av_analysis": "Not_implemented", 
            "certificate": {}, 
            "child_of": "Not_implemented", 
            "cypher": "Not_implemented", 
            "date": "'0x4F73051D [SUSPICIOUS]'", 
            "ep": "'0x4011bb .text 0/6'", 
            "exports": {
                "AddressOfNames": 9280, 
                "AddressOfOrdinals": 9288, 
                "addressOfFunctions": 9272, 
                "base": 1, 
                "characteristics": 0, 
                "majorVersion": 0, 
                "minorVersion": 0, 
                "name": 9292, 
                "numberOfFunctions": 2, 
                "numberOfNames": 2, 
                "symbols": [
                    {
                        "RVA": 4286, 
                        "name": "servicemain", 
                        "ordinal": 1
                    }, 
                    {
                        "RVA": 4533, 
                        "name": "maindll", 
                        "ordinal": 2
                    }
                ], 
                "timeDateStamp": 1332938013
            }, 
            "file_entropy": 7.860171917533771, 
            "headers": {
                "dos_header": {
                    "cblp": "'0x90'", 
                    "cp": "'0x3'", 
                    "cparhdr": "'0x4'", 
                    "crlc": "'0x0'", 
                    "cs": "'0x0'", 
                    "csum": "'0x0'", 
                    "ip": "'0x0'", 
                    "lfanew": "'0xd8'", 
                    "lfarlc": "'0x40'", 
                    "magic": "'0x5a4d'", 
                    "maxalloc": "'0xffff'", 
                    "minalloc": "'0x0'", 
                    "oemid": "'0x0'", 
                    "oeminfo": "'0x0'", 
                    "ovno": "'0x0'", 
                    "res": "'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", 
                    "res2": "'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", 
                    "sp": "'0xb8'", 
                    "ss": "'0x0'"
                }, 
                "file_header": {
                    "Characteristics": "'0x102'", 
                    "Machine": "'0x14c'", 
                    "NumberOfSections": "'0x6'", 
                    "NumberOfSymbols": "'0x0'", 
                    "PointerToSymbolTable": "'0x0'", 
                    "SizeOfOptionalHeader": "'0xe0'", 
                    "TimeDateStamp": "'0x4f73051d'"
                }, 
                "nt_header": {
                    "Signature": "'0x4550'"
                }, 
                "optional_header": {
                    "AddressOfEntryPoint": "'0x11bb'", 
                    "BaseOfCode": "'0x1000'", 
                    "CheckSum": "'0x23b4e'", 
                    "DllCharacteristics": "'0x8540'", 
                    "FileAlignment": "'0x200'", 
                    "ImageBase": "'0x400000'", 
                    "LoaderFlags": "'0x0'", 
                    "Magic": "'0x10b'", 
                    "MajorImageVersion": "'0x0'", 
                    "MajorLinkerVersion": "'0xa'", 
                    "MajorOperatingSystemVersion": "'0x5'", 
                    "MajorSubsystemVersion": "'0x5'", 
                    "MinorImageVersion": "'0x0'", 
                    "MinorLinkerVersion": "'0x0'", 
                    "MinorOperatingSystemVersion": "'0x1'", 
                    "MinorSubsystemVersion": "'0x1'", 
                    "NumberOfRvaAndSizes": "'0x10'", 
                    "Reserved1": "'0x0'", 
                    "SectionAlignment": "'0x1000'", 
                    "SizeOfCode": "'0xa00'", 
                    "SizeOfHeaders": "'0x400'", 
                    "SizeOfHeapCommit": "'0x1000'", 
                    "SizeOfHeapReserve": "'0x100000'", 
                    "SizeOfImage": "'0x20000'", 
                    "SizeOfInitializedData": "'0x1a600'", 
                    "SizeOfStackCommit": "'0x1000'", 
                    "SizeOfStackReserve": "'0x100000'", 
                    "SizeOfUninitializedData": "'0x0'", 
                    "Subsystem": "'0x2'"
                }
            }, 
            "imports": [
                {
                    "functions": [
                        "'terminateprocess'", 
                        "'getcurrentprocess'", 
                        "'exitprocess'", 
                        "'sleep'", 
                        "'expandenvironmentstringsw'", 
                        "'localfree'", 
                        "'virtualprotect'", 
                        "'getlasterror'", 
                        "'virtualalloc'", 
                        "'setfilepointer'", 
                        "'lstrlena'", 
                        "'writefile'", 
                        "'createfilew'", 
                        "'multibytetowidechar'", 
                        "'lstrlenw'", 
                        "'setlasterror'", 
                        "'getlocaltime'", 
                        "'localalloc'", 
                        "'outputdebugstringa'", 
                        "'closehandle'", 
                        "'isprocessorfeaturepresent'"
                    ], 
                    "lib": "'kernel32.dll'"
                }, 
                {
                    "functions": [
                        "'wsprintfw'", 
                        "'wsprintfa'", 
                        "'messageboxa'"
                    ], 
                    "lib": "'user32.dll'"
                }, 
                {
                    "functions": [
                        "'setservicestatus'", 
                        "'registerservicectrlhandlerexw'"
                    ], 
                    "lib": "'advapi32.dll'"
                }
            ], 
            "imports_tree": "added", 
            "packer_detection": "Unknown", 
            "packer_version": "Not_implemented", 
            "res_entries": [
                {
                    "lang": "'LANG_ENGLISH'", 
                    "name": "'RT_MANIFEST'", 
                    "rva": "'0x1e058'", 
                    "sha1": "bac45b86a9c48fc3756a46809c101570d349737d", 
                    "size": "'0x15a'", 
                    "sublang": "'SUBLANG_ENGLISH_US'", 
                    "type": "'ASCII text, with CRLF line terminators'"
                }
            ], 
            "sections": [
                {
                    "characteristics": "0x60000020", 
                    "entropy": 5.797548056923892, 
                    "fuzzy_hash": "48:1V1+ZoKUJKuOID9WBY6KA2ejVh3cA7IZiBSmf6GM0UBGSc11XlWzN:1T+cFELfVhMlZySmfTFGU1U", 
                    "md5": "b607685d9be8d5d894f3f13570f69fb4", 
                    "name": "'.text\\x00\\x00\\x00'", 
                    "sha1": "f0228d17af201533f905fe03d42946c113ed1231", 
                    "sha2": "bbb5f602a006ac448bc1708bc5543a2da67fc035423a07a9fe868af46e90c19b", 
                    "size_raw_data": 2560, 
                    "virtual_size": 2180, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0x40000040", 
                    "entropy": 4.103020457334023, 
                    "fuzzy_hash": "24:93/PP4VXeCS0Y3/PdwpcEBLxQwAeXIuxA5CijxIhYT6Eu:93vgXlzY394cEBLDIlD1IhYT6", 
                    "md5": "8b36a86ab962ced78ef5c841a802d607", 
                    "name": "'.rdata\\x00\\x00'", 
                    "sha1": "37febe115ee1997509c0583501aa18552883199e", 
                    "sha2": "5c03d0451d30d7bf8bd79184f1956be26b1956b5253726e377c1ec9bad4a8732", 
                    "size_raw_data": 1536, 
                    "virtual_size": 1216, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0xc0000040", 
                    "entropy": 7.935049466036911, 
                    "fuzzy_hash": "3072:Ada/0wL/azJ71RcgiNR6fH3Bh+fCf6rfI:AdaMjN7jC6/Rh+fCq", 
                    "md5": "d82d7ce4cbd1947865e17d70f6ae8c0b", 
                    "name": "'.data\\x00\\x00\\x00'", 
                    "sha1": "937d7b7d235a347154202a4b39fcf722619fc250", 
                    "sha2": "51a8650fb808bab7b853f490296d49f00b17aa966c298bbf050c8a945461a457", 
                    "size_raw_data": 104448, 
                    "virtual_size": 104076, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0x40000040", 
                    "entropy": 0.06116285246123741, 
                    "fuzzy_hash": "3:Blll/l:", 
                    "md5": "8ad77b7a36a8c5fc14778372e7cb345e", 
                    "name": "'.CRT\\x00\\x00\\x00\\x00'", 
                    "sha1": "c30f0b786b873d4b64f30a11846714b0989f5730", 
                    "sha2": "24e71f2cc9e4f06cb051f4f34ae69ef8df6a1477e2a52f6aa6447bdaa46a5004", 
                    "size_raw_data": 512, 
                    "virtual_size": 4, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0x40000040", 
                    "entropy": 5.10500606091045, 
                    "fuzzy_hash": "6:4tgqA+ORu9Td8HvWBRu9TNNSTfUTdNciWkoi8R32x8RTdN9TIHW+QKQKQKQx:gT3a3vaMN2U5NciE32xA5NEWNhhhx", 
                    "md5": "0cc425d0556c63acb7c04b9b1a211d5b", 
                    "name": "'.rsrc\\x00\\x00\\x00'", 
                    "sha1": "29f40a6f4e0a20c010bc29f9a2235c42a995f89e", 
                    "sha2": "c66841853bfcddeec1cee0f0a319783988bdc74decc1c0d4c00c27c60dfa80e8", 
                    "size_raw_data": 512, 
                    "virtual_size": 436, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0x42000040", 
                    "entropy": 2.1380254980268214, 
                    "fuzzy_hash": "6:MrV+PKsUMKArqy4A0ofW8YQKCQq7QK+KT7SMeNSjPHs:Mr4KnMhQA0CFYMHr+KTWMeAjvs", 
                    "md5": "2cb3035296e335cebbd31f2b21cd2c8a", 
                    "name": "'.reloc\\x00\\x00'", 
                    "sha1": "ddd6a1474e5e96a0e796179e89b31d6f131c66d6", 
                    "sha2": "e9def7a1972b76c67133d0e713e13d166c977cbe69abbc5be6764d8b6a399caa", 
                    "size_raw_data": 1024, 
                    "virtual_size": 600, 
                    "write_executable": "False"
                }
            ], 
            "strings": {
                "domains": [
                    "'j.wq'", 
                    "'l.zv'"
                ], 
                "hidden_imports": [
                    "'exit'"
                ], 
                "interesting": [
                    "'shell1.cpp'", 
                    "'shell1.exe'", 
                    "'shell1.pdb'"
                ], 
                "raw_strings": [
                    "'        <requestedexecutionlevel level='", 
                    "'      </requestedprivileges>'", 
                    "'      <requestedprivileges>'", 
                    "'    </security>'", 
                    "'    <security>'", 
                    "'  </trustinfo>'", 
                    "'  <trustinfo xmlns='", 
                    "'  x2'", 
                    "' (cq'", 
                    "' 0nn'", 
                    "' 3cp'", 
                    "' >e4'", 
                    "' _w03'", 
                    "' g]l'", 
                    "' manifestversion='", 
                    "' mqb'", 
                    "' pv<'", 
                    "' t,s1g'", 
                    "' tzt'", 
                    "' uiaccess='", 
                    "' uxzq'", 
                    "'$ %od'", 
                    "'$.d7'", 
                    "'$/<-c'", 
                    "'$/ztd,bz'", 
                    "'$4e '", 
                    "'$>lw'", 
                    "'$_nn'", 
                    "'$b$nc'", 
                    "'$byc'", 
                    "'$f6u5q'", 
                    "'$g2w'", 
                    "'$gzr'", 
                    "'$pim'", 
                    "'$qy_'", 
                    "'$wopq.1'", 
                    "'$y(qo'", 
                    "'$ynn'", 
                    "'%5zq'", 
                    "'%7e%'", 
                    "'%?ed'", 
                    "'%ami8a'", 
                    "'%m-d'", 
                    "'&-re'", 
                    "'&@p&74'", 
                    "'&a:g'", 
                    "'&bag'", 
                    "'&c59h.'", 
                    "'&d3n'", 
                    "'&ot4'", 
                    "'&t[26'", 
                    "'&y6fcuu'", 
                    "'&y]%'", 
                    "'(3ls'", 
                    "'(5ijp'", 
                    "'(8yb'", 
                    "'(=aa'", 
                    "'(g?k'", 
                    "'(jcb'", 
                    "'(v>-y'", 
                    "'(wk3'", 
                    "'(wmt'", 
                    "')2o?'", 
                    "')kww'", 
                    "')pif'", 
                    "')u5gy)'", 
                    "')v&v'", 
                    "')wqk'", 
                    "')x$l'", 
                    "')ypv'", 
                    "',78b'", 
                    "',9/yk'", 
                    "',9i6@a'", 
                    "',]gd'", 
                    "',bp '", 
                    "',g6b'", 
                    "',i2zsl'", 
                    "',m:co'", 
                    "',mgmy'", 
                    "',nlz-j'", 
                    "'-.g>'", 
                    "'-ax,a'", 
                    "'-bxh'", 
                    "'-pcr'", 
                    "'-w&r'", 
                    "'.%mrt'", 
                    "'.0qfj'", 
                    "'.7l?]'", 
                    "'.<4&'", 
                    "'.aby'", 
                    "'.b0r'", 
                    "'.fl54x'", 
                    "'.hjk'", 
                    "'.jvh'", 
                    "'.ozxzl'", 
                    "'.uk>0'", 
                    "'/ 0o-'", 
                    "'/44h&'", 
                    "'/ap,'", 
                    "'/coa'", 
                    "'/dzg'", 
                    "'/gbau'", 
                    "'/lcf'", 
                    "'/qxe'", 
                    "'/rl6ga'", 
                    "'/s zfz'", 
                    "'080>0i0'", 
                    "'0<ic'", 
                    "'0b2&'", 
                    "'0f4q'", 
                    "'0j]w'", 
                    "'0lt[4'", 
                    "'0tdk'", 
                    "'0ufh'", 
                    "'0w=c'", 
                    "'1$)b'", 
                    "'1.vw'", 
                    "'1?h_%97'", 
                    "'1_w<a'", 
                    "'1ez['", 
                    "'1f1p1v1'", 
                    "'1g1m1v1'", 
                    "'1t)6'", 
                    "'1xtim'", 
                    "'1yez'", 
                    "'1yi/k'", 
                    "'2(c2_'", 
                    "'29sj]'", 
                    "'2@pj'", 
                    "'2gdo'", 
                    "'2o$f'", 
                    "'2qtr'", 
                    "'2w<l'", 
                    "'30ld<'", 
                    "'311bn'", 
                    "'313]3'", 
                    "'3333'", 
                    "'3fvj'", 
                    "'3lbh'", 
                    "'4:4l4'", 
                    "'4byx_'", 
                    "'4dmt'", 
                    "'4etg'", 
                    "'4lup@'", 
                    "'4qae'", 
                    "'4xaey.-@'", 
                    "'4yfa'", 
                    "'4zav'", 
                    "'5 5$5(5,505z5'", 
                    "'5 k='", 
                    "'51&ac'", 
                    "'57tw'", 
                    "'58 @'", 
                    "'5l @'", 
                    "'5po('", 
                    "'5t @'", 
                    "'6$6(6,6m6w6'", 
                    "'6[]q@'", 
                    "'6do&='", 
                    "'6dq='", 
                    "'6fy2'", 
                    "'6lsn4z'", 
                    "'6lth'", 
                    "'6n0/'", 
                    "'6vps'", 
                    "'6w<u'", 
                    "'6x7f'", 
                    "'7 7$7(7x8'", 
                    "'721x'", 
                    "'7exo'", 
                    "'7fu2<_'", 
                    "'7gx['", 
                    "'7tl]'", 
                    "'7x&y'", 
                    "'89bz@'", 
                    "'8<0a['", 
                    "'8_/1y'", 
                    "'8eg5m-<'", 
                    "'8gu6'", 
                    "'8o<c%'", 
                    "'8p?m'", 
                    "'8rso'", 
                    "'9,nc0'", 
                    "'99]j'", 
                    "'99cq'", 
                    "'9noj'", 
                    "'9t 4'", 
                    "'9wbm'", 
                    "'9wq8'", 
                    "'9yw2'", 
                    "': w '", 
                    "':<3t'", 
                    "':@vf'", 
                    "':apz'", 
                    "':cb('", 
                    "':gis'", 
                    "':ml&'", 
                    "':p@%'", 
                    "':q8x'", 
                    "':rnis'", 
                    "':u-_'", 
                    "'</assembly>papaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpaddingpaddingxxpad'", 
                    "'<0)='", 
                    "'<2p/('", 
                    "'<assembly xmlns='", 
                    "'<b2:'", 
                    "'<b_n'", 
                    "'<cue'", 
                    "'<klneo'", 
                    "'<po3'", 
                    "'<q3i'", 
                    "'<vjp-a'", 
                    "'<xys'", 
                    "'=,g4'", 
                    "'=5i3'", 
                    "'=76s'", 
                    "'=:2x'", 
                    "'=?r$'", 
                    "'=@56q'", 
                    "'=a=u'", 
                    "'=ahj'", 
                    "'=b&x'", 
                    "'=d @'", 
                    "'=s=y>'", 
                    "'=si0i'", 
                    "'=xv4'", 
                    "'>.jhf'", 
                    "'>4>v9'", 
                    "'>9jv'", 
                    "'>9wl'", 
                    "'></requestedexecutionlevel>'", 
                    "'>cjs'", 
                    "'>iq$'", 
                    "'>nf=ca'", 
                    "'>qzpu'", 
                    "'>t[8'", 
                    "'>y.d[c -f '", 
                    "'>yeoe'", 
                    "'?-<2feo'", 
                    "'?725'", 
                    "'?u6o'", 
                    "'?uj['", 
                    "'?y46'", 
                    "'@%53b'", 
                    "'@,rx'", 
                    "'@7k:7'", 
                    "'@=[s'", 
                    "'@[td'", 
                    "'@cma'", 
                    "'@d4q'", 
                    "'@ic3'", 
                    "'@nnn'", 
                    "'[&1sa.'", 
                    "'[/f='", 
                    "'[2-jb&'", 
                    "'[4yi'", 
                    "'[<rg'", 
                    "'[b /?'", 
                    "'[ds,vc='", 
                    "'[e[1'", 
                    "'[elh)'", 
                    "'[qkgjn'", 
                    "'[yxd'", 
                    "']4$s'", 
                    "']h7d'", 
                    "']hgv'", 
                    "']i9c,'", 
                    "']jf.'", 
                    "']mueu'", 
                    "']nv,u'", 
                    "']rn%'", 
                    "']srl['", 
                    "']ybb'", 
                    "']zwd'", 
                    "'_3on'", 
                    "'_7ehj'", 
                    "'__ztt'", 
                    "'_ix?'", 
                    "'_o4o'", 
                    "'_o<k'", 
                    "'_p:='", 
                    "'_r,$'", 
                    "'_tkq'", 
                    "'_ue0'", 
                    "'a)=9'", 
                    "'a52e'", 
                    "'ab4w'", 
                    "'abl4'", 
                    "'ac f'", 
                    "'acth'", 
                    "'adye'", 
                    "'akm ]'", 
                    "'am$r'", 
                    "'ao]c'", 
                    "'aq4 '", 
                    "'arya'", 
                    "'asinvoker'", 
                    "'at7c'", 
                    "'auhg'", 
                    "'b&3n'", 
                    "'b3qv%'", 
                    "'b8c4'", 
                    "'b8k?cy'", 
                    "'b>?0g'", 
                    "'b]yue'", 
                    "'bb/s'", 
                    "'beqt'", 
                    "'bge$w'", 
                    "'bgz.'", 
                    "'bhobt'", 
                    "'bjus'", 
                    "'bkb$'", 
                    "'bnk='", 
                    "'bojl'", 
                    "'bph<'", 
                    "'bqu%'", 
                    "'bvej1'", 
                    "'bvz>2'", 
                    "'bygd.'", 
                    "'byhu'", 
                    "'byq?'", 
                    "'bza('", 
                    "'bzgw'", 
                    "'c4&f'", 
                    "'c8em'", 
                    "'cbhq'", 
                    "'ce$8'", 
                    "'cedi'", 
                    "'cem$y'", 
                    "'clzb'", 
                    "'csrf'", 
                    "'cuge'", 
                    "'cwdh'", 
                    "'cxmm'", 
                    "'d,d '", 
                    "'d03,n'", 
                    "'d0pf'", 
                    "'d47)'", 
                    "'d50_'", 
                    "'d[9:'", 
                    "'db)wl'", 
                    "'dddd'", 
                    "'desktop'", 
                    "'djln$'", 
                    "'dku t'", 
                    "'dmne'", 
                    "'dq9<,'", 
                    "'drun'", 
                    "'dt&?'", 
                    "'du$[.'", 
                    "'dvxk'", 
                    "'dwfpo'", 
                    "'dxix'", 
                    "'e$tv'", 
                    "'e-1<'", 
                    "'e/of'", 
                    "'ecom'", 
                    "'ecwk'", 
                    "'eg%k'", 
                    "'ejaa'", 
                    "'ekaf'", 
                    "'el=)m8'", 
                    "'em,t'", 
                    "'emmc'", 
                    "'en0d'", 
                    "'eoys=6'", 
                    "'eq1l'", 
                    "'et&c'", 
                    "'ewuku'", 
                    "'exit'", 
                    "'f%uvq'", 
                    "'f(gpi'", 
                    "'f)be'", 
                    "'f/xmc'", 
                    "'f>c>lq'", 
                    "'f]c-x<'", 
                    "'f]odw'", 
                    "'fa:nz'", 
                    "'false'", 
                    "'fastgui'", 
                    "'fce,'", 
                    "'fd90'", 
                    "'fgiu'", 
                    "'fh$:'", 
                    "'fi7oc'", 
                    "'fiio'", 
                    "'file: %s, line: %d, error: %d'", 
                    "'fiqd$'", 
                    "'fj=r'", 
                    "'fja76a8'", 
                    "'fm-/r'", 
                    "'fnj>'", 
                    "'fsy('", 
                    "'fw(q'", 
                    "'fyq_'", 
                    "'g ha'", 
                    "'g,kh'", 
                    "'g3a@'", 
                    "'g4&a'", 
                    "'g5ga'", 
                    "'g7gk'", 
                    "'g8hrog'", 
                    "'g99]'", 
                    "'g=8w'", 
                    "'g@dh'", 
                    "'gbgxc'", 
                    "'gbvo'", 
                    "'gi>9'", 
                    "'go<i'", 
                    "'gozp'", 
                    "'gpf@'", 
                    "'gv0d'", 
                    "'gvj4'", 
                    "'gzct'", 
                    "'h$4<'", 
                    "'h&v,u'", 
                    "'h0yq'", 
                    "'h?$j'", 
                    "'h@@j'", 
                    "'hal&'", 
                    "'hb.-'", 
                    "'hf]%e'", 
                    "'hio7m'", 
                    "'hiqpr,'", 
                    "'hk%v'", 
                    "'hk=y'", 
                    "'hpk0'", 
                    "'hukm%s'", 
                    "'hyr$'", 
                    "'hzhd'", 
                    "'i/y:'", 
                    "'i0:wc5zc'", 
                    "'i4%n'", 
                    "'i4f_m'", 
                    "'i>uk'", 
                    "'i?45_'", 
                    "'ia/?'", 
                    "'iewkpi4'", 
                    "'ihoi'", 
                    "'iq]_'", 
                    "'iqb5o'", 
                    "'isx8'", 
                    "'iw@?f'", 
                    "'j.nh.'", 
                    "'j.wq'", 
                    "'j/byy'", 
                    "'j3f<'", 
                    "'jb4u'", 
                    "'jbac'", 
                    "'jcgi'", 
                    "'jciq'", 
                    "'jcmr'", 
                    "'jd3b=?'", 
                    "'je5e'", 
                    "'jgiut'", 
                    "'jl3e'", 
                    "'jlu%>'", 
                    "'jmlc'", 
                    "'jnd5'", 
                    "'jndw-'", 
                    "'jx3d'", 
                    "'jxx]'", 
                    "'jy_t1'", 
                    "'jync'", 
                    "'k v5'", 
                    "'k-ni-'", 
                    "'k3%o'", 
                    "'k3b3'", 
                    "'k><tf'", 
                    "'kbnk'", 
                    "'kcj>'", 
                    "'ke0$'", 
                    "'kehu'", 
                    "'kik.e'", 
                    "'klo('", 
                    "'kntv'", 
                    "'kp8qw'", 
                    "'kq<n'", 
                    "'ks&<'", 
                    "'kw1i'", 
                    "'l%ul'", 
                    "'l,-y'", 
                    "'l.zv'", 
                    "'l8gf'", 
                    "'l[)vv'", 
                    "'l[vnk'", 
                    "'lfclo'", 
                    "'lgr@c'", 
                    "'lhir'", 
                    "'li>g'", 
                    "'libr'", 
                    "'lloc'", 
                    "'llopw'", 
                    "'lmvbx)z'", 
                    "'load'", 
                    "'lplo@'", 
                    "'lpq4'", 
                    "'lpxv'", 
                    "'lry_'", 
                    "'ltjh0'", 
                    "'lv.['", 
                    "'lx<b&'", 
                    "'lxa]'", 
                    "'lz[6'", 
                    "'m s8'", 
                    "'m(&h'", 
                    "'m6ami'", 
                    "'m:n,'", 
                    "'m>$.'", 
                    "'m>gq'", 
                    "'m?y('", 
                    "'m_z['", 
                    "'maindll'", 
                    "'mcv/'", 
                    "'memcf'", 
                    "'mgnt:pgj'", 
                    "'miib'", 
                    "'mke%'", 
                    "'mljy'", 
                    "'mmo5'", 
                    "'mpooj'", 
                    "'mqk1'", 
                    "'msm,'", 
                    "'mt_u'", 
                    "'mtg/'", 
                    "'mway'", 
                    "'mzsb'", 
                    "'mzx>'", 
                    "'n$fh'", 
                    "'n&<0'", 
                    "'n/p4g='", 
                    "'n0%n'", 
                    "'n6md'", 
                    "'n7mr'", 
                    "'n:vw'", 
                    "'n:zq'", 
                    "'nt=]'", 
                    "'ntdlf'", 
                    "'nubt'", 
                    "'nw&8'", 
                    "'nzz,'", 
                    "'o0we'", 
                    "'o2d0hg'", 
                    "'o3hrm'", 
                    "'o457z'", 
                    "'o4vs '", 
                    "'o<rc'", 
                    "'o?ma'", 
                    "'o[>d'", 
                    "'oc9sa'", 
                    "'of@f'", 
                    "'olrcn'", 
                    "'onfz'", 
                    "'onpf'", 
                    "'oq/w'", 
                    "'or2]l'", 
                    "'os9g>'", 
                    "'ost$'", 
                    "'ot-:'", 
                    "'ov f'", 
                    "'oxeb'", 
                    "'p$fn'", 
                    "'p0ncuen'", 
                    "'p7]m'", 
                    "'p<gr'", 
                    "'p].,'", 
                    "'p][99'", 
                    "'p]ya2'", 
                    "'pa.&'", 
                    "'pam7'", 
                    "'pb4eq'", 
                    "'peiq'", 
                    "'pj vs'", 
                    "'pjog'", 
                    "'plug'", 
                    "'pn8w'", 
                    "'poya'", 
                    "'ppdq'", 
                    "'pr6_'", 
                    "'pres'", 
                    "'ps6e'", 
                    "'pwvj'", 
                    "'px[j'", 
                    "'pz[3'", 
                    "'q00y'", 
                    "'q2xks)'", 
                    "'q4a44'", 
                    "'q5qg'", 
                    "'q6aj'", 
                    "'q6rq'", 
                    "'q71>'", 
                    "'qd3='", 
                    "'qd3cs.'", 
                    "'qe0ug&'", 
                    "'qi/qy'", 
                    "'qjz5a'", 
                    "'qq9p'", 
                    "'qrjg'", 
                    "'qso1'", 
                    "'qsvwj@h'", 
                    "'quqi'", 
                    "'qv0]'", 
                    "'qx@p'", 
                    "'qxaeuh'", 
                    "'qxja'", 
                    "'qxrvn)/'", 
                    "'qz&n'", 
                    "'qzo&'", 
                    "'r 3,q'", 
                    "'r$7_'", 
                    "'r(ve'", 
                    "'r)oj'", 
                    "'r,yu,'", 
                    "'r2yt'", 
                    "'r50c'", 
                    "'rc<>'", 
                    "'rdpg'", 
                    "'release'", 
                    "'rg$@ga'", 
                    "'rjsd7'", 
                    "'rn-l'", 
                    "'rokjlw'", 
                    "'rom]x'", 
                    "'rpqped'", 
                    "'rryq'", 
                    "'rsds'", 
                    "'rti]'", 
                    "'rtld'", 
                    "'ru(&xy('", 
                    "'ruon)'", 
                    "'rwrc'", 
                    "'rxwc'", 
                    "'s)e(('", 
                    "'s1rya'", 
                    "'s3?3'", 
                    "'s72y'", 
                    "'s<hw'", 
                    "'s<ldy'", 
                    "'s=.w'", 
                    "'s=ph'", 
                    "'s?3bj'", 
                    "'s[fu'", 
                    "'s]4yk8'", 
                    "'sbuf'", 
                    "'se3['", 
                    "'servicemain'", 
                    "'seuy'", 
                    "'sf.p'", 
                    "'shell1'", 
                    "'shell1.cpp'", 
                    "'shell1.exe'", 
                    "'shell1.pdb'", 
                    "'siq,'", 
                    "'slov'", 
                    "'sm6hsm'", 
                    "'sn.s'", 
                    "'soy_y'", 
                    "'spmy'", 
                    "'syiev'", 
                    "'syw:'", 
                    "'t2r6'", 
                    "'t5-l_'", 
                    "'t>yn'", 
                    "'t?<bm'", 
                    "'tazq:6q'", 
                    "'tcmy'", 
                    "'tg(%&'", 
                    "'thref'", 
                    "'tmaeq-)'", 
                    "'tn]k'", 
                    "'tpvd'", 
                    "'trl&'", 
                    "'ttm/'", 
                    "'tu851i'", 
                    "'tuf-'", 
                    "'tym%'", 
                    "'u)@8'", 
                    "'u0uo'", 
                    "'u2@w?f'", 
                    "'u3q1'", 
                    "'u4pw'", 
                    "'u8<b'", 
                    "'u:/<'", 
                    "'u<)$'", 
                    "'uala'", 
                    "'ualf'", 
                    "'ubhl'", 
                    "'ubzg'", 
                    "'uc(k'", 
                    "'ueaw'", 
                    "'ultcu'", 
                    "'um?l'", 
                    "'un$g'", 
                    "'upk@'", 
                    "'uqmrf'", 
                    "'urn:schemas-microsoft-com:asm.v1'", 
                    "'urn:schemas-microsoft-com:asm.v3'", 
                    "'urpr'", 
                    "'urqo3'", 
                    "'urro'", 
                    "'us%2'", 
                    "'users'", 
                    "'v0b-'", 
                    "'v3)wobq'", 
                    "'v31w'", 
                    "'v]y.'", 
                    "'v_4w'", 
                    "'vfvi'", 
                    "'vgc4'", 
                    "'virt'", 
                    "'vp[t'", 
                    "'vpdm'", 
                    "'vrlo'", 
                    "'vvi$r'", 
                    "'vvmx'", 
                    "'vy0wbj'", 
                    "'w&jo'", 
                    "'w:2px'", 
                    "'w<nr'", 
                    "'w>z%'", 
                    "'w[er'", 
                    "'w_3yq'", 
                    "'wcc-'", 
                    "'wdxv'", 
                    "'wj]r'", 
                    "'wkvk'", 
                    "'wmcr'", 
                    "'wmt:b'", 
                    "'wttm'", 
                    "'wuli'", 
                    "'wwio'", 
                    "'wx%f'", 
                    "'x28ze_]'", 
                    "'x5w<'", 
                    "'x<wv'", 
                    "'x=zx7'", 
                    "'x@gq'", 
                    "'x@ha'", 
                    "'x[5xzz'", 
                    "'xaty'", 
                    "'xe8jaa'", 
                    "'xj2s'", 
                    "'xmrg'", 
                    "'xn6c'", 
                    "'xpb,1'", 
                    "'xsco'", 
                    "'xsi<'", 
                    "'xu=y'", 
                    "'xulg'", 
                    "'xurj'", 
                    "'xx.2'", 
                    "'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxh'", 
                    "'y e@p'", 
                    "'y j7'", 
                    "'y-4ph'", 
                    "'y3_u'", 
                    "'y6%9'", 
                    "'y6e6i'", 
                    "'y],s'", 
                    "'yakr'", 
                    "'ybrd'", 
                    "'yefl'", 
                    "'yfndp['", 
                    "'yjc(-'", 
                    "'yl2fwhj'", 
                    "'ymr]'", 
                    "'ytdwz'", 
                    "'yv]?'", 
                    "'yvif'", 
                    "'yvio'", 
                    "'yw>g'", 
                    "'yxgb'", 
                    "'z $f'", 
                    "'z$-ho'", 
                    "'z)qo'", 
                    "'z,7$'", 
                    "'z1[,'", 
                    "'z4:pc'", 
                    "'z=iwgt'", 
                    "'z?os('", 
                    "'zeei'", 
                    "'zenh'", 
                    "'zf:9'", 
                    "'zhp?'", 
                    "'zhzl'", 
                    "'zjhwuy'", 
                    "'zkq@='", 
                    "'zqen'", 
                    "'zt5u'", 
                    "'zuir'"
                ]
            }, 
            "version": {}
        }, 
        "size": 111616
    }, 
    "attack-pattern": [
        {
            "created": "2017-05-31T21:30:49.546Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Command-line interfaces provide a way of interacting with computer systems and is a common feature across many types of operating system platforms. (Citation: Wikipedia Command-Line Interface) One example command-line interface on Windows systems is cmd, which can be used to perform a number of tasks including execution of other software. Command-line interfaces can be interacted with locally or remotely via a remote desktop application, reverse shell session, etc. Commands that are executed run with the current permission level of the command-line interface process unless the command includes process invocation that changes permissions context for that execution (e.g. Scheduled Task).\n\nAdversaries may use command-line interfaces to interact with systems and execute other software during the course of an operation.\n\nDetection: Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.\n\nPlatforms: Linux, Windows, macOS\n\nData Sources: Process command-line parameters, Process monitoring\n\nPermissions Required: Administrator, SYSTEM, User\n\nRemote Support: No", 
            "external_references": [
                {
                    "external_id": "T1059", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1059"
                }, 
                {
                    "description": "Wikipedia. (2016, June 26). Command-line interface. Retrieved June 27, 2016.", 
                    "source_name": "Wikipedia Command-Line Interface", 
                    "url": "https://en.wikipedia.org/wiki/Command-line%20interface"
                }
            ], 
            "id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "execution"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Command-Line Interface", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Process command-line parameters", 
                "Process monitoring"
            ], 
            "x_mitre_permissions_required": [
                "Administrator", 
                "SYSTEM", 
                "User"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "Windows", 
                "macOS"
            ], 
            "x_mitre_remote_support": false
        }, 
        {
            "created": "2017-05-31T21:30:49.988Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. (Citation: Microsoft Run Key) The program will be executed under the context of the user and will have the account's associated permissions level.\n\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.\n\nDetection: Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders. (Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nPlatforms: Windows\n\nData Sources: Windows Registry, File monitoring\n\nPermissions Required: User, Administrator", 
            "external_references": [
                {
                    "external_id": "T1060", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1060"
                }, 
                {
                    "description": "Microsoft. (n.d.). Run and RunOnce Registry Keys. Retrieved November 12, 2014.", 
                    "source_name": "Microsoft Run Key", 
                    "url": "http://msdn.microsoft.com/en-us/library/aa376977"
                }, 
                {
                    "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.", 
                    "source_name": "TechNet Autoruns", 
                    "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902"
                }
            ], 
            "id": "attack-pattern--9422fc14-1c43-410d-ab0f-a709b76c72dc", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "persistence"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Registry Run Keys / Start Folder", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Windows Registry", 
                "File monitoring"
            ], 
            "x_mitre_permissions_required": [
                "User", 
                "Administrator"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:13.915Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may use an existing, legitimate external Web service as a means for relaying commands to a compromised system.\n\nThese commands may also include pointers to command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.\n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\n\nUse of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).\n\nDetection: Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). User behavior monitoring may help to detect abnormal patterns of activity. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Host network interface, Netflow/Enclave netflow, Network protocol analysis, Packet capture, SSL/TLS inspection\n\nDefense Bypassed: Binary Analysis, Log analysis, Firewall\n\nPermissions Required: User\n\nRequires Network: Yes\n\nContributors: Anastasios Pingios", 
            "external_references": [
                {
                    "external_id": "T1102", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1102"
                }, 
                {
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", 
                    "source_name": "University of Birmingham C2", 
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ], 
            "id": "attack-pattern--830c9528-df21-472c-8c14-a036bf17d665", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "command-and-control"
                }, 
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "defense-evasion"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Web Service", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "Anastasios Pingios"
            ], 
            "x_mitre_data_sources": [
                "Host network interface", 
                "Netflow/Enclave netflow", 
                "Network protocol analysis", 
                "Packet capture", 
                "SSL/TLS inspection"
            ], 
            "x_mitre_defense_bypassed": [
                "Binary Analysis", 
                "Log analysis", 
                "Firewall"
            ], 
            "x_mitre_network_requirements": true, 
            "x_mitre_permissions_required": [
                "User"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:58.007Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Programs may specify DLLs that are loaded at runtime. Programs that improperly or vaguely specify a required DLL may be open to a vulnerability in which an unintended DLL is loaded. Side-loading vulnerabilities specifically occur when Windows Side-by-Side (WinSxS) manifests (Citation: MSDN Manifests) are not explicit enough about characteristics of the DLL to be loaded. Adversaries may take advantage of a legitimate program that is vulnerable to side-loading to load a malicious DLL. (Citation: Stewart 2014)\n\nAdversaries likely use this technique as a means of masking actions they perform under a legitimate, trusted system or software process.\n\nDetection: Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.\n\nPlatforms: Windows\n\nData Sources: Process use of network, Process monitoring, Loaded DLLs\n\nDefense Bypassed: Anti-virus, Process whitelisting", 
            "external_references": [
                {
                    "external_id": "T1073", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1073"
                }, 
                {
                    "description": "Microsoft. (n.d.). Manifests. Retrieved June 3, 2016.", 
                    "source_name": "MSDN Manifests", 
                    "url": "https://msdn.microsoft.com/en-us/library/aa375365"
                }, 
                {
                    "description": "Stewart, A. (2014). DLL SIDE-LOADING: A Thorn in the Side of the Anti-Virus Industry. Retrieved November 12, 2014.", 
                    "source_name": "Stewart 2014", 
                    "url": "https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-dll-sideloading.pdf"
                }
            ], 
            "id": "attack-pattern--b2001907-166b-4d71-bb3c-9d26c871de09", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "defense-evasion"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "DLL Side-Loading", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Process use of network", 
                "Process monitoring", 
                "Loaded DLLs"
            ], 
            "x_mitre_defense_bypassed": [
                "Anti-virus", 
                "Process whitelisting"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:17.472Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversary tools may directly use the Windows application programming interface (API) to execute binaries. Functions such as the Windows API CreateProcess will allow programs and scripts to start other processes with proper path and argument parameters. (Citation: Microsoft CreateProcess)\n\nAdditional Windows API calls that can be used to execute binaries include: (Citation: Kanthak Verifier)\n\n*CreateProcessA() and CreateProcessW(),\n*CreateProcessAsUserA() and CreateProcessAsUserW(),\n*CreateProcessInternalA() and CreateProcessInternalW(),\n*CreateProcessWithLogonW(), CreateProcessWithTokenW(),\n*LoadLibraryA() and LoadLibraryW(),\n*LoadLibraryExA() and LoadLibraryExW(),\n*LoadModule(),\n*LoadPackagedLibrary(),\n*WinExec(),\n*ShellExecuteA() and ShellExecuteW(),\n*ShellExecuteExA() and ShellExecuteExW()\n\nDetection: Monitoring API calls may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances, since benign use of Windows API functions such as CreateProcess are common and difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient.\n\nPlatforms: Windows\n\nData Sources: API monitoring, Process monitoring\n\nPermissions Required: User, Administrator, SYSTEM\n\nRemote Support: No\n\nContributors: Stefan Kanthak", 
            "external_references": [
                {
                    "external_id": "T1106", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1106"
                }, 
                {
                    "description": "Microsoft. (n.d.). CreateProcess function. Retrieved December 5, 2014.", 
                    "source_name": "Microsoft CreateProcess", 
                    "url": "http://msdn.microsoft.com/en-us/library/ms682425"
                }, 
                {
                    "description": "Kanthak, S. (2017). Application Verifier Provider. Retrieved February 13, 2017.", 
                    "source_name": "Kanthak Verifier", 
                    "url": "https://skanthak.homepage.t-online.de/verifier.html"
                }
            ], 
            "id": "attack-pattern--391d824f-0ef1-47a0-b0ee-c59a75e27670", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "execution"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Execution through API", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "Stefan Kanthak"
            ], 
            "x_mitre_data_sources": [
                "API monitoring", 
                "Process monitoring"
            ], 
            "x_mitre_permissions_required": [
                "User", 
                "Administrator", 
                "SYSTEM"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ], 
            "x_mitre_remote_support": false
        }, 
        {
            "created": "2017-05-31T21:30:56.776Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may communicate using a common, standardized application layer protocol such as HTTP, HTTPS, SMTP, or DNS to avoid detection by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n\nFor connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are RPC, SSH, or RDP.\n\nDetection: Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used. (Citation: University of Birmingham C2)\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Packet capture, Netflow/Enclave netflow, Process use of network, Malware reverse engineering, Process monitoring\n\nRequires Network: Yes", 
            "external_references": [
                {
                    "external_id": "T1071", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1071"
                }, 
                {
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", 
                    "source_name": "University of Birmingham C2", 
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ], 
            "id": "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "command-and-control"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Standard Application Layer Protocol", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Packet capture", 
                "Netflow/Enclave netflow", 
                "Process use of network", 
                "Malware reverse engineering", 
                "Process monitoring"
            ], 
            "x_mitre_network_requirements": true, 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:45.613Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "When operating systems boot up, they can start programs or applications called services that perform background system functions. (Citation: TechNet Services) A service's configuration information, including the file path to the service's executable, is stored in the Windows Registry. \n\nAdversaries may install a new service that can be configured to execute at startup by using utilities to interact with services or by directly modifying the Registry. The service name may be disguised by using a name from a related operating system or benign software with Masquerading. Services may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges from administrator to SYSTEM. Adversaries may also directly start services through Service Execution.\n\nDetection: Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence. (Citation: TechNet Autoruns) Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.\n\nPlatforms: Windows\n\nData Sources: Windows Registry, Process monitoring, Process command-line parameters\n\nEffective Permissions: SYSTEM\n\nPermissions Required: Administrator, SYSTEM", 
            "external_references": [
                {
                    "external_id": "T1050", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1050"
                }, 
                {
                    "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.", 
                    "source_name": "TechNet Autoruns", 
                    "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902"
                }, 
                {
                    "description": "Microsoft. (n.d.). Services. Retrieved June 7, 2016.", 
                    "source_name": "TechNet Services", 
                    "url": "https://technet.microsoft.com/en-us/library/cc772408.aspx"
                }
            ], 
            "id": "attack-pattern--478aa214-2ca7-4ec0-9978-18798e514790", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "persistence"
                }, 
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "privilege-escalation"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "New Service", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Windows Registry", 
                "Process monitoring", 
                "Process command-line parameters"
            ], 
            "x_mitre_effective_permissions": [
                "SYSTEM"
            ], 
            "x_mitre_permissions_required": [
                "Administrator", 
                "SYSTEM"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:25.584Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\n\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. (Citation: Wikipedia Windows Registry) Some of the information may help adversaries to further their operation within a network.\n\nDetection: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nInteraction with the Windows Registry may come from the command line using utilities such as Reg or through running malware that may interact with the Registry through an API. Command-line invocation of utilities used to query the Registry may be detected through process and command-line monitoring. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nPlatforms: Windows\n\nData Sources: Windows Registry, Process monitoring, Process command-line parameters\n\nPermissions Required: User, Administrator, SYSTEM", 
            "external_references": [
                {
                    "external_id": "T1012", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1012"
                }, 
                {
                    "description": "Wikipedia. (n.d.). Windows Registry. Retrieved February 2, 2015.", 
                    "source_name": "Wikipedia Windows Registry", 
                    "url": "https://en.wikipedia.org/wiki/Windows%20Registry"
                }
            ], 
            "id": "attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "discovery"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Query Registry", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Windows Registry", 
                "Process monitoring", 
                "Process command-line parameters"
            ], 
            "x_mitre_permissions_required": [
                "User", 
                "Administrator", 
                "SYSTEM"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:38.511Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Masquerading occurs when the name or location of an executable, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation.  Several different variations of this technique have been observed.\n\nOne variant is for an executable to be placed in a commonly trusted directory or given the name of a legitimate, trusted program.  Alternatively, the filename given may be a close approximation of legitimate programs.  This is done to bypass tools that trust executables by relying on file name or path, as well as to deceive defenders and system administrators into thinking a file is benign by associating the name with something that is thought to be legitimate.\n\n\n===Windows===\nIn another variation of this technique, an adversary may use a renamed copy of a legitimate utility, such as rundll32.exe. (Citation: Endgame Masquerade Ball) An alternative case occurs when a legitimate utility is moved to a different directory and also renamed to avoid detections based on system utilities executing from non-standard paths. (Citation: F-Secure CozyDuke)\n\nAn example of abuse of trusted locations in Windows would be the <code>C:\\Windows\\System32</code> directory.  Examples of trusted binary names that can be given to malicious binares include \"explorer.exe\" and \"svchost.exe\".\n\n===Linux===\nAnother variation of this technique includes malicious binaries changing the name of their running process to that of a trusted or benign process, after they have been launched as opposed to before.  (Citation: Remaiten)\n\nAn example of abuse of trusted locations in Linux  would be the <code>/bin</code> directory.  Examples of trusted binary names that can be given to malicious binares include \"rsyncd\" and \"dbus-inotifier\".   (Citation: Fysbis Palo Alto Analysis)  (Citation: Fysbis Dr Web Analysis)\n\nDetection: Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity. (Citation: Endgame Masquerade Ball)\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: File monitoring, Process monitoring, Binary file metadata\n\nDefense Bypassed: Whitelisting by file name or path\n\nContributors: ENDGAME, Bartosz Jerzman", 
            "external_references": [
                {
                    "external_id": "T1036", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1036"
                }, 
                {
                    "description": "Ewing, P. (2016, October 31). How to Hunt: The Masquerade Ball. Retrieved October 31, 2016.", 
                    "source_name": "Endgame Masquerade Ball", 
                    "url": "https://www.endgame.com/blog/how-hunt-masquerade-ball"
                }, 
                {
                    "description": "F-Secure Labs. (2015, April 22). CozyDuke: Malware Analysis. Retrieved December 10, 2015.", 
                    "source_name": "F-Secure CozyDuke", 
                    "url": "https://www.f-secure.com/documents/996508/1030745/CozyDuke"
                }, 
                {
                    "description": "Michal Malik AND Marc-Etienne M.L\u00e9veill\u00e9. (2016, March 30). Meet Remaiten \u2013 a Linux bot on steroids targeting routers and potentially other IoT devices. Retrieved September 7, 2017.", 
                    "source_name": "Remaiten", 
                    "url": "https://www.welivesecurity.com/2016/03/30/meet-remaiten-a-linux-bot-on-steroids-targeting-routers-and-potentially-other-iot-devices/"
                }, 
                {
                    "description": "Bryan Lee and Rob Downs. (2016, February 12). A Look Into Fysbis: Sofacy\u2019s Linux Backdoor. Retrieved September 10, 2017.", 
                    "source_name": "Fysbis Palo Alto Analysis", 
                    "url": "https://researchcenter.paloaltonetworks.com/2016/02/a-look-into-fysbis-sofacys-linux-backdoor/"
                }, 
                {
                    "description": "Doctor Web. (2014, November 21). Linux.BackDoor.Fysbis.1. Retrieved December 7, 2017.", 
                    "source_name": "Fysbis Dr Web Analysis", 
                    "url": "https://vms.drweb.com/virus/?i=4276269"
                }
            ], 
            "id": "attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "defense-evasion"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Masquerading", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "ENDGAME", 
                "Bartosz Jerzman"
            ], 
            "x_mitre_data_sources": [
                "File monitoring", 
                "Process monitoring", 
                "Binary file metadata"
            ], 
            "x_mitre_defense_bypassed": [
                "Whitelisting by file name or path"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:10.728Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Use of a standard non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. (Citation: Wikipedia OSI) Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), and transport layer protocols, such as the User Datagram Protocol (UDP).\n\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts; (Citation: Microsoft ICMP) however, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.\n\nDetection: Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\n\nPlatforms: Linux, macOS, Windows\n\nRequires Network: Yes", 
            "external_references": [
                {
                    "external_id": "T1095", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1095"
                }, 
                {
                    "description": "Wikipedia. (n.d.). List of network protocols (OSI model). Retrieved December 4, 2014.", 
                    "source_name": "Wikipedia OSI"
                }, 
                {
                    "description": "Microsoft. (n.d.). Internet Control Message Protocol (ICMP) Basics. Retrieved December 1, 2014.", 
                    "source_name": "Microsoft ICMP", 
                    "url": "http://support.microsoft.com/KB/170292"
                }, 
                {
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", 
                    "source_name": "University of Birmingham C2", 
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ], 
            "id": "attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "command-and-control"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Standard Non-Application Layer Protocol", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_network_requirements": true, 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:39.262Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering. These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application whitelisting defensive solutions.\n\n===MSBuild===\n\nMSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It takes XML formatted project files that define requirements for building various platforms and configurations. (Citation: MSDN MSBuild) \n\nAdversaries can use MSBuild to proxy execution of code through a trusted Windows utility. The inline task capability of MSBuild that was introduced in .NET version 4 allows for C# code to be inserted into the XML project file. (Citation: MSDN MSBuild) Inline Tasks MSBuild will compile and execute the inline task. MSBuild.exe is a signed Microsoft binary, so when it is used this way it can execute arbitrary code and bypass application whitelisting defenses that are configured to allow MSBuild.exe execution. (Citation: SubTee GitHub All The Things Application Whitelisting Bypass)\n\n===DNX===\n\nThe .NET Execution Environment (DNX), dnx.exe, is a software development kit packaged with Visual Studio Enterprise. It was retired in favor of .NET Core CLI in 2016. (Citation: Microsoft Migrating from DNX) DNX is not present on standard builds of Windows and may only be present on developer workstations using older versions of .NET Core and ASP.NET Core 1.0. The dnx.exe executable is signed by Microsoft. \n\nAn adversary can use dnx.exe to proxy execution of arbitrary code to bypass application whitelist policies that do not account for DNX. (Citation: engima0x3 DNX Bypass)\n\n===RCSI===\n\nThe rcsi.exe utility is a non-interactive command-line interface for C# that is similar to csi.exe. It was provided within an early version of the Roslyn .NET Compiler Platform but has since been deprecated for an integrated solution. (Citation: Microsoft Roslyn CPT RCSI) The rcsi.exe binary is signed by Microsoft. (Citation: engima0x3 RCSI Bypass)\n\nC# .csx script files can be written and executed with rcsi.exe at the command-line. An adversary can use rcsi.exe to proxy execution of arbitrary code to bypass application whitelisting policies that do not account for execution of rcsi.exe. (Citation: engima0x3 RCSI Bypass)\n\n===WinDbg/CDB===\n\nWinDbg is a Microsoft Windows kernel and user-mode debugging utility. The Microsoft Console Debugger (CDB) cdb.exe is also user-mode debugger. Both utilities are included in Windows software development kits and can be used as standalone tools. (Citation: Microsoft Debugging Tools for Windows) They are commonly used in software development and reverse engineering and may not be found on typical Windows systems. Both WinDbg.exe and cdb.exe binaries are signed by Microsoft.\n\nAn adversary can use WinDbg.exe and cdb.exe to proxy execution of arbitrary code to bypass application whitelist policies that do not account for execution of those utilities. (Citation: Exploit Monday WinDbg)\n\nIt is likely possible to use other debuggers for similar purposes, such as the kernel-mode debugger kd.exe, which is also signed by Microsoft.\n\n===Tracker===\n\nThe file tracker utility, tracker.exe, is included with the .NET framework as part of MSBuild. It is used for logging calls to the Windows file system. (Citation: Microsoft Docs File Tracking)\n\nAn adversary can use tracker.exe to proxy execution of an arbitrary DLL into another process. Since tracker.exe is also signed it can be used to bypass application whitelisting solutions. (Citation: Twitter SubTee Tracker.exe)\n\nDetection: The presence of these or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.\n\nUse process monitoring to monitor the execution and arguments of MSBuild.exe, dnx.exe, rcsi.exe, WinDbg.exe, cdb.exe, and tracker.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. It is likely that these utilities will be used by software developers or for other software development related tasks, so if it exists and is used outside of that context, then the event may be suspicious. Command arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.\n\nPlatforms: Windows\n\nData Sources: Process monitoring\n\nDefense Bypassed: Application whitelisting\n\nPermissions Required: User\n\nSystem Requirements: MSBuild: .NET Framework version 4 or higher\nDNX: .NET 4.5.2, Powershell 4.0\nRCSI: .NET 4.5 or later, Visual Studio 2012\n\nRemote Support: No\n\nContributors: Casey Smith, Matthew Demaske, Adaptforward", 
            "external_references": [
                {
                    "external_id": "T1127", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1127"
                }, 
                {
                    "description": "Graeber, M. (2016, August 15). Bypassing Application Whitelisting by using WinDbg/CDB as a Shellcode Runner. Retrieved May 26, 2017.", 
                    "source_name": "Exploit Monday WinDbg", 
                    "url": "http://www.exploit-monday.com/2016/08/windbg-cdb-shellcode-runner.html"
                }, 
                {
                    "description": "Microsoft. (n.d.). MSBuild1. Retrieved November 30, 2016.", 
                    "source_name": "MSDN MSBuild", 
                    "url": "https://msdn.microsoft.com/library/dd393574.aspx"
                }, 
                {
                    "description": "Marshall, D. (2017, May 23). Debugging Tools for Windows (WinDbg, KD, CDB, NTSD). Retrieved June 29, 2017.", 
                    "source_name": "Microsoft Debugging Tools for Windows", 
                    "url": "https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/index"
                }, 
                {
                    "description": "B, M., Brown, K., Cai, S., Hogenson, G., Warren, G. (2016, November 4). File Tracking. Retrieved November 1, 2017.", 
                    "source_name": "Microsoft Docs File Tracking", 
                    "url": "https://docs.microsoft.com/visualstudio/msbuild/file-tracking"
                }, 
                {
                    "description": "Knezevic, Z., Wenzel, M. Latham, L. (2016, June 20). Migrating from DNX to .NET Core CLI (project.json). Retrieved June 28, 2017.", 
                    "source_name": "Microsoft Migrating from DNX", 
                    "url": "https://docs.microsoft.com/en-us/dotnet/core/migration/from-dnx"
                }, 
                {
                    "description": "Osenkov, K. (2011, October 19). Introducing the Microsoft \u201cRoslyn\u201d CTP. Retrieved June 28, 2017.", 
                    "source_name": "Microsoft Roslyn CPT RCSI", 
                    "url": "https://blogs.msdn.microsoft.com/visualstudio/2011/10/19/introducing-the-microsoft-roslyn-ctp/"
                }, 
                {
                    "description": "[ Smith, C. (2016, August 17). Includes 5 Known Application Whitelisting/ Application Control Bypass Techniques in One File. Retrieved June 30, 2017.", 
                    "source_name": "SubTee GitHub All The Things Application Whitelisting Bypass"
                }, 
                {
                    "description": "Smith, C. (2016, October 31). SubTee Twitter Status. Retrieved November 1, 2017.", 
                    "source_name": "Twitter SubTee Tracker.exe", 
                    "url": "https://twitter.com/subTee/status/793151392185589760"
                }, 
                {
                    "description": "Nelson, M. (2017, November 17). Bypassing Application Whitelisting By Using dnx.exe. Retrieved May 25, 2017.", 
                    "source_name": "engima0x3 DNX Bypass", 
                    "url": "https://enigma0x3.net/2016/11/17/bypassing-application-whitelisting-by-using-dnx-exe/"
                }, 
                {
                    "description": "Nelson, M. (2016, November 21). Bypassing Application Whitelisting By Using rcsi.exe. Retrieved May 26, 2017.", 
                    "source_name": "engima0x3 RCSI Bypass", 
                    "url": "https://enigma0x3.net/2016/11/21/bypassing-application-whitelisting-by-using-rcsi-exe/"
                }
            ], 
            "id": "attack-pattern--ff25900d-76d5-449b-a351-8824e62fc81b", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "defense-evasion"
                }, 
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "execution"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Trusted Developer Utilities", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "Casey Smith", 
                "Matthew Demaske, Adaptforward"
            ], 
            "x_mitre_data_sources": [
                "Process monitoring"
            ], 
            "x_mitre_defense_bypassed": [
                "Application whitelisting"
            ], 
            "x_mitre_permissions_required": [
                "User"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ], 
            "x_mitre_remote_support": false, 
            "x_mitre_system_requirements": [
                "MSBuild: .NET Framework version 4 or higher\nDNX: .NET 4.5.2, Powershell 4.0\nRCSI: .NET 4.5 or later, Visual Studio 2012"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:32.259Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Some adversaries may split communications between different protocols.  There could be one protocol for inbound command and control and another for outbound data, allowing it to bypass certain firewall restrictions.  The split could also be random to simply avoid data threshold alerts on any one communication.\n\nDetection: Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2) Correlating alerts between multiple communication channels can further help identify command-and-control behavior.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Packet capture, Netflow/Enclave netflow, Process use of network, Malware reverse engineering, Process monitoring\n\nRequires Network: Yes", 
            "external_references": [
                {
                    "external_id": "T1026", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1026"
                }, 
                {
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", 
                    "source_name": "University of Birmingham C2", 
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ], 
            "id": "attack-pattern--99709758-2b96-48f2-a68a-ad7fbd828091", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "command-and-control"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Multiband Communication", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Packet capture", 
                "Netflow/Enclave netflow", 
                "Process use of network", 
                "Malware reverse engineering", 
                "Process monitoring"
            ], 
            "x_mitre_network_requirements": true, 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:42.657Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend with normal network activity to avoid more detailed inspection. They may use commonly open ports such as\n* TCP:80 (HTTP)\n* TCP:443 (HTTPS)\n* TCP:25 (SMTP)\n* TCP/UDP:53 (DNS)\n\nThey may use the protocol associated with the port or a completely different protocol. \n\nFor connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), examples of common ports are \n* TCP/UDP:135 (RPC)\n* TCP/UDP:22 (SSH)\n* TCP/UDP:3389 (RDP)\n\nDetection: Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Packet capture, Netflow/Enclave netflow, Process use of network, Process monitoring\n\nRequires Network: Yes", 
            "external_references": [
                {
                    "external_id": "T1043", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1043"
                }, 
                {
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", 
                    "source_name": "University of Birmingham C2", 
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ], 
            "id": "attack-pattern--f879d51c-5476-431c-aedf-f14d207e4d1e", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "command-and-control"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Commonly Used Port", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Packet capture", 
                "Netflow/Enclave netflow", 
                "Process use of network", 
                "Process monitoring"
            ], 
            "x_mitre_network_requirements": true, 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }
    ], 
    "hash": "a70f3f01c5fb22a07a1f2746c7c1387e17f97b14b3a6e335d8ca53fe4b0cada1", 
    "name": "PlugX"
}