{
    "alias": "Mimikatz", 
    "analysis": {
        "_id": {
            "$oid": "5ba554f5ba80ffe26b515155"
        }, 
        "description": "PE32+ executable (console) x86-64, for MS Windows", 
        "file_id": "a5e4e6ad640117303f74146e76002facf4b86d4b", 
        "fuzzy_hash": "3072:xlsPTNT5ivjCuYHjLH6KaY4k42sn2eIIWH+GxKPrkWFEkIzeG7K5hW40YgUsglDQ:aTNT5+CuYfH9YyAI", 
        "hash": {
            "md5": "98f58719a926918618d23839dda93e84", 
            "sha1": "a5e4e6ad640117303f74146e76002facf4b86d4b", 
            "sha2": "399afcf94668b55e5ca87b3a85adf7cd58adec537450d8d9e6e70cee4900d849"
        }, 
        "mime_type": "application/x-dosexec", 
        "particular_header": {
            "av_analysis": "Not_implemented", 
            "certificate": {
                "certificates": [
                    {
                        "issuer": "globalsign nv-sa", 
                        "serial": "04:00:00:00:00:01:2f:4e:e1:52:d7", 
                        "subject": "globalsign nv-sa", 
                        "validity_beg": "apr 13 10:00:00 2011 gmt", 
                        "validity_end": "jan 28 12:00:00 2028 gmt"
                    }, 
                    {
                        "issuer": "globalsign nv-sa", 
                        "serial": "04:00:00:00:00:01:2f:4e:e1:35:5c", 
                        "subject": "globalsign nv-sa", 
                        "validity_beg": "apr 13 10:00:00 2011 gmt", 
                        "validity_end": "apr 13 10:00:00 2019 gmt"
                    }, 
                    {
                        "issuer": "globalsign nv-sa", 
                        "serial": "11:21:69:41:7a:1c:3e:f4:6a:30:1f:99:38:5f:50:68:0f:a0", 
                        "subject": "", 
                        "validity_beg": "jun 28 09:46:16 2011 gmt", 
                        "validity_end": "jun 28 09:46:16 2014 gmt"
                    }, 
                    {
                        "issuer": "globalsign nv-sa", 
                        "serial": "11:21:40:5c:1f:0e:d2:58:88:2b:e5:4d:86:86:ba:11:ea:45", 
                        "subject": "gmo globalsign pte ltd", 
                        "validity_beg": "aug 23 00:00:00 2013 gmt", 
                        "validity_end": "sep 23 00:00:00 2024 gmt"
                    }
                ], 
                "length": 3222667264, 
                "revision": 2, 
                "signed": true, 
                "type": 512
            }, 
            "child_of": "Not_implemented", 
            "cypher": "Not_implemented", 
            "date": "'0x52E059E1 [SUSPICIOUS]'", 
            "ep": "'0x14001321c .text 0/6'", 
            "exports": {}, 
            "file_entropy": 5.940949184848331, 
            "headers": {
                "dos_header": {
                    "cblp": "'0x90'", 
                    "cp": "'0x3'", 
                    "cparhdr": "'0x4'", 
                    "crlc": "'0x0'", 
                    "cs": "'0x0'", 
                    "csum": "'0x0'", 
                    "ip": "'0x0'", 
                    "lfanew": "'0x108'", 
                    "lfarlc": "'0x40'", 
                    "magic": "'0x5a4d'", 
                    "maxalloc": "'0xffff'", 
                    "minalloc": "'0x0'", 
                    "oemid": "'0x0'", 
                    "oeminfo": "'0x0'", 
                    "ovno": "'0x0'", 
                    "res": "'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", 
                    "res2": "'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", 
                    "sp": "'0xb8'", 
                    "ss": "'0x0'"
                }, 
                "file_header": {
                    "Characteristics": "'0x22'", 
                    "Machine": "'0x8664'", 
                    "NumberOfSections": "'0x6'", 
                    "NumberOfSymbols": "'0x0'", 
                    "PointerToSymbolTable": "'0x0'", 
                    "SizeOfOptionalHeader": "'0xf0'", 
                    "TimeDateStamp": "'0x52e059e1'"
                }, 
                "nt_header": {
                    "Signature": "'0x4550'"
                }, 
                "optional_header": {
                    "AddressOfEntryPoint": "'0x1321c'", 
                    "BaseOfCode": "'0x1000'", 
                    "CheckSum": "'0x31128'", 
                    "DllCharacteristics": "'0x8040'", 
                    "FileAlignment": "'0x200'", 
                    "ImageBase": "'0x140000000'", 
                    "LoaderFlags": "'0x0'", 
                    "Magic": "'0x20b'", 
                    "MajorImageVersion": "'0x0'", 
                    "MajorLinkerVersion": "'0x9'", 
                    "MajorOperatingSystemVersion": "'0x5'", 
                    "MajorSubsystemVersion": "'0x5'", 
                    "MinorImageVersion": "'0x0'", 
                    "MinorLinkerVersion": "'0x0'", 
                    "MinorOperatingSystemVersion": "'0x2'", 
                    "MinorSubsystemVersion": "'0x2'", 
                    "NumberOfRvaAndSizes": "'0x10'", 
                    "Reserved1": "'0x0'", 
                    "SectionAlignment": "'0x1000'", 
                    "SizeOfCode": "'0x17a00'", 
                    "SizeOfHeaders": "'0x400'", 
                    "SizeOfHeapCommit": "'0x1000'", 
                    "SizeOfHeapReserve": "'0x100000'", 
                    "SizeOfImage": "'0x32000'", 
                    "SizeOfInitializedData": "'0x17c00'", 
                    "SizeOfStackCommit": "'0x1000'", 
                    "SizeOfStackReserve": "'0x100000'", 
                    "SizeOfUninitializedData": "'0x0'", 
                    "Subsystem": "'0x3'"
                }
            }, 
            "imports": [
                {
                    "functions": [
                        "'pfxexportcertstoreex'", 
                        "'certenumsystemstore'", 
                        "'certenumcertificatesinstore'", 
                        "'certgetcertificatecontextproperty'", 
                        "'certclosestore'", 
                        "'certaddcertificatecontexttostore'", 
                        "'certfreecertificatecontext'", 
                        "'certopenstore'", 
                        "'certgetnamestringw'", 
                        "'cryptacquirecertificateprivatekey'"
                    ], 
                    "lib": "'crypt32.dll'"
                }, 
                {
                    "functions": [
                        "'cdlocatecsystem'", 
                        "'cdlocatechecksum'", 
                        "'md5final'", 
                        "'md5init'", 
                        "'md5update'"
                    ], 
                    "lib": "'cryptdll.dll'"
                }, 
                {
                    "functions": [
                        "'pathisrelativew'", 
                        "'pathcombinew'", 
                        "'pathcanonicalizew'"
                    ], 
                    "lib": "'shlwapi.dll'"
                }, 
                {
                    "functions": [
                        "'samopendomain'", 
                        "'samopenuser'", 
                        "'samenumerateusersindomain'", 
                        "'samfreememory'", 
                        "'samconnect'", 
                        "'samqueryinformationuser'", 
                        "'samclosehandle'"
                    ], 
                    "lib": "'samlib.dll'"
                }, 
                {
                    "functions": [
                        "'lsacallauthenticationpackage'", 
                        "'lsalookupauthenticationpackage'", 
                        "'lsafreereturnbuffer'", 
                        "'lsaderegisterlogonprocess'", 
                        "'lsaconnectuntrusted'"
                    ], 
                    "lib": "'secur32.dll'"
                }, 
                {
                    "functions": [
                        "'netlocalgroupenum'", 
                        "'netgroupenum'", 
                        "'netuserenum'", 
                        "'netusergetinfo'", 
                        "'netapibufferfree'"
                    ], 
                    "lib": "'netapi32.dll'"
                }, 
                {
                    "functions": [
                        "'verqueryvaluew'"
                    ], 
                    "lib": "'version.dll'"
                }, 
                {
                    "functions": [
                        "'writeprocessmemory'", 
                        "'mapviewoffile'", 
                        "'unmapviewoffile'", 
                        "'createfilemappingw'", 
                        "'createprocessw'", 
                        "'getdateformatw'", 
                        "'gettimeformatw'", 
                        "'filetimetolocalfiletime'", 
                        "'setconsolectrlhandler'", 
                        "'setconsoleoutputcp'", 
                        "'setconsoletitlew'", 
                        "'systemtimetofiletime'", 
                        "'getsystemtime'", 
                        "'freelibrary'", 
                        "'loadlibraryw'", 
                        "'getprocaddress'", 
                        "'freeresource'", 
                        "'findresourcew'", 
                        "'loadresource'", 
                        "'getmodulehandlew'", 
                        "'getversionexw'", 
                        "'setconsolecursorposition'", 
                        "'getstdhandle'", 
                        "'fillconsoleoutputcharacterw'", 
                        "'getconsolescreenbufferinfo'", 
                        "'lockresource'", 
                        "'getcurrentthread'", 
                        "'getcurrentprocessid'", 
                        "'waitforsingleobject'", 
                        "'getexitcodethread'", 
                        "'getcurrentthreadid'", 
                        "'gettickcount'", 
                        "'virtualallocex'", 
                        "'virtualprotectex'", 
                        "'virtualalloc'", 
                        "'readprocessmemory'", 
                        "'virtualfreeex'", 
                        "'virtualqueryex'", 
                        "'virtualfree'", 
                        "'virtualquery'", 
                        "'setfilepointer'", 
                        "'deviceiocontrol'", 
                        "'setlasterror'", 
                        "'duplicatehandle'", 
                        "'getlasterror'", 
                        "'openprocess'", 
                        "'getcurrentprocess'", 
                        "'closehandle'", 
                        "'getcurrentdirectoryw'", 
                        "'getfilesizeex'", 
                        "'flushfilebuffers'", 
                        "'createfilew'", 
                        "'readfile'", 
                        "'writefile'", 
                        "'localfree'", 
                        "'localalloc'", 
                        "'filetimetosystemtime'", 
                        "'sleep'", 
                        "'virtualprotect'", 
                        "'queryperformancecounter'", 
                        "'setunhandledexceptionfilter'", 
                        "'unhandledexceptionfilter'", 
                        "'terminateprocess'", 
                        "'rtlcapturecontext'", 
                        "'rtllookupfunctionentry'", 
                        "'rtlvirtualunwind'", 
                        "'outputdebugstringa'", 
                        "'getsystemtimeasfiletime'"
                    ], 
                    "lib": "'kernel32.dll'"
                }, 
                {
                    "functions": [
                        "'createservicew'", 
                        "'lsaopenpolicy'", 
                        "'lsaclose'", 
                        "'createwellknownsid'", 
                        "'createprocesswithlogonw'", 
                        "'createprocessasuserw'", 
                        "'regqueryvalueexw'", 
                        "'regqueryinfokeyw'", 
                        "'regopenkeyexw'", 
                        "'regenumkeyexw'", 
                        "'regclosekey'", 
                        "'credenumeratew'", 
                        "'credfree'", 
                        "'checktokenmembership'", 
                        "'duplicatetokenex'", 
                        "'setthreadtoken'", 
                        "'openthreadtoken'", 
                        "'crypthashdata'", 
                        "'lsafreememory'", 
                        "'cryptdestroyhash'", 
                        "'cryptdecrypt'", 
                        "'cryptcreatehash'", 
                        "'systemfunction025'", 
                        "'cryptimportkey'", 
                        "'systemfunction005'", 
                        "'systemfunction032'", 
                        "'cryptgethashparam'", 
                        "'freesid'", 
                        "'allocateandinitializesid'", 
                        "'queryserviceobjectsecurity'", 
                        "'buildsecuritydescriptorw'", 
                        "'setserviceobjectsecurity'", 
                        "'closeservicehandle'", 
                        "'cleareventlogw'", 
                        "'getnumberofeventlogrecords'", 
                        "'openeventlogw'", 
                        "'cryptgetuserkey'", 
                        "'cryptdestroykey'", 
                        "'cryptgetprovparam'", 
                        "'cryptenumprovidersw'", 
                        "'cryptreleasecontext'", 
                        "'cryptgetkeyparam'", 
                        "'cryptacquirecontextw'", 
                        "'cryptexportkey'", 
                        "'systemfunction036'", 
                        "'convertstringsidtosidw'", 
                        "'convertsidtostringsidw'", 
                        "'lookupaccountsidw'", 
                        "'gettokeninformation'", 
                        "'openprocesstoken'", 
                        "'istextunicode'", 
                        "'controlservice'", 
                        "'queryservicestatusex'", 
                        "'startservicew'", 
                        "'openservicew'", 
                        "'openscmanagerw'", 
                        "'deleteservice'", 
                        "'lsaqueryinformationpolicy'"
                    ], 
                    "lib": "'advapi32.dll'"
                }, 
                {
                    "functions": [
                        "'commandlinetoargvw'"
                    ], 
                    "lib": "'shell32.dll'"
                }, 
                {
                    "functions": [
                        "'rtlequalstring'", 
                        "'rtlcreateuserthread'", 
                        "'ntterminateprocess'", 
                        "'ntsuspendprocess'", 
                        "'rtladjustprivilege'", 
                        "'ntresumeprocess'", 
                        "'_wcsnicmp'", 
                        "'wcstoul'", 
                        "'rtlgetntversionnumbers'", 
                        "'wcsstr'", 
                        "'rtlfreeunicodestring'", 
                        "'rtlstringfromguid'", 
                        "'_wcsicmp'", 
                        "'wcschr'", 
                        "'wcsrchr'", 
                        "'ntqueryinformationprocess'", 
                        "'rtlgetcurrentpeb'", 
                        "'ntqueryobject'", 
                        "'rtlinitunicodestring'", 
                        "'ntquerysysteminformation'", 
                        "'rtlfreeansistring'", 
                        "'rtlunicodestringtoansistring'", 
                        "'rtlequalunicodestring'", 
                        "'memcmp'"
                    ], 
                    "lib": "'ntdll.dll'"
                }, 
                {
                    "functions": [
                        "'ungetc'", 
                        "'_isatty'", 
                        "'_write'", 
                        "'_lseeki64'", 
                        "'_read'", 
                        "'__pioinfo'", 
                        "'__badioinfo'", 
                        "'realloc'", 
                        "'?terminate@@yaxxz'", 
                        "'wcstombs'", 
                        "'iswctype'", 
                        "'ferror'", 
                        "'malloc'", 
                        "'_errno'", 
                        "'vfwprintf'", 
                        "'fflush'", 
                        "'_wfopen'", 
                        "'_iob'", 
                        "'fclose'", 
                        "'free'", 
                        "'_wcsdup'", 
                        "'_fileno'", 
                        "'_setmode'", 
                        "'memcpy'", 
                        "'memset'", 
                        "'__c_specific_handler'", 
                        "'__wgetmainargs'", 
                        "'_xcptfilter'", 
                        "'_exit'", 
                        "'_cexit'", 
                        "'exit'", 
                        "'_initterm'", 
                        "'_amsg_exit'", 
                        "'__setusermatherr'", 
                        "'_commode'", 
                        "'_fmode'", 
                        "'__set_app_type'", 
                        "'calloc'", 
                        "'isdigit'", 
                        "'mbtowc'", 
                        "'__mb_cur_max'", 
                        "'isleadbyte'", 
                        "'isxdigit'", 
                        "'localeconv'", 
                        "'_unlock'", 
                        "'_lock'", 
                        "'_snprintf'", 
                        "'_itoa'", 
                        "'wctomb'"
                    ], 
                    "lib": "'msvcrt.dll'"
                }
            ], 
            "imports_tree": "added", 
            "packer_detection": "Unknown", 
            "packer_version": "Not_implemented", 
            "res_entries": [
                {
                    "lang": "'LANG_ENGLISH'", 
                    "name": "'RT_ICON'", 
                    "rva": "'0x2d510'", 
                    "sha1": "522c0952585ee2c23e67587066b08b0e2d3dd5be", 
                    "size": "'0x25a8'", 
                    "sublang": "'SUBLANG_ENGLISH_US'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_ENGLISH'", 
                    "name": "'RT_ICON'", 
                    "rva": "'0x2fab8'", 
                    "sha1": "2718541330281136297f4bc485008207083850d6", 
                    "size": "'0x10a8'", 
                    "sublang": "'SUBLANG_ENGLISH_US'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_ENGLISH'", 
                    "name": "'RT_ICON'", 
                    "rva": "'0x30b60'", 
                    "sha1": "18b71655fa7f4e0dd880c6c05dca48984d792d37", 
                    "size": "'0x468'", 
                    "sublang": "'SUBLANG_ENGLISH_US'", 
                    "type": "'GLS_BINARY_LSB_FIRST'"
                }, 
                {
                    "lang": "'LANG_ENGLISH'", 
                    "name": "'RT_GROUP_ICON'", 
                    "rva": "'0x30fc8'", 
                    "sha1": "99ce74251d19d800608e30bed6e0d793931da56e", 
                    "size": "'0x30'", 
                    "sublang": "'SUBLANG_ENGLISH_US'", 
                    "type": "'MS Windows icon resource - 3 icons, 48x48'"
                }, 
                {
                    "lang": "'LANG_ENGLISH'", 
                    "name": "'RT_VERSION'", 
                    "rva": "'0x2d150'", 
                    "sha1": "e160d364f09f08c5b3f28a46c4dbff56fca3e61b", 
                    "size": "'0x3c0'", 
                    "sublang": "'SUBLANG_ENGLISH_US'", 
                    "type": "'data'"
                }
            ], 
            "sections": [
                {
                    "characteristics": "0x60000020", 
                    "entropy": 6.278899759659706, 
                    "fuzzy_hash": "1536:Ul41DIKbZTNT5i9IeH/xT+pbel8BR/Ws3Hj8qOsu+6mJ1AtY3gMEV/M:UlsPTNT5ivjCuYHjLH6KaY4k", 
                    "md5": "2cb057413e61014150cb2e997382a09d", 
                    "name": "'.text\\x00\\x00\\x00'", 
                    "sha1": "07c8ace99728e74c8548405bbebf298ba589da09", 
                    "sha2": "b0519cbaf5eb88ceba9c4fa93d6cdf86cc71745d89590cdaac39ed4dfaf10230", 
                    "size_raw_data": 96768, 
                    "virtual_size": 96294, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0x40000040", 
                    "entropy": 4.014816995125852, 
                    "fuzzy_hash": "1536:blZ2sn6/ix4eieURIWH+GxKPrkWFEkIzeG7K5hW4:n2sn2eIIWH+GxKPrkWFEkIzeG7K5hW4", 
                    "md5": "5a6768474a844150f52c5f1970e6c460", 
                    "name": "'.rdata\\x00\\x00'", 
                    "sha1": "a9b64a936b95fd799050f52f4d2f48667d245c57", 
                    "sha2": "32009c3c089a71e21920dd0eec9dfd4433a01227ce0823b0ce2cef85b152734c", 
                    "size_raw_data": 67072, 
                    "virtual_size": 66848, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0xc0000040", 
                    "entropy": 3.149716921763968, 
                    "fuzzy_hash": "48:4vXUhoSjgbv3cZnuruU2S/nu0ujuYOYuR5tFW9CpbUmUxxMr:GUhoSkb/cZivnudqY4R5tRbY", 
                    "md5": "261106b030e7911edda52f6fd40008d0", 
                    "name": "'.data\\x00\\x00\\x00'", 
                    "sha1": "c5b515ac7ebdab0f7ac71078c8268c519e5dc5a7", 
                    "sha2": "6dcc79883da265ca5ed09b50fc1959e90909f8a0492702fc1c1d8ff3620e202b", 
                    "size_raw_data": 6144, 
                    "virtual_size": 7820, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0x40000040", 
                    "entropy": 5.0344274062182945, 
                    "fuzzy_hash": "96:kCc9pvXpQW40LzQPM13EhWnvxEs/5VkxyFo:k5vXpn4cQkREhWasRVkx7", 
                    "md5": "6dfc4c76a34e12c11a4085120856ef23", 
                    "name": "'.pdata\\x00\\x00'", 
                    "sha1": "17b72d7fb5c22ad99e51e56ed1443123335e1d96", 
                    "sha2": "dfaef0eab03b836ab5cda0cb45e83b80629fa3cbcc55d9422a718bc789bea311", 
                    "size_raw_data": 3584, 
                    "virtual_size": 3444, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0x40000040", 
                    "entropy": 6.544740074663748, 
                    "fuzzy_hash": "384:UUsgl7FeEF5+ldBojfT2emBwAyas1NQddz+Kd3uGNfJACgF:UUsgl5ulTojfSe+iJPQv+Kd3uGl", 
                    "md5": "3bad55cd7fc7eb422dd699cb6ae6968d", 
                    "name": "'.rsrc\\x00\\x00\\x00'", 
                    "sha1": "17f613a0371cdc0d25dbe4844db5d0272b6fce5c", 
                    "sha2": "ae2a47a2676ed48381ee6a404fb2cb203bbf753d17d20ccf0bbbdf737c79b9d5", 
                    "size_raw_data": 16384, 
                    "virtual_size": 16376, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0x42000040", 
                    "entropy": 3.837198295992541, 
                    "fuzzy_hash": "24:2NUM0sUMU8knnHsk3s08t3EuxP0P098UFsli:2+nnHnnnMHXuuZui", 
                    "md5": "4da9d34609eb1f50a1a4f17b5a590978", 
                    "name": "'.reloc\\x00\\x00'", 
                    "sha1": "a8b6010209a766c1475c06f5ed3b92fc9f2b215b", 
                    "sha2": "836f320c7e0ab07de8e3bf0d82a6e29dbaf33708635591e73bebdbf2a634f4e9", 
                    "size_raw_data": 2048, 
                    "virtual_size": 1604, 
                    "write_executable": "False"
                }
            ], 
            "strings": {
                "raw_strings": [
                    "' 9l$'", 
                    "' a]_'", 
                    "' a]a'", 
                    "' a_a'", 
                    "' ath'", 
                    "' auh'", 
                    "' cal ba'", 
                    "' ta@'", 
                    "'$ e3'", 
                    "'$ uvwatauavawh'", 
                    "'$(e3'", 
                    "'$0e3'", 
                    "'$8l3'", 
                    "'$@fa'", 
                    "'$@fd3'", 
                    "'$dfe'", 
                    "'$druuu'", 
                    "'$duqh'", 
                    "'$elc'", 
                    "'$hfa'", 
                    "'$phc'", 
                    "'$t73'", 
                    "'$x@:'", 
                    "'$xe3'", 
                    "'%04hu%02hu%02hu%02hu%02hu%02huz'", 
                    "'()qwertyuiopazxcvbnmqqqqqqqqqqqq)('", 
                    "'(1>?'", 
                    "'(null)'", 
                    "',pol,po'", 
                    "'-64os'", 
                    "'.:3q'", 
                    "'.jbv'", 
                    "'0123456789012345678901234567890123456789'", 
                    "'0a]_'", 
                    "'0a]a'", 
                    "'0a_a'", 
                    "'0u]h'", 
                    "'3l$0'", 
                    "'4kb%'", 
                    "'5upp9wq'", 
                    "'700pp'", 
                    "'8csm'", 
                    "'8l_6'", 
                    "'8mdmpu'", 
                    "'8pido'", 
                    "'9d$<'", 
                    "'9d$l'", 
                    "'9d$ptfd'", 
                    "'9hbinu6h'", 
                    "'9l$8'", 
                    "'9l$8h'", 
                    "'9l$<l'", 
                    "'9regfuj9y'", 
                    "'9t$8'", 
                    "'9t$x'", 
                    "'9tl?8sk'", 
                    "'9wdubh'", 
                    "':-ush'", 
                    "':sh_n'", 
                    "'<$3u'", 
                    "'<$6u'", 
                    "'<$ca'", 
                    "'<$st'", 
                    "'=tu,'", 
                    "'?/l['", 
                    "'?fsx'", 
                    "'@ = '", 
                    "'@8.t'", 
                    "'@81t'", 
                    "'@a_a'", 
                    "'@suvwatauavh'", 
                    "'@suvwath'", 
                    "'@suvwauh'", 
                    "'@svwh'", 
                    "'@t/a'", 
                    "'@vhr<ui'", 
                    "'[ uvwatauavawh'", 
                    "'a_a]a'", 
                    "'afd9'", 
                    "'bcryptclosealgorithmprovider'", 
                    "'bcryptdecrypt'", 
                    "'bcryptdestroykey'", 
                    "'bcryptencrypt'", 
                    "'bcryptenumregisteredproviders'", 
                    "'bcryptfreebuffer'", 
                    "'bcryptgeneratesymmetrickey'", 
                    "'bcryptgetproperty'", 
                    "'bcryptopenalgorithmprovider'", 
                    "'bcryptsetproperty'", 
                    "'bfve'", 
                    "'c e3'", 
                    "'c pa'", 
                    "'c$crda'", 
                    "'cpexportkey'", 
                    "'credentialkeys'", 
                    "'cryptprotectmemory'", 
                    "'cryptunprotectmemory'", 
                    "'d$ %'", 
                    "'d$ 3'", 
                    "'d$ a'", 
                    "'d$ d'", 
                    "'d$ e'", 
                    "'d$ e3'", 
                    "'d$ h'", 
                    "'d$ hc'", 
                    "'d$ i'", 
                    "'d$ l'", 
                    "'d$ m'", 
                    "'d$ v'", 
                    "'d$$d'", 
                    "'d$(3'", 
                    "'d$(a'", 
                    "'d$(d'", 
                    "'d$(e'", 
                    "'d$(e3'", 
                    "'d$(h'", 
                    "'d$(i'", 
                    "'d$(l'", 
                    "'d$,fa'", 
                    "'d$,j'", 
                    "'d$-f'", 
                    "'d$0a'", 
                    "'d$0d'", 
                    "'d$0e'", 
                    "'d$0e3'", 
                    "'d$0fe'", 
                    "'d$0h'", 
                    "'d$0hc'", 
                    "'d$0i'", 
                    "'d$0j'", 
                    "'d$0l'", 
                    "'d$2d'", 
                    "'d$3m'", 
                    "'d$8a'", 
                    "'d$8d'", 
                    "'d$8e3'", 
                    "'d$8f'", 
                    "'d$8h'", 
                    "'d$8i'", 
                    "'d$8l'", 
                    "'d$< '", 
                    "'d$<-'", 
                    "'d$<0e'", 
                    "'d$<h'", 
                    "'d$<j'", 
                    "'d$@3'", 
                    "'d$@4h'", 
                    "'d$@a'", 
                    "'d$@d'", 
                    "'d$@e'", 
                    "'d$@e3'", 
                    "'d$@h'", 
                    "'d$@hc'", 
                    "'d$@hcc'", 
                    "'d$@i'", 
                    "'d$@l'", 
                    "'d$@m'", 
                    "'d$@t'", 
                    "'d$_i'", 
                    "'d$af'", 
                    "'d$ba'", 
                    "'d$bfe'", 
                    "'d$dd'", 
                    "'d$dd9s'", 
                    "'d$de3'", 
                    "'d$df'", 
                    "'d$dfd'", 
                    "'d$dh'", 
                    "'d$di'", 
                    "'d$fd'", 
                    "'d$gh'", 
                    "'d$h3'", 
                    "'d$h9-/'", 
                    "'d$h95r'", 
                    "'d$ha'", 
                    "'d$hb'", 
                    "'d$hd'", 
                    "'d$he3'", 
                    "'d$hh'", 
                    "'d$hhc'", 
                    "'d$hi'", 
                    "'d$hl'", 
                    "'d$hm'", 
                    "'d$hs'", 
                    "'d$hufh'", 
                    "'d$lf'", 
                    "'d$lh'", 
                    "'d$li'", 
                    "'d$p3'", 
                    "'d$pa'", 
                    "'d$pd'", 
                    "'d$pe'", 
                    "'d$pe3'", 
                    "'d$pf'", 
                    "'d$ph'", 
                    "'d$ph9=b'", 
                    "'d$pi'", 
                    "'d$pl'", 
                    "'d$pm'", 
                    "'d$td'", 
                    "'d$te3'", 
                    "'d$th'", 
                    "'d$x3'", 
                    "'d$x9'", 
                    "'d$x9s'", 
                    "'d$x@'", 
                    "'d$xa'", 
                    "'d$xd'", 
                    "'d$xe'", 
                    "'d$xe3'", 
                    "'d$xf'", 
                    "'d$xfe'", 
                    "'d$xh'", 
                    "'d$xi'", 
                    "'d$xl'", 
                    "'d$yf'", 
                    "'d$zd'", 
                    "'d8a t'", 
                    "'d9d$ht$e3'", 
                    "'d9d$pu'", 
                    "'d9l$t'", 
                    "'d9t$x'", 
                    "'d?$?'", 
                    "'dv6h'", 
                    "'dvvg7'", 
                    "'dzyv-'", 
                    "'eb@i'", 
                    "'ejhi'", 
                    "'f9(t'", 
                    "'f91t'", 
                    "'f98u'", 
                    "'f9d$'", 
                    "'f9d$pu'", 
                    "'fa9<$'", 
                    "'fa9b'", 
                    "'fd92r&h'", 
                    "'fd9f'", 
                    "'fd9q'", 
                    "'fe99u'", 
                    "'fe9<$uvfa9l$'", 
                    "'g$crdah'", 
                    "'h sh'", 
                    "'h vwath'", 
                    "'h9-j'", 
                    "'h98t'", 
                    "'h9=ne'", 
                    "'h9i('", 
                    "'h9q0'", 
                    "'ha_a'", 
                    "'hca<h'", 
                    "'hcc h'", 
                    "'hcc(h'", 
                    "'hch<h'", 
                    "'hcj l'", 
                    "'hcl='", 
                    "'hct$'", 
                    "'hct$p'", 
                    "'hcw,e'", 
                    "'hhcd( h'", 
                    "'hhcd($h'", 
                    "'hhcd('", 
                    "'hhcd((h'", 
                    "'hhcd(,h'", 
                    "'hhcd(0h'", 
                    "'hhcd(4h'", 
                    "'hhcd(8h'", 
                    "'hhcd(d'", 
                    "'hhcd(ph'", 
                    "'hhcd(t'", 
                    "'hhcd(x'", 
                    "'hhcd)lh'", 
                    "'hhcl'", 
                    "'hicd'", 
                    "'hict(hh'", 
                    "'hmxb'", 
                    "'ht(@'", 
                    "'hxhc'", 
                    "'icr4l'", 
                    "'icz '", 
                    "'invalid parameter passed to c runtime function.'", 
                    "'it4@'", 
                    "'j(fd'", 
                    "'jwhdtc'", 
                    "'k e3'", 
                    "'k hk'", 
                    "'k watauh'", 
                    "'k wh'", 
                    "'k0hk'", 
                    "'k8hk'", 
                    "'k@e3'", 
                    "'k@fd9x'", 
                    "'kerberos'", 
                    "'khhc'", 
                    "'khhk'", 
                    "'kphc'", 
                    "'kssmuyic'", 
                    "'kxhk'", 
                    "'l$ 3'", 
                    "'l$ a'", 
                    "'l$ d'", 
                    "'l$ e'", 
                    "'l$ e3'", 
                    "'l$ fd'", 
                    "'l$ h'", 
                    "'l$ i'", 
                    "'l$ l'", 
                    "'l$ u'", 
                    "'l$ uvwh'", 
                    "'l$ vwath'", 
                    "'l$ wh'", 
                    "'l$(3'", 
                    "'l$(d'", 
                    "'l$(e3'", 
                    "'l$(h'", 
                    "'l$(h3'", 
                    "'l$(l'", 
                    "'l$03'", 
                    "'l$09'", 
                    "'l$0a'", 
                    "'l$0d'", 
                    "'l$0e3'", 
                    "'l$0h'", 
                    "'l$0i'", 
                    "'l$0l'", 
                    "'l$0lc'", 
                    "'l$0m'", 
                    "'l$2h'", 
                    "'l$4d'", 
                    "'l$83'", 
                    "'l$8a'", 
                    "'l$8d'", 
                    "'l$8e3'", 
                    "'l$8h'", 
                    "'l$8h3'", 
                    "'l$8i'", 
                    "'l$8l'", 
                    "'l$<h'", 
                    "'l$<l'", 
                    "'l$>i'", 
                    "'l$@3'", 
                    "'l$@a'", 
                    "'l$@d'", 
                    "'l$@e3'", 
                    "'l$@h'", 
                    "'l$@h3'", 
                    "'l$@i'", 
                    "'l$@l'", 
                    "'l$@m'", 
                    "'l$@mk'", 
                    "'l$@u'", 
                    "'l$d9'", 
                    "'l$da'", 
                    "'l$dd'", 
                    "'l$de'", 
                    "'l$df'", 
                    "'l$dfd'", 
                    "'l$dl'", 
                    "'l$h3'", 
                    "'l$ha'", 
                    "'l$hd'", 
                    "'l$he'", 
                    "'l$he3'", 
                    "'l$hh'", 
                    "'l$hhca'", 
                    "'l$hi'", 
                    "'l$hl'", 
                    "'l$p3'", 
                    "'l$p@'", 
                    "'l$pa'", 
                    "'l$pe'", 
                    "'l$pe3'", 
                    "'l$ph'", 
                    "'l$ph3'", 
                    "'l$pi'", 
                    "'l$pj'", 
                    "'l$pl'", 
                    "'l$pmk'", 
                    "'l$t@:'", 
                    "'l$ta'", 
                    "'l$td'", 
                    "'l$ti'", 
                    "'l$x3'", 
                    "'l$x9'", 
                    "'l$xa'", 
                    "'l$xd'", 
                    "'l$xe3'", 
                    "'l$xh'", 
                    "'l$xh3'", 
                    "'l$xi'", 
                    "'l$xl'", 
                    "'l$xm'", 
                    "'l(<h'", 
                    "'l9d$@u'", 
                    "'l9d$h'", 
                    "'l9d$ht'", 
                    "'l9d$htoh'", 
                    "'lca<e3'", 
                    "'lcl$xd'", 
                    "'lmpassword'", 
                    "'lsaicancelnotification'", 
                    "'lsairegisternotification'", 
                    "'n(c[n'", 
                    "'ncryptenumkeys'", 
                    "'ncryptexportkey'", 
                    "'ncryptfreebuffer'", 
                    "'ncryptfreeobject'", 
                    "'ncryptgetproperty'", 
                    "'ncryptopenkey'", 
                    "'ncryptopenstorageprovider'", 
                    "'nkeb'", 
                    "'ntpassword'", 
                    "'o1e3'", 
                    "'oa03'", 
                    "'od$p'", 
                    "'owqm4'", 
                    "'p watauh'", 
                    "'p wh'", 
                    "'pa]a'", 
                    "'plv7i'", 
                    "'primary'", 
                    "'rxw2i'", 
                    "'s fe'", 
                    "'s watauavawh'", 
                    "'s watauh'", 
                    "'s wh'", 
                    "'suvwatauavawh'", 
                    "'suvwath'", 
                    "'svwatauavawh'", 
                    "'svwh'", 
                    "'t$ 3'", 
                    "'t$ a'", 
                    "'t$ d'", 
                    "'t$ d9'", 
                    "'t$ e'", 
                    "'t$ e3'", 
                    "'t$ h'", 
                    "'t$ i'", 
                    "'t$ l'", 
                    "'t$ watauavawh'", 
                    "'t$ watauh'", 
                    "'t$ wh'", 
                    "'t$$lc'", 
                    "'t$(a'", 
                    "'t$(e3'", 
                    "'t$(h'", 
                    "'t$(l'", 
                    "'t$03'", 
                    "'t$0a'", 
                    "'t$0d'", 
                    "'t$0e'", 
                    "'t$0e3'", 
                    "'t$0h'", 
                    "'t$0l'", 
                    "'t$0lc'", 
                    "'t$0m'", 
                    "'t$4d'", 
                    "'t$4e'", 
                    "'t$4h'", 
                    "'t$4i'", 
                    "'t$8e3'", 
                    "'t$8f'", 
                    "'t$8h'", 
                    "'t$8i'", 
                    "'t$8l'", 
                    "'t$@3'", 
                    "'t$@a'", 
                    "'t$@d'", 
                    "'t$@e3'", 
                    "'t$@h'", 
                    "'t$@l'", 
                    "'t$dh'", 
                    "'t$fh'", 
                    "'t$h3'", 
                    "'t$hd'", 
                    "'t$he'", 
                    "'t$hh'", 
                    "'t$hi'", 
                    "'t$hl'", 
                    "'t$hm'", 
                    "'t$hu'", 
                    "'t$jf'", 
                    "'t$jfe'", 
                    "'t$ld'", 
                    "'t$p3'", 
                    "'t$pa'", 
                    "'t$pd'", 
                    "'t$pe3'", 
                    "'t$pf'", 
                    "'t$ph'", 
                    "'t$pi'", 
                    "'t$pl'", 
                    "'t$rd'", 
                    "'t$t8'", 
                    "'t$td'", 
                    "'t$tf'", 
                    "'t$th'", 
                    "'t$vf'", 
                    "'t$x3'", 
                    "'t$xa'", 
                    "'t$xd'", 
                    "'t$xh'", 
                    "'t$xi'", 
                    "'t$xl'", 
                    "'t-fa'", 
                    "'t/9>a'", 
                    "'t0hc'", 
                    "'t7f9y'", 
                    "'t=e3'", 
                    "'t=hcd$pd'", 
                    "'t@a96a'", 
                    "'tefd'", 
                    "'tlhcc,h'", 
                    "'tml9'", 
                    "'trhc'", 
                    "'tse3'", 
                    "'tuhc'", 
                    "'tzfd9f'", 
                    "'uh(d'", 
                    "'ui9c'", 
                    "'ukfa'", 
                    "'um07tn'", 
                    "'unfa'", 
                    "'uoh9'", 
                    "'uufd'", 
                    "'uvwatauavawh'", 
                    "'uvwatauh'", 
                    "'uvwh'", 
                    "'uwath'", 
                    "'vaultclosevault'", 
                    "'vaultenumerateitems'", 
                    "'vaultenumerateitemtypes'", 
                    "'vaultenumeratevaults'", 
                    "'vaultfree'", 
                    "'vaultgetinformation'", 
                    "'vaultgetitem'", 
                    "'vaultopenvault'", 
                    "'vle3'", 
                    "'vwatauavh'", 
                    "'vwatauawh'", 
                    "'vwath'", 
                    "'vwauh'", 
                    "'w[]c6'", 
                    "'watauavawh'", 
                    "'watauh'", 
                    "'x atauavh'", 
                    "'x ath'", 
                    "'xppwpp'", 
                    "'z?auy'", 
                    "'zc%c1'", 
                    "'zkj_9'", 
                    "'zugh'"
                ]
            }, 
            "version": {
                "fixed_file_info": {
                    "FileDateLS": "'0x0'", 
                    "FileDateMS": "'0x0'", 
                    "FileFlags": "'0x2a'", 
                    "FileFlagsMask": "'0x3f'", 
                    "FileOS": "'0x40000'", 
                    "FileSubtype": "'0x0'", 
                    "FileType": "'0x1'", 
                    "FileVersionLS": "'0x0'", 
                    "FileVersionMS": "'0x20000'", 
                    "ProductVersionLS": "'0x0'", 
                    "ProductVersionMS": "'0x20000'", 
                    "Signature": "'0xfeef04bd'", 
                    "StrucVersion": "'0x10000'"
                }, 
                "string_file_info": {
                    "Comments": "None", 
                    "CompanyName": "gentilkiwi (Benjamin DELPY)", 
                    "FileDescription": "mimikatz for Windows", 
                    "FileVersion": "2.0.0.0", 
                    "InternalName": "mimikatz", 
                    "LangID": "040904b0", 
                    "LegalCopyright": "Copyright (c) 2007 - 2014 gentilkiwi (Benjamin DELPY)", 
                    "LegalTrademarks": "None", 
                    "OriginalFilename": "mimikatz.exe", 
                    "PrivateBuild": "Build with love for POC only", 
                    "ProductName": "mimikatz", 
                    "ProductVersion": "2.0.0.0", 
                    "SpecialBuild": "kiwi flavor !"
                }, 
                "version_info": {
                    "Length": "'0x3c0'", 
                    "Type": "'0x0'", 
                    "ValueLength": "'0x34'"
                }
            }
        }, 
        "size": 198848
    }, 
    "attack-pattern": [
        {
            "created": "2017-05-31T21:31:13.447Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Windows Security Support Provider (SSP) DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages</code> and <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.\n (Citation: Graeber 2014)\n\nDetection: Monitor the Registry for changes to the SSP Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe</code> with AuditLevel = 8. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA)\n\nPlatforms: Windows\n\nData Sources: DLL monitoring, Windows Registry, Loaded DLLs\n\nPermissions Required: Administrator", 
            "external_references": [
                {
                    "external_id": "T1101", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1101"
                }, 
                {
                    "description": "Graeber, M. (2014, October). Analysis of Malicious Security Support Provider DLLs. Retrieved March 1, 2017.", 
                    "source_name": "Graeber 2014", 
                    "url": "http://docplayer.net/20839173-Analysis-of-malicious-security-support-provider-dlls.html"
                }, 
                {
                    "description": "Microsoft. (2013, July 31). Configuring Additional LSA Protection. Retrieved June 24, 2015.", 
                    "source_name": "Microsoft Configure LSA", 
                    "url": "https://technet.microsoft.com/en-us/library/dn408187.aspx"
                }
            ], 
            "id": "attack-pattern--6c174520-beea-43d9-aac6-28fb77f3e446", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "persistence"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Security Support Provider", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "DLL monitoring", 
                "Windows Registry", 
                "Loaded DLLs"
            ], 
            "x_mitre_permissions_required": [
                "Administrator"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ]
        }, 
        {
            "created": "2018-01-16T16:13:52.465Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID)-History Attribute, allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nAdversaries may use this mechanism for privilege escalation. With Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as Remote Services, Windows Admin Shares, or Windows Remote Management.\n\nDetection: Examine data in user\u2019s SID-History attributes using the PowerShell Get-ADUser Cmdlet (Citation: Microsoft Get-ADUser), especially users who have SID-History values from the same domain. (Citation: AdSecurity SID History Sept 2015)\n\nMonitor Account Management events on Domain Controllers for successful and failed changes to SID-History. (Citation: AdSecurity SID History Sept 2015)  (Citation: Microsoft DsAddSidHistory)\n\nMonitor Windows API calls to the <code>DsAddSidHistory</code> function. (Citation: Microsoft DsAddSidHistory)\n\nPlatforms: Windows\n\nData Sources: API monitoring, Authentication logs, Windows event logs\n\nPermissions Required: Administrator, SYSTEM\n\nContributors: Vincent Le Toux", 
            "external_references": [
                {
                    "external_id": "T1178", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1178"
                }, 
                {
                    "description": "Microsoft. (n.d.). Security Identifiers. Retrieved November 30, 2017.", 
                    "source_name": "Microsoft SID", 
                    "url": "https://msdn.microsoft.com/library/windows/desktop/aa379571.aspx"
                }, 
                {
                    "description": "Microsoft. (2017, June 23). Well-known security identifiers in Windows operating systems. Retrieved November 30, 2017.", 
                    "source_name": "Microsoft Well Known SIDs Jun 2017", 
                    "url": "https://support.microsoft.com/help/243330/well-known-security-identifiers-in-windows-operating-systems"
                }, 
                {
                    "description": "Microsoft. (n.d.). Active Directory Cmdlets - Get-ADUser. Retrieved November 30, 2017.", 
                    "source_name": "Microsoft Get-ADUser", 
                    "url": "https://technet.microsoft.com/library/ee617241.aspx"
                }, 
                {
                    "description": "Metcalf, S. (2015, September 19). Sneaky Active Directory Persistence #14: SID History. Retrieved November 30, 2017.", 
                    "source_name": "AdSecurity SID History Sept 2015", 
                    "url": "https://adsecurity.org/?p=1772"
                }, 
                {
                    "description": "Microsoft. (n.d.). Using DsAddSidHistory. Retrieved November 30, 2017.", 
                    "source_name": "Microsoft DsAddSidHistory", 
                    "url": "https://msdn.microsoft.com/library/ms677982.aspx"
                }
            ], 
            "id": "attack-pattern--1df0326d-2fbc-4d08-a16b-48365f1e742d", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "privilege-escalation"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "SID-History Injection", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "Vincent Le Toux"
            ], 
            "x_mitre_data_sources": [
                "API monitoring", 
                "Authentication logs", 
                "Windows event logs"
            ], 
            "x_mitre_permissions_required": [
                "Administrator", 
                "SYSTEM"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ]
        }, 
        {
            "created": "2017-12-14T16:46:06.044Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. (Citation: Wikipedia Public Key Crypto)\n\nAdversaries may gather private keys from compromised systems for use in authenticating to Remote Services like SSH or for use in decrypting other collected files such as email. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, pfx, .cer, .p7b, .asc. Adversaries may also look in common key directories, such as <code>~/.ssh</code> for SSH keys on *nix-based systems or <code>C:\\Users\\(username)\\.ssh\\</code> on Windows.\n\nPrivate keys should require a password or passphrase for operation, so an adversary may also use Input Capture for keylogging or attempt to Brute Force the passphrase off-line.\n\nAdversary tools have been discovered that search compromised systems for file extensions relating to cryptographic keys and certificates. (Citation: Kaspersky Careto) (Citation: Palo Alto Prince of Persia)\n\nDetection: Monitor access to files and directories related to cryptographic keys and certificates as a means for potentially detecting access patterns that may indicate collection and exfiltration activity. Collect authentication logs and look for potentially abnormal activity that may indicate improper use of keys or certificates for remote authentication.\n\nPlatforms: Linux, Windows, macOS\n\nData Sources: File monitoring\n\nPermissions Required: User\n\nContributors: Itzik Kotler, SafeBreach", 
            "external_references": [
                {
                    "external_id": "T1145", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1145"
                }, 
                {
                    "description": "Wikipedia. (2017, June 29). Public-key cryptography. Retrieved July 5, 2017.", 
                    "source_name": "Wikipedia Public Key Crypto", 
                    "url": "https://en.wikipedia.org/wiki/Public-key%20cryptography"
                }, 
                {
                    "description": "Kaspersky Labs. (2014, February 11). Unveiling \u201cCareto\u201d - The Masked APT. Retrieved July 5, 2017.", 
                    "source_name": "Kaspersky Careto", 
                    "url": "https://kasperskycontenthub.com/wp-content/uploads/sites/43/vlpdfs/unveilingthemask%20v1.0.pdf"
                }, 
                {
                    "description": "Bar, T., Conant, S., Efraim, L. (2016, June 28). Prince of Persia \u2013 Game Over. Retrieved July 5, 2017.", 
                    "source_name": "Palo Alto Prince of Persia", 
                    "url": "https://researchcenter.paloaltonetworks.com/2016/06/unit42-prince-of-persia-game-over/"
                }
            ], 
            "id": "attack-pattern--56ff457d-5e39-492b-974c-dfd2b8603ffe", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "credential-access"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Private Keys", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "Itzik Kotler, SafeBreach"
            ], 
            "x_mitre_data_sources": [
                "File monitoring"
            ], 
            "x_mitre_permissions_required": [
                "User"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "Windows", 
                "macOS"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:02.188Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may search local file systems and remote file shares for files containing passwords.  These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.\n\nIt is possible to extract passwords from backups or saved virtual machines through Credential Dumping. (Citation: CG 2014) Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller. (Citation: SRD GPP)\n\nDetection: While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See Valid Accounts for more information.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: File monitoring, Process command-line parameters\n\nPermissions Required: User, Administrator, SYSTEM\n\nSystem Requirements: Access to files", 
            "external_references": [
                {
                    "external_id": "T1081", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1081"
                }, 
                {
                    "description": "CG. (2014, May 20). Mimikatz Against Virtual Machine Memory Part 1. Retrieved November 12, 2014.", 
                    "source_name": "CG 2014", 
                    "url": "http://carnal0wnage.attackresearch.com/2014/05/mimikatz-against-virtual-machine-memory.html"
                }, 
                {
                    "description": "Security Research and Defense. (2014, May 13). MS14-025: An Update for Group Policy Preferences. Retrieved January 28, 2015.", 
                    "source_name": "SRD GPP", 
                    "url": "http://blogs.technet.com/b/srd/archive/2014/05/13/ms14-025-an-update-for-group-policy-preferences.aspx"
                }
            ], 
            "id": "attack-pattern--ba8e391f-14b5-496f-81f2-2d5ecd646c1c", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "credential-access"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Credentials in Files", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "File monitoring", 
                "Process command-line parameters"
            ], 
            "x_mitre_permissions_required": [
                "User", 
                "Administrator", 
                "SYSTEM"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ], 
            "x_mitre_system_requirements": [
                "Access to files"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:19.735Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Credential dumping is the process of obtaining account login and password information, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform\u00a0Lateral Movement\u00a0and access restricted information.\n\nSeveral of the tools mentioned in this technique may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n\n===SAM (Security Accounts Manager)===\n\nThe SAM is a database file that contains local accounts for the host, typically those found with the \u2018net user\u2019 command.  To enumerate the SAM database, system level access is required.\n\u00a0\nA number of tools can be used to retrieve the SAM file through in-memory techniques:\n* pwdumpx.exe \n* gsecdump\n* Mimikatz\n* secretsdump.py\n\nAlternatively, the SAM can be extracted from the Registry with Reg:\n* <code>reg save HKLM\\sam sam</code>\n* <code>reg save HKLM\\system system</code>\n\nCreddump7 can then be used to process the SAM database locally to retrieve hashes. (Citation: GitHub Creddump7)\n\nNotes:\nRid 500 account is the local, in-built administrator.\nRid 501 is the guest account.\nUser accounts start with a RID of 1,000+.\n\n===Cached Credentials===\n\nThe DCC2 (Domain Cached Credentials version 2) hash, used by Windows Vista and newer caches credentials when the domain controller is unavailable.  The number of default cached credentials varies, and this number can be altered per system.  This hash does not allow pass-the-hash style attacks.\n\u00a0\nA number of tools can be used to retrieve the SAM file through in-memory techniques.\n* pwdumpx.exe \n* gsecdump\n* Mimikatz\n\nAlternatively, reg.exe can be used to extract from the Registry and Creddump7 used to gather the credentials.\n\nNotes:\nCached credentials for Windows Vista are derived using PBKDF2.\n\n===Local Security Authority (LSA) Secrets===\n\nWith SYSTEM access to a host, the LSA secrets often allows trivial access from a local account to domain-based account credentials. The Registry is used to store the LSA secrets.\n\u00a0\nWhen services are run under the context of local or domain users, their passwords are stored in the Registry. If auto-logon is enabled, this information will be stored in the Registry as well.\n\u00a0\nA number of tools can be used to retrieve the SAM file through in-memory techniques.\n* pwdumpx.exe \n* gsecdump\n* Mimikatz\n* secretsdump.py\n\nAlternatively, reg.exe can be used to extract from the Registry and Creddump7 used to gather the credentials.\n\nNotes:\nThe passwords extracted by his mechanism are\u00a0UTF-16\u00a0encoded, which means that they are returned in\u00a0plaintext.\nWindows 10 adds protections for LSA Secrets described in Mitigation.\n\n===NTDS from Domain Controller===\n\nActive Directory stores information about members of the domain including devices and users to verify credentials and define access rights. The Active Directory domain database is stored in the NTDS.dit file. By default the NTDS file will be located in %SystemRoot%\\NTDS\\Ntds.dit of a domain controller. (Citation: Wikipedia Active Directory)\n \nThe following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.\n\u00a0\n* Volume Shadow Copy\n* secretsdump.py\n* Using the in-built Windows tool, ntdsutil.exe\n* Invoke-NinjaCopy\n\n===Group Policy Preference (GPP) Files===\n\nGroup Policy Preferences (GPP) are tools that allowed administrators to create domain policies with embedded credentials. These policies, amongst other things, allow administrators to set local accounts.\n\u00a0\nThese group policies are stored in SYSVOL on a domain controller, this means that any domain user can view the SYSVOL share and decrypt the password (the AES private key was leaked on-line. (Citation: Microsoft GPP Key) (Citation: SRD GPP)\n\u00a0\nThe following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:\n\u00a0\n* Metasploit\u2019s post exploitation module: \"post/windows/gather/credentials/gpp\"\n* Get-GPPPassword (Citation: Obscuresecurity Get-GPPPassword)\n* gpprefdecrypt.py\n\u00a0\nNotes:\nOn the SYSVOL share, the following can be used to enumerate potential XML files.\ndir /s *.xml\n\n===Service Principle Names (SPNs)===\n\nSee Kerberoasting.\n\n===Plaintext Credentials===\n\nAfter a user logs on to a system, a variety of credentials are generated and stored in the\u00a0Local Security Authority Subsystem Service\u00a0(LSASS) process in memory. These credentials can be harvested by a administrative user or SYSTEM.\n\u00a0\nSSPI (Security Support Provider Interface) functions as a common interface to several Security Support Providers (SSPs):\u00a0A Security Support Provider is a\u00a0dynamic-link library\u00a0(DLL) that makes one or more security packages available to applications.\n\nThe following SSPs can be used to access credentials:\n\u00a0\nMsv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\nWdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges. (Citation: TechNet Blogs Credential Protection)\nKerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\nCredSSP: \u00a0Provides SSO and\u00a0Network Level Authentication\u00a0for\u00a0Remote Desktop Services. (Citation: Microsoft CredSSP)\n\u00a0\nThe following tools can be used to enumerate credentials:\n\u00a0\n* Windows Credential Editor\n* Mimikatz\n\u00a0\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\n\u00a0\nFor example, on the target host use procdump:\n* <code>procdump -ma lsass.exe lsass_dump</code>\n\u00a0\nLocally, mimikatz can be run:\n* <code>sekurlsa::Minidump\u00a0lsassdump.dmp</code>\n* <code>sekurlsa::logonPasswords</code>\n\n===DCSync=== \n\nDCSync is a variation on credential dumping which can be used to acquire sensitive information from a domain controller. Rather than executing recognizable malicious code, the action works by abusing the domain controller's  application programming interface (API) (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) (Citation: Wine API samlib.dll) to simulate the replication process from a remote domain controller.  Any members of the Administrators, Domain Admins, Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data  (Citation: ADSecurity Mimikatz DCSync) from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a Golden Ticket for use in Pass the Ticket (Citation: Harmj0y Mimikatz and DCSync) or change an account's password as noted in Account Manipulation. (Citation: InsiderThreat ChangeNTLM July 2017) DCSync functionality has been included in the \"lsadump\" module in Mimikatz. (Citation: GitHub Mimikatz lsadump Module) Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol. (Citation: Microsoft NRPC Dec 2017)\n\nDetection: Common credential dumpers such as Mimikatz access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective Process Injection to reduce potential indicators of malicious activity.\n\nHash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised Valid Accounts in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, (Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nMonitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync. (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Note: Domain controllers may not log replication requests originating from the default domain controller account. (Citation: Harmj0y DCSync Sept 2015). Also monitor for network protocols  (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft NRPC Dec 2017) and other replication requests (Citation: Microsoft SAMR) from IPs not associated with known domain controllers. (Citation: AdSecurity DCSync Sept 2015)\n\nPlatforms: Windows\n\nData Sources: API monitoring, Process command-line parameters, Process monitoring, PowerShell logs\n\nPermissions Required: Administrator, SYSTEM\n\nContributors: Vincent Le Toux, Ed Williams, Trustwave, SpiderLabs", 
            "external_references": [
                {
                    "external_id": "T1003", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1003"
                }, 
                {
                    "description": "PowerSploit. (n.d.).  Retrieved December 4, 2014.", 
                    "source_name": "Powersploit", 
                    "url": "https://github.com/mattifestation/PowerSploit"
                }, 
                {
                    "description": "Metcalf, S. (2015, September 25). Mimikatz DCSync Usage, Exploitation, and Detection. Retrieved August 7, 2017.", 
                    "source_name": "ADSecurity Mimikatz DCSync", 
                    "url": "https://adsecurity.org/?p=1729"
                }, 
                {
                    "description": "Schroeder, W. (2015, September 22). Mimikatz and DCSync and ExtraSids, Oh My. Retrieved August 7, 2017.", 
                    "source_name": "Harmj0y Mimikatz and DCSync", 
                    "url": "http://www.harmj0y.net/blog/redteaming/mimikatz-and-dcsync-and-extrasids-oh-my/"
                }, 
                {
                    "description": "Deply, B., Le Toux, V. (2016, June 5). module ~ lsadump. Retrieved August 7, 2017.", 
                    "source_name": "GitHub Mimikatz lsadump Module", 
                    "url": "https://github.com/gentilkiwi/mimikatz/wiki/module-~-lsadump"
                }, 
                {
                    "description": "Microsoft. (2017, December 1). MS-DRSR Directory Replication Service (DRS) Remote Protocol. Retrieved December 4, 2017.", 
                    "source_name": "Microsoft DRSR Dec 2017", 
                    "url": "https://msdn.microsoft.com/library/cc228086.aspx"
                }, 
                {
                    "description": "Microsoft. (n.d.). IDL_DRSGetNCChanges (Opnum 3). Retrieved December 4, 2017.", 
                    "source_name": "Microsoft GetNCCChanges", 
                    "url": "https://msdn.microsoft.com/library/dd207691.aspx"
                }, 
                {
                    "description": "SambaWiki. (n.d.). DRSUAPI. Retrieved December 4, 2017.", 
                    "source_name": "Samba DRSUAPI", 
                    "url": "https://wiki.samba.org/index.php/DRSUAPI"
                }, 
                {
                    "description": "Wine API. (n.d.). samlib.dll. Retrieved December 4, 2017.", 
                    "source_name": "Wine API samlib.dll", 
                    "url": "https://source.winehq.org/WineAPI/samlib.html"
                }, 
                {
                    "description": "Warren, J. (2017, July 11). Manipulating User Passwords with Mimikatz. Retrieved December 4, 2017.", 
                    "source_name": "InsiderThreat ChangeNTLM July 2017", 
                    "url": "https://blog.stealthbits.com/manipulating-user-passwords-with-mimikatz-SetNTLM-ChangeNTLM"
                }, 
                {
                    "description": "Microsoft. (2017, December 1). MS-NRPC - Netlogon Remote Protocol. Retrieved December 6, 2017.", 
                    "source_name": "Microsoft NRPC Dec 2017", 
                    "url": "https://msdn.microsoft.com/library/cc237008.aspx"
                }, 
                {
                    "description": "Metcalf, S. (2015, September 25). Mimikatz DCSync Usage, Exploitation, and Detection. Retrieved December 4, 2017.", 
                    "source_name": "AdSecurity DCSync Sept 2015", 
                    "url": "https://adsecurity.org/?p=1729"
                }, 
                {
                    "description": "Schroeder, W. (2015, September 22). Mimikatz and DCSync and ExtraSids, Oh My. Retrieved December 4, 2017.", 
                    "source_name": "Harmj0y DCSync Sept 2015", 
                    "url": "http://www.harmj0y.net/blog/redteaming/mimikatz-and-dcsync-and-extrasids-oh-my/"
                }, 
                {
                    "description": "Microsoft. (n.d.). MS-SAMR Security Account Manager (SAM) Remote Protocol (Client-to-Server) - Transport. Retrieved December 4, 2017.", 
                    "source_name": "Microsoft SAMR", 
                    "url": "https://msdn.microsoft.com/library/cc245496.aspx"
                }, 
                {
                    "description": "Flathers, R. (2018, February 19). creddump7. Retrieved April 11, 2018.", 
                    "source_name": "GitHub Creddump7", 
                    "url": "https://github.com/Neohapsis/creddump7"
                }, 
                {
                    "description": "Wikipedia. (2018, March 10). Active Directory. Retrieved April 11, 2018.", 
                    "source_name": "Wikipedia Active Directory", 
                    "url": "https://en.wikipedia.org/wiki/Active%20Directory"
                }, 
                {
                    "description": "Microsoft. (n.d.). 2.2.1.1.4 Password Encryption. Retrieved April 11, 2018.", 
                    "source_name": "Microsoft GPP Key", 
                    "url": "https://msdn.microsoft.com/library/cc422924.aspx"
                }, 
                {
                    "description": "Security Research and Defense. (2014, May 13). MS14-025: An Update for Group Policy Preferences. Retrieved January 28, 2015.", 
                    "source_name": "SRD GPP", 
                    "url": "http://blogs.technet.com/b/srd/archive/2014/05/13/ms14-025-an-update-for-group-policy-preferences.aspx"
                }, 
                {
                    "description": "Campbell, C. (2012, May 24). GPP Password Retrieval with PowerShell. Retrieved April 11, 2018.", 
                    "source_name": "Obscuresecurity Get-GPPPassword", 
                    "url": "https://obscuresecurity.blogspot.co.uk/2012/05/gpp-password-retrieval-with-powershell.html"
                }, 
                {
                    "description": "Wilson, B. (2016, April 18). The Importance of KB2871997 and KB2928120 for Credential Protection. Retrieved April 11, 2018.", 
                    "source_name": "TechNet Blogs Credential Protection", 
                    "url": "https://blogs.technet.microsoft.com/askpfeplat/2016/04/18/the-importance-of-kb2871997-and-kb2928120-for-credential-protection/"
                }, 
                {
                    "description": "Microsoft. (2008, July 25). Credential Security Service Provider and SSO for Terminal Services Logon. Retrieved April 11, 2018.", 
                    "source_name": "Microsoft CredSSP", 
                    "url": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-vista/cc749211(v=ws.10)"
                }
            ], 
            "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "credential-access"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Credential Dumping", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "Vincent Le Toux", 
                "Ed Williams, Trustwave, SpiderLabs"
            ], 
            "x_mitre_data_sources": [
                "API monitoring", 
                "Process command-line parameters", 
                "Process monitoring", 
                "PowerShell logs"
            ], 
            "x_mitre_permissions_required": [
                "Administrator", 
                "SYSTEM"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:12.196Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Account manipulation may aid adversaries in maintaining access to credentials and certain permission levels within an environment. Manipulation could consist of modifying permissions, modifying credentials, adding or changing permission groups, modifying account settings, or modifying how authentication is performed. In order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain.\n\nDetection: Collect events that correlate with changes to account objects on systems and the domain, such as event ID 4738. (Citation: Microsoft User Modified Event) Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Especially flag events where the subject and target accounts differ (Citation: InsiderThreat ChangeNTLM July 2017) or that include additional flags such as changing a password without knowledge of the old password. (Citation: GitHub Mimikatz Issue 92 June 2017)\n\nUse of credentials may also occur at unusual times or to unusual systems or services and may correlate with other suspicious activity.\n\nPlatforms: Windows\n\nData Sources: Authentication logs, API monitoring, Windows event logs, Packet capture\n\nPermissions Required: Administrator", 
            "external_references": [
                {
                    "external_id": "T1098", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1098"
                }, 
                {
                    "description": "Lich, B., Miroshnikov, A. (2017, April 5). 4738(S): A user account was changed. Retrieved June 30, 2017.", 
                    "source_name": "Microsoft User Modified Event", 
                    "url": "https://docs.microsoft.com/windows/device-security/auditing/event-4738"
                }, 
                {
                    "description": "Warren, J. (2017, July 11). Manipulating User Passwords with Mimikatz. Retrieved December 4, 2017.", 
                    "source_name": "InsiderThreat ChangeNTLM July 2017", 
                    "url": "https://blog.stealthbits.com/manipulating-user-passwords-with-mimikatz-SetNTLM-ChangeNTLM"
                }, 
                {
                    "description": "Warren, J. (2017, June 22). lsadump::changentlm and lsadump::setntlm work, but generate Windows events #92. Retrieved December 4, 2017.", 
                    "source_name": "GitHub Mimikatz Issue 92 June 2017", 
                    "url": "https://github.com/gentilkiwi/mimikatz/issues/92"
                }
            ], 
            "id": "attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "credential-access"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Account Manipulation", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Authentication logs", 
                "API monitoring", 
                "Windows event logs", 
                "Packet capture"
            ], 
            "x_mitre_permissions_required": [
                "Administrator"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:11.623Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.\n\nIn this technique, valid Kerberos tickets for Valid Accounts are captured by Credential Dumping. A user's service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access. (Citation: ADSecurity AD Kerberos Attacks) (Citation: GentilKiwi Pass the Ticket)\n\nSilver Tickets can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint). (Citation: ADSecurity AD Kerberos Attacks)\n\nGolden Tickets can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory. (Citation: Campbell 2014)\n\nDetection: Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.\n\nEvent ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to \"Integrity check on decrypted field failed\" and indicates misuse by a previously invalidated golden ticket. (Citation: CERT-EU Golden Ticket Protection)\n\nPlatforms: Windows\n\nData Sources: Authentication logs\n\nSystem Requirements: Requires Microsoft Windows as a target system and Kerberos authentication enabled.\n\nContributors: Ryan Becwar, Vincent Le Toux", 
            "external_references": [
                {
                    "external_id": "T1097", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1097"
                }, 
                {
                    "description": "Metcalf, S. (2014, November 22). Mimikatz and Active Directory Kerberos Attacks. Retrieved June 2, 2016.", 
                    "source_name": "ADSecurity AD Kerberos Attacks", 
                    "url": "https://adsecurity.org/?p=556"
                }, 
                {
                    "description": "Abolins, D., Boldea, C., Socha, K., Soria-Machado, M. (2016, April 26). Kerberos Golden Ticket Protection. Retrieved July 13, 2017.", 
                    "source_name": "CERT-EU Golden Ticket Protection"
                }, 
                {
                    "description": "Campbell, C. (2014). The Secret Life of Krbtgt. Retrieved December 4, 2014.", 
                    "source_name": "Campbell 2014", 
                    "url": "http://defcon.org/images/defcon-22/dc-22-presentations/Campbell/DEFCON-22-Christopher-Campbell-The-Secret-Life-of-Krbtgt.pdf"
                }, 
                {
                    "description": "Deply, B. (2014, January 13). Pass the ticket. Retrieved June 2, 2016.", 
                    "source_name": "GentilKiwi Pass the Ticket", 
                    "url": "http://blog.gentilkiwi.com/securite/mimikatz/pass-the-ticket-kerberos"
                }
            ], 
            "id": "attack-pattern--a257ed11-ff3b-4216-8c9d-3938ef57064c", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "lateral-movement"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Pass the Ticket", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "Ryan Becwar", 
                "Vincent Le Toux"
            ], 
            "x_mitre_data_sources": [
                "Authentication logs"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ], 
            "x_mitre_system_requirements": [
                "Requires Microsoft Windows as a target system and Kerberos authentication enabled."
            ]
        }, 
        {
            "created": "2017-05-31T21:30:59.339Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash. In this technique, valid password hashes for the account being used are captured using a Credential Access technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems. \n\nWindows 7 and higher with KB2871997 require valid domain user credentials or RID 500 administrator hashes. (Citation: NSA Spotting)\n\nDetection: Audit all logon and credential use events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity. NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious.\n\nPlatforms: Windows\n\nData Sources: Authentication logs\n\nSystem Requirements: Requires Microsoft Windows as target system\n\nContributors: Travis Smith, Tripwire", 
            "external_references": [
                {
                    "external_id": "T1075", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1075"
                }, 
                {
                    "description": "National Security Agency/Central Security Service Information Assurance Directorate. (2013, December 16). Spotting the Adversary with Windows Event Log Monitoring. Retrieved November 12, 2014.", 
                    "source_name": "NSA Spotting", 
                    "url": "http://www.nsa.gov/ia/%20files/app/spotting%20the%20adversary%20with%20windows%20event%20log%20monitoring.pdf"
                }
            ], 
            "id": "attack-pattern--c23b740b-a42b-47a1-aec2-9d48ddd547ff", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "lateral-movement"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Pass the Hash", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "Travis Smith, Tripwire"
            ], 
            "x_mitre_data_sources": [
                "Authentication logs"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ], 
            "x_mitre_system_requirements": [
                "Requires Microsoft Windows as target system"
            ]
        }, 
        {
            "created": "2018-04-18T17:59:24.739Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a Domain Controller (DC). (Citation: DCShadow Blog) (Citation: BlueHat DCShadow Jan 2018) Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys.\n\nRegistering a rogue DC involves creating a new server and nTDSDSA objects in the Configuration partition of the AD schema, which requires Administrator privileges (either Domain or local to the DC) or the KRBTGT hash. (Citation: Adsecurity Mimikatz Guide)\n\nThis technique may bypass system logging and security monitors such as security information and event management (SIEM) products (since actions taken on a rogue DC may not be reported to these sensors). (Citation: DCShadow Blog) The technique may also be used to alter and delete replication and other associated metadata to obstruct forensic analysis. Adversaries may also utilize this technique to perform SID-History Injection and/or manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence. (Citation: DCShadow Blog) (Citation: BlueHat DCShadow Jan 2018)\n\nDetection: Monitor and analyze network traffic associated with data replication (such as calls to DrsAddEntry, DrsReplicaAdd, and especially GetNCChanges) between DCs as well as to/from non DC hosts. (Citation: GitHub DCSYNCMonitor) (Citation: DCShadow Blog) (Citation: BlueHat DCShadow Jan 2018) DC replication will naturally take place every 15 minutes but can be triggered by an attacker or by legitimate urgent changes (ex: passwords). (Citation: BlueHat DCShadow Jan 2018) Also consider monitoring and alerting on the replication of AD objects (Audit Detailed Directory Service Replication Events 4928 and 4929). (Citation: DCShadow Blog)\n\nLeverage AD directory synchronization (DirSync) to monitor changes to directory state using AD replication cookies. (Citation: Microsoft DirSync) (Citation: ADDSecurity DCShadow Feb 2018)\n\nBaseline and periodically analyze the Configuration partition of the AD schema and alert on creation of nTDSDSA objects. (Citation: BlueHat DCShadow Jan 2018)\n\nInvestigate usage of Kerberos Service Principal Names (SPNs), especially those associated with services (beginning with \u201cGC/\u201d) by computers not present in the DC organizational unit (OU). The SPN associated with the Directory Replication Service (DRS) Remote Protocol interface (GUID E3514235\u20134B06\u201311D1-AB04\u201300C04FC2DCD2) can be set without logging. (Citation: ADDSecurity DCShadow Feb 2018) A rogue DC must authenticate as a service using these two SPNs for the replication process to successfully complete.\n\nPlatforms: Windows\n\nData Sources: API monitoring, Authentication logs, Network protocol analysis, Packet capture\n\nDefense Bypassed: Log analysis\n\nPermissions Required: Administrator\n\nContributors: Vincent Le Toux", 
            "external_references": [
                {
                    "external_id": "T1207", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1207"
                }, 
                {
                    "description": "Delpy, B. & LE TOUX, V. (n.d.). DCShadow. Retrieved March 20, 2018.", 
                    "source_name": "DCShadow Blog", 
                    "url": "https://www.dcshadow.com/"
                }, 
                {
                    "description": "Delpy, B. & LE TOUX, V. (2018, January 24). Active Directory: What can make your million dollar SIEM go blind?. Retrieved March 20, 2018.", 
                    "source_name": "BlueHat DCShadow Jan 2018"
                }, 
                {
                    "description": "Metcalf, S. (2015, November 13). Unofficial Guide to Mimikatz & Command Reference. Retrieved December 23, 2015.", 
                    "source_name": "Adsecurity Mimikatz Guide", 
                    "url": "https://adsecurity.org/?page%20id=1821"
                }, 
                {
                    "description": "Spencer S. (2018, February 22). DCSYNCMonitor. Retrieved March 30, 2018.", 
                    "source_name": "GitHub DCSYNCMonitor", 
                    "url": "https://github.com/shellster/DCSYNCMonitor"
                }, 
                {
                    "description": "Microsoft. (n.d.). Polling for Changes Using the DirSync Control. Retrieved March 30, 2018.", 
                    "source_name": "Microsoft DirSync", 
                    "url": "https://msdn.microsoft.com/en-us/library/ms677626.aspx"
                }, 
                {
                    "description": "Lucand,G. (2018, February 18). Detect DCShadow, impossible?. Retrieved March 30, 2018.", 
                    "source_name": "ADDSecurity DCShadow Feb 2018", 
                    "url": "https://adds-security.blogspot.fr/2018/02/detecter-dcshadow-impossible.html"
                }
            ], 
            "id": "attack-pattern--564998d8-ab3e-4123-93fb-eccaa6b9714a", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "defense-evasion"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "DCShadow", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "Vincent Le Toux"
            ], 
            "x_mitre_data_sources": [
                "API monitoring", 
                "Authentication logs", 
                "Network protocol analysis", 
                "Packet capture"
            ], 
            "x_mitre_defense_bypassed": [
                "Log analysis"
            ], 
            "x_mitre_permissions_required": [
                "Administrator"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ]
        }
    ], 
    "hash": "399afcf94668b55e5ca87b3a85adf7cd58adec537450d8d9e6e70cee4900d849", 
    "name": "Mimikatz"
}