{
    "alias": "Darkmoon", 
    "analysis": {
        "_id": {
            "$oid": "5ba5547dba80ffe26b515035"
        }, 
        "description": "PE32 executable (GUI) Intel 80386, for MS Windows", 
        "file_id": "cc20bbf887b8f32fe1746dbb4d92c71f875446c7", 
        "fuzzy_hash": "3072:IZFc54EBUcdQTXzMmro1+q+cO4K80Xpt7bp6+jny1M1aA8EvkSKMX3:6K54gXeTIB1+q+YKfptRc+jh", 
        "hash": {
            "md5": "f5fbe01d11df24a54c2e110ecb693077", 
            "sha1": "cc20bbf887b8f32fe1746dbb4d92c71f875446c7", 
            "sha2": "91c8838808c7a00638972433f5b70f94964083a584138f033eb6b074c5a3afef"
        }, 
        "mime_type": "application/x-dosexec", 
        "particular_header": {
            "av_analysis": "Not_implemented", 
            "certificate": {}, 
            "child_of": "Not_implemented", 
            "cypher": "Not_implemented", 
            "date": "'0x3E8C68C4 [SUSPICIOUS]'", 
            "ep": "'0x521673 .text 0/4'", 
            "exports": {}, 
            "file_entropy": 7.462373212404118, 
            "headers": {
                "dos_header": {
                    "cblp": "'0x50'", 
                    "cp": "'0x2'", 
                    "cparhdr": "'0x4'", 
                    "crlc": "'0x0'", 
                    "cs": "'0x0'", 
                    "csum": "'0x0'", 
                    "ip": "'0x0'", 
                    "lfanew": "'0x100'", 
                    "lfarlc": "'0x40'", 
                    "magic": "'0x5a4d'", 
                    "maxalloc": "'0xffff'", 
                    "minalloc": "'0xf'", 
                    "oemid": "'0x0'", 
                    "oeminfo": "'0x0'", 
                    "ovno": "'0x1a'", 
                    "res": "'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", 
                    "res2": "'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", 
                    "sp": "'0xb8'", 
                    "ss": "'0x0'"
                }, 
                "file_header": {
                    "Characteristics": "'0x10f'", 
                    "Machine": "'0x14c'", 
                    "NumberOfSections": "'0x4'", 
                    "NumberOfSymbols": "'0x0'", 
                    "PointerToSymbolTable": "'0x0'", 
                    "SizeOfOptionalHeader": "'0xe0'", 
                    "TimeDateStamp": "'0x3e8c68c4'"
                }, 
                "nt_header": {
                    "Signature": "'0x4550'"
                }, 
                "optional_header": {
                    "AddressOfEntryPoint": "'0x1673'", 
                    "BaseOfCode": "'0x1000'", 
                    "CheckSum": "'0x0'", 
                    "DllCharacteristics": "'0x0'", 
                    "FileAlignment": "'0x200'", 
                    "ImageBase": "'0x520000'", 
                    "LoaderFlags": "'0x0'", 
                    "Magic": "'0x10b'", 
                    "MajorImageVersion": "'0x0'", 
                    "MajorLinkerVersion": "'0x3'", 
                    "MajorOperatingSystemVersion": "'0x4'", 
                    "MajorSubsystemVersion": "'0x4'", 
                    "MinorImageVersion": "'0x0'", 
                    "MinorLinkerVersion": "'0x3a'", 
                    "MinorOperatingSystemVersion": "'0x0'", 
                    "MinorSubsystemVersion": "'0x0'", 
                    "NumberOfRvaAndSizes": "'0x10'", 
                    "Reserved1": "'0x0'", 
                    "SectionAlignment": "'0x1000'", 
                    "SizeOfCode": "'0x1e400'", 
                    "SizeOfHeaders": "'0x400'", 
                    "SizeOfHeapCommit": "'0x10000'", 
                    "SizeOfHeapReserve": "'0x100000'", 
                    "SizeOfImage": "'0x24000'", 
                    "SizeOfInitializedData": "'0x0'", 
                    "SizeOfStackCommit": "'0x10000'", 
                    "SizeOfStackReserve": "'0x100000'", 
                    "SizeOfUninitializedData": "'0x0'", 
                    "Subsystem": "'0x2'"
                }
            }, 
            "imports": [
                {
                    "functions": [
                        "'getprocaddress'", 
                        "'loadlibrarya'"
                    ], 
                    "lib": "'kernel32.dll'"
                }
            ], 
            "imports_tree": "added", 
            "packer_detection": "Unknown", 
            "packer_version": "Not_implemented", 
            "res_entries": [
                {
                    "lang": "'LANG_NEUTRAL'", 
                    "name": "'RT_ICON'", 
                    "rva": "'0x221fc'", 
                    "sha1": "9841ea7a22a10821557de0db52ab56c38f5c3090", 
                    "size": "'0x2e8'", 
                    "sublang": "'SUBLANG_NEUTRAL'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_NEUTRAL'", 
                    "name": "'RT_ICON'", 
                    "rva": "'0x224e4'", 
                    "sha1": "c46e57ff5e8e7de7ae5c722d91c43d05b9ca1c02", 
                    "size": "'0x128'", 
                    "sublang": "'SUBLANG_NEUTRAL'", 
                    "type": "'GLS_BINARY_LSB_FIRST'"
                }, 
                {
                    "lang": "'LANG_NEUTRAL'", 
                    "name": "'RT_ICON'", 
                    "rva": "'0x2260c'", 
                    "sha1": "2a5aae813196dd1f39d8417bd65edc42c3c03ee9", 
                    "size": "'0xb0'", 
                    "sublang": "'SUBLANG_NEUTRAL'", 
                    "type": "'GLS_BINARY_LSB_FIRST'"
                }, 
                {
                    "lang": "'LANG_NEUTRAL'", 
                    "name": "'RT_ICON'", 
                    "rva": "'0x226bc'", 
                    "sha1": "08f88fead99175f29ebf9e4ba8c056b3128463b4", 
                    "size": "'0x130'", 
                    "sublang": "'SUBLANG_NEUTRAL'", 
                    "type": "'data'"
                }, 
                {
                    "lang": "'LANG_NEUTRAL'", 
                    "name": "'RT_ICON'", 
                    "rva": "'0x227ec'", 
                    "sha1": "c3975cb731537ccb93ed52bc723040e520a1432c", 
                    "size": "'0x568'", 
                    "sublang": "'SUBLANG_NEUTRAL'", 
                    "type": "'GLS_BINARY_LSB_FIRST'"
                }, 
                {
                    "lang": "'LANG_NEUTRAL'", 
                    "name": "'RT_ICON'", 
                    "rva": "'0x22d54'", 
                    "sha1": "fbabd6992bc805926684e5040ea3a711760a7e02", 
                    "size": "'0x8a8'", 
                    "sublang": "'SUBLANG_NEUTRAL'", 
                    "type": "'dBase IV DBT of @.DBF, block length 1024, next free block index 40, next free block 16776176, next used block 10526884'"
                }, 
                {
                    "lang": "'LANG_NEUTRAL'", 
                    "name": "'RT_GROUP_ICON'", 
                    "rva": "'0x221a2'", 
                    "sha1": "833d2b3d08b249cfc5c0febdf6218a5c41beac68", 
                    "size": "'0x5a'", 
                    "sublang": "'SUBLANG_NEUTRAL'", 
                    "type": "'MS Windows icon resource - 6 icons, 32x32, 16 colors'"
                }
            ], 
            "sections": [
                {
                    "characteristics": "0xe0000020", 
                    "entropy": 7.997703482889594, 
                    "fuzzy_hash": "3072:7ZFc54EBUcdQTXzMmro1+q+cO4K80Xpt7bp6+jny1M1aA8:1K54gXeTIB1+q+YKfptRc+j", 
                    "md5": "b65af642aa1fe843ae441b3fb2150abe", 
                    "name": "'.text\\x00\\x00\\x00'", 
                    "sha1": "276f53109036b0f5869cb1bc88bafb7b8bf025ed", 
                    "sha2": "8dacabcced0197fd4b501034cd1619dbd9097cbffedf9d2e653469a8dfe16c80", 
                    "size_raw_data": 123904, 
                    "virtual_size": 126976, 
                    "write_executable": "True"
                }, 
                {
                    "characteristics": "0xc0000060", 
                    "entropy": 0.9161300065627505, 
                    "fuzzy_hash": "3:5dXXXasiATath6lzBwkl1:WM1BRl", 
                    "md5": "335d55e7d95e93ad78a6b52f68e5cc49", 
                    "name": "'.idata\\x00\\x00'", 
                    "sha1": "aab4971beb7ed61fba2fc9584bbcc9ba551a49a1", 
                    "sha2": "6386b7f5514abcc1b81b04399aff6d5e826c02376a3456e7b3766b288db3fc76", 
                    "size_raw_data": 512, 
                    "virtual_size": 4096, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0xc0000000", 
                    "entropy": 0.21310128369748108, 
                    "fuzzy_hash": "3:JXFVJll:", 
                    "md5": "4b3d53c503e4941f4d53a0329421cb2c", 
                    "name": "'.tls\\x00\\x00\\x00\\x00'", 
                    "sha1": "14f2bb66076756eeed1ebd9888519a1e730410d1", 
                    "sha2": "68713486e539e000dc0087649e8747839781adbdb39fb6a5988e5f7d8e6dbd7c", 
                    "size_raw_data": 512, 
                    "virtual_size": 4096, 
                    "write_executable": "False"
                }, 
                {
                    "characteristics": "0x40000000", 
                    "entropy": 3.861979751418878, 
                    "fuzzy_hash": "96:cwLDo/X6ynjfzj586wOtJyg4DjjkOtJyg4DZsTrVJR:chjv2GKD31KDZs", 
                    "md5": "0ead1553dd60d55906862ff88ec9e230", 
                    "name": "'.rsrc\\x00\\x00\\x00'", 
                    "sha1": "c8fcadfa5f74c95ee677d9703c035ad30914d01e", 
                    "sha2": "4e0350b5f86879636169fe6c9f348f42efb86258bd944add674b739426c9186b", 
                    "size_raw_data": 6144, 
                    "virtual_size": 8192, 
                    "write_executable": "False"
                }
            ], 
            "strings": {
                "domains": [
                    "'2yl.eo'", 
                    "'q.ju'", 
                    "'q.xi'"
                ], 
                "raw_strings": [
                    "' 1i6'", 
                    "' 45k'", 
                    "' 9v=-'", 
                    "' :&]m'", 
                    "' :ht'", 
                    "' n]x'", 
                    "' o9w'", 
                    "' t4a'", 
                    "' tm1i4'", 
                    "'$0xj'", 
                    "'$@e)ni'", 
                    "'$@kb'", 
                    "'$]pwjl__xu'", 
                    "'$e=pjx'", 
                    "'$iuo'", 
                    "'$ni8'", 
                    "'$nwm8'", 
                    "'$oa.'", 
                    "'$vl-1'", 
                    "'%avx'", 
                    "'%c@_5'", 
                    "'%dvchf'", 
                    "'%ehy'", 
                    "'%igt'", 
                    "'%kfb'", 
                    "'%kqa'", 
                    "'%viu'", 
                    "'& c[]'", 
                    "'&hv81'", 
                    "'&ms['", 
                    "'&ojla'", 
                    "'&sd-'", 
                    "'&v@d'", 
                    "'&x:3'", 
                    "'():n='", 
                    "'(->s'", 
                    "'(1bi'", 
                    "'(8u1'", 
                    "'(]p2'", 
                    "'(_v8'", 
                    "'(c8j'", 
                    "'(d@%k'", 
                    "'(eih'", 
                    "'(f=y'", 
                    "'(mi.'", 
                    "'(sd(kf5<'", 
                    "'(tje'", 
                    "'(u&w'", 
                    "'(ulw'", 
                    "'(xkd'", 
                    "') qn'", 
                    "')&%l'", 
                    "')&q1q'", 
                    "'),5x<'", 
                    "')._q]o'", 
                    "')4:h'", 
                    "')il>'", 
                    "')mkj'", 
                    "')r4h'", 
                    "')u$ak'", 
                    "')u8b'", 
                    "')v1e'", 
                    "')vbk'", 
                    "')vrwch8'", 
                    "',/xikc'", 
                    "',1.j'", 
                    "',@1x'", 
                    "',a2g'", 
                    "',ed&'", 
                    "',f@/'", 
                    "',gjk'", 
                    "',j(f'", 
                    "',pug'", 
                    "'- 7nii'", 
                    "'-2mn'", 
                    "'-6n0.'", 
                    "'-8ay'", 
                    "'-8zw'", 
                    "'-<5d'", 
                    "'-[y_e'", 
                    "'-gcb'", 
                    "'-ht:'", 
                    "'-vxn'", 
                    "'-y)g'", 
                    "'.7,3'", 
                    "'.9h,n'", 
                    "'.e(g'", 
                    "'.f74'", 
                    "'.k]&'", 
                    "'.rw@'", 
                    "'.s_y'", 
                    "'.shl'", 
                    "'.vljw'", 
                    "'/&l<'", 
                    "'//3zb'", 
                    "'/0qw'", 
                    "'/1luwcw'", 
                    "'/@e8'", 
                    "'/[b?'", 
                    "'/cfz'", 
                    "'/csb'", 
                    "'/fu7'", 
                    "'/q-@w'", 
                    "'/r6u'", 
                    "'/u>p'", 
                    "'0%$3'", 
                    "'0&ru02r'", 
                    "'01)3'", 
                    "'07ot'", 
                    "'0avn1'", 
                    "'0i-d'", 
                    "'0m65'", 
                    "'0s?&%'", 
                    "'13,$[[f'", 
                    "'1]llvl'", 
                    "'1d<r'", 
                    "'1e3z'", 
                    "'1f_7'", 
                    "'1grf'", 
                    "'1j7['", 
                    "'1m@1'", 
                    "'1nf1'", 
                    "'1t2n'", 
                    "'1vt7$x'", 
                    "'1y9?'", 
                    "'1zrl'", 
                    "'2$(i'", 
                    "'20$t'", 
                    "'29re'", 
                    "'2@4d'", 
                    "'2[v6o:'", 
                    "'2b3k'", 
                    "'2c_9'", 
                    "'2hjk'", 
                    "'2jgu'", 
                    "'2m)x'", 
                    "'2t3p'", 
                    "'2toz'", 
                    "'2w.k'", 
                    "'2x v'", 
                    "'2yl.eo'", 
                    "'3%tngne'", 
                    "'3&sv'", 
                    "'3/]0'", 
                    "'3/s[=x'", 
                    "'3im&'", 
                    "'3p]dn'", 
                    "'3pk-'", 
                    "'3pki'", 
                    "'3td1s'", 
                    "'3vh:.'", 
                    "'4 w9oxxs5t'", 
                    "'4<pg'", 
                    "'4>:o'", 
                    "'4>go'", 
                    "'4@d9j'", 
                    "'4a]a'", 
                    "'4cg1'", 
                    "'4e?n'", 
                    "'4g&<'", 
                    "'4jhi'", 
                    "'4lz/'", 
                    "'4oacm'", 
                    "'4sdx'", 
                    "'4sv='", 
                    "'4xl&'", 
                    "'5$&w'", 
                    "'5>lb'", 
                    "'5dmf'", 
                    "'5mio@'", 
                    "'5vrv'", 
                    "'5w(jw '", 
                    "'65enxp'", 
                    "'6>r)'", 
                    "'6cuq7o'", 
                    "'6g$c'", 
                    "'6kq_'", 
                    "'6ma%'", 
                    "'6n$q)/i'", 
                    "'6nhb'", 
                    "'6ok>m'", 
                    "'6rv?'", 
                    "'6wk28'", 
                    "'6x<n'", 
                    "'76]kb'", 
                    "'7]?z'", 
                    "'7d]e'", 
                    "'7eq$'", 
                    "'7j3&'", 
                    "'7o3j/'", 
                    "'8%6e'", 
                    "'80)l'", 
                    "'84nr8'", 
                    "'89ji'", 
                    "'8?6_'", 
                    "'8[wu1'", 
                    "'8bnx'", 
                    "'8t8['", 
                    "'8y2a'", 
                    "'9<,:'", 
                    "'9]66'", 
                    "'9ayz-'", 
                    "'9f]e'", 
                    "'9g0j'", 
                    "'9qo:'", 
                    "'9wk9cp'", 
                    "'9wna'", 
                    "':-b7'", 
                    "':]lr'", 
                    "':h/eunxr'", 
                    "':jho'", 
                    "':k4('", 
                    "':o@g'", 
                    "':prd'", 
                    "':s2u'", 
                    "':t?$)'", 
                    "':xn<'", 
                    "':y[<'", 
                    "':yc6'", 
                    "'<$u_'", 
                    "'<.,c'", 
                    "'</8k'", 
                    "'<0./'", 
                    "'<1t)'", 
                    "'<:kag'", 
                    "'<adk'", 
                    "'<bk('", 
                    "'<cju'", 
                    "'<dlj'", 
                    "'<fvgq_['", 
                    "'<jz&s'", 
                    "'<n?qp'", 
                    "'<u]e,'", 
                    "'<uet'", 
                    "'<ukfc'", 
                    "'=$ma'", 
                    "'=0ei'", 
                    "'=1na'", 
                    "'==d[o]'", 
                    "'=ess'", 
                    "'=s:z'", 
                    "'=v4w'", 
                    "'=zj2'", 
                    "'>&uq'", 
                    "'>)eu'", 
                    "'>6bd'", 
                    "'>aqk'", 
                    "'>cssj'", 
                    "'>g39'", 
                    "'>m c'", 
                    "'>ogy'", 
                    "'>v.m'", 
                    "'>v79'", 
                    "'>xli'", 
                    "'?%wi'", 
                    "'?)o:'", 
                    "'?>(?'", 
                    "'?>e9=2'", 
                    "'?eb8'", 
                    "'?grn'", 
                    "'?l1['", 
                    "'?nj.'", 
                    "'?wyc7s'", 
                    "'@)svf'", 
                    "'@1me1'", 
                    "'@:/z'", 
                    "'@>&%'", 
                    "'@>eg'", 
                    "'@>ksde8z'", 
                    "'@?1:'", 
                    "'@@rc'", 
                    "'@]em'", 
                    "'@b_['", 
                    "'@c<>- '", 
                    "'@hwpqux_'", 
                    "'@j/nrb'", 
                    "'@le,'", 
                    "'@prv00m3'", 
                    "'@vwy'", 
                    "'[5pt'", 
                    "'[8q9w'", 
                    "'[99h'", 
                    "'[>fu'", 
                    "'[fr['", 
                    "'[gta'", 
                    "'[ria'", 
                    "'[tue'", 
                    "'[vn['", 
                    "'[yud'", 
                    "']&wz'", 
                    "'],u?'", 
                    "']1am'", 
                    "']3e3k'", 
                    "']6m:h'", 
                    "']8-7'", 
                    "']]>6'", 
                    "']]bkh'", 
                    "']fj('", 
                    "']ib='", 
                    "']s-q'", 
                    "']tj('", 
                    "']wcq'", 
                    "'_9as'", 
                    "'_?h9e,'", 
                    "'_[aq'", 
                    "'_s-z'", 
                    "'_sp5'", 
                    "'_t8i'", 
                    "'_u<>'", 
                    "'_uez'", 
                    "'_y11'", 
                    "'_y4hy'", 
                    "'a$&lu'", 
                    "'a$w$'", 
                    "'a,2q'", 
                    "'a--v'", 
                    "'a/.gq'", 
                    "'a/xw'", 
                    "'a0d1m'", 
                    "'a7n0'", 
                    "'a9<>'", 
                    "'a:sr'", 
                    "'abom'", 
                    "'ad=e'", 
                    "'ae)$k'", 
                    "'af54l'", 
                    "'afr5$'", 
                    "'aglbj'", 
                    "'agr2'", 
                    "'ahj?'", 
                    "'ahyi'", 
                    "'allg'", 
                    "'allv'", 
                    "'anfw'", 
                    "'aniw'", 
                    "'ar0y'", 
                    "'as@6'", 
                    "'avu>q'", 
                    "'ayzt('", 
                    "'az8:'", 
                    "'b$uby'", 
                    "'b,<z@ma'", 
                    "'b-a@'", 
                    "'b-e-r='", 
                    "'b0[opb'", 
                    "'b6ip'", 
                    "'b9g<'", 
                    "'b=zas'", 
                    "'b?=$'", 
                    "'b?ox'", 
                    "'b@op'", 
                    "'b[?vi'", 
                    "'baoi'", 
                    "'bcdc'", 
                    "'bgk:j'", 
                    "'bit8o'", 
                    "'bkbj'", 
                    "'bkln$'", 
                    "'bmnd,'", 
                    "'bo(p'", 
                    "'bplf'", 
                    "'bqbe'", 
                    "'broz'", 
                    "'bu&('", 
                    "'buw$'", 
                    "'by yd'", 
                    "'bypitd'", 
                    "'c$%k'", 
                    "'c1w,'", 
                    "'c6smbq'", 
                    "'c93='", 
                    "'c@tbt'", 
                    "'c_/hg'", 
                    "'cd/,'", 
                    "'cd1u'", 
                    "'ce4g7'", 
                    "'cfupk'", 
                    "'cfuw'", 
                    "'ch>d'", 
                    "'cp/v'", 
                    "'cpa8'", 
                    "'cpdfy'", 
                    "'cpr06&s'", 
                    "'cpsn'", 
                    "'cpt '", 
                    "'crw&'", 
                    "'curo4g'", 
                    "'czc8c6'", 
                    "'czd_2'", 
                    "'czs7'", 
                    "'d,9)'", 
                    "'d/)a'", 
                    "'d2kz'", 
                    "'d5d&0'", 
                    "'d>oen'", 
                    "'d@b2w'", 
                    "'di>.'", 
                    "'dia/'", 
                    "'dilc'", 
                    "'dm1b'", 
                    "'dn&n'", 
                    "'doec'", 
                    "'dprc'", 
                    "'drs-'", 
                    "'dshwf-'", 
                    "'duiu'", 
                    "'duu&'", 
                    "'dvd1'", 
                    "'dymb'", 
                    "'e3mg'", 
                    "'e=rw'", 
                    "'e@w4f'", 
                    "'e]o $%'", 
                    "'e_ht'", 
                    "'eco='", 
                    "'edgr'", 
                    "'eg3b'", 
                    "'emvk'", 
                    "'emvo)'", 
                    "'eoqo'", 
                    "'erz2b'", 
                    "'ettf='", 
                    "'euey'", 
                    "'eufa'", 
                    "'evvk2'", 
                    "'ew_r'", 
                    "'f pu'", 
                    "'f(:,'", 
                    "'f(bvf'", 
                    "'f1=q'", 
                    "'f1k?i'", 
                    "'f7wj'", 
                    "'f9@-'", 
                    "'f=ot'", 
                    "'f@xp'", 
                    "'fa5)$'", 
                    "'fb)w6'", 
                    "'fcg8'", 
                    "'fjgo'", 
                    "'fjq '", 
                    "'fm&@'", 
                    "'fmcco'", 
                    "'ftdv'", 
                    "'ftn7h'", 
                    "'fwz['", 
                    "'fz9q'", 
                    "'fz[-'", 
                    "'fzqr'", 
                    "'g2nw'", 
                    "'g9>9'", 
                    "'gapq'", 
                    "'gh2,'", 
                    "'gjziz'", 
                    "'gkehm'", 
                    "'grve'", 
                    "'gu$w5'", 
                    "'gugh'", 
                    "'guo$'", 
                    "'guqa'", 
                    "'gygb'", 
                    "'gza1'", 
                    "'h6b:'", 
                    "'h78w)'", 
                    "'h8-0'", 
                    "'h:hz'", 
                    "'h?$ym'", 
                    "'hai6'", 
                    "'hg5v'", 
                    "'hj8,a'", 
                    "'hjis'", 
                    "'hjmr'", 
                    "'hoat@'", 
                    "'hp(@c'", 
                    "'hrac'", 
                    "'hsjdr'", 
                    "'hw(,'", 
                    "'hwaur'", 
                    "'i%j]'", 
                    "'i(_e'", 
                    "'i<(c'", 
                    "'i?.x'", 
                    "'i[uy'", 
                    "'ia&9'", 
                    "'ia6_'", 
                    "'ii7s'", 
                    "'iiwi&'", 
                    "'ijmu'", 
                    "'il:e'", 
                    "'ilr['", 
                    "'irh56i'", 
                    "'is?0'", 
                    "'ite%'", 
                    "'iv,1'", 
                    "'iwqu'", 
                    "'iwy('", 
                    "'ixa8'", 
                    "'ixoo'", 
                    "'ixup'", 
                    "'ixzb'", 
                    "'iz%d'", 
                    "'j it-x'", 
                    "'j vz['", 
                    "'j,g5'", 
                    "'j,x2'", 
                    "'j/=m'", 
                    "'j0vv'", 
                    "'j=te'", 
                    "'j_pi'", 
                    "'janm'", 
                    "'jbi='", 
                    "'jg,k'", 
                    "'jhri'", 
                    "'jj1e0'", 
                    "'jjlh]t'", 
                    "'jlod'", 
                    "'jm-hf'", 
                    "'jr:a'", 
                    "'jrwx'", 
                    "'jttqa ,'", 
                    "'jvqs'", 
                    "'jx2j'", 
                    "'jywc('", 
                    "'k3j5h'", 
                    "'k5j%'", 
                    "'k:<5'", 
                    "'k@%a'", 
                    "'k]vnp'", 
                    "'ka -'", 
                    "'kaoev'", 
                    "'kb8?'", 
                    "'kf,ci'", 
                    "'ki%r'", 
                    "'kl)y'", 
                    "'kmka'", 
                    "'kovj'", 
                    "'kui='", 
                    "'l&rf'", 
                    "'l(kl'", 
                    "'l-i0n'", 
                    "'l0/c'", 
                    "'l0<shcd'", 
                    "'l0g:'", 
                    "'l4go< '", 
                    "'l>>f'", 
                    "'l?4au'", 
                    "'l@kx'", 
                    "'l[ju'", 
                    "'l]g9f9'", 
                    "'la(='", 
                    "'laj-'", 
                    "'lb7y?'", 
                    "'lbmgzblvyv& '", 
                    "'lbvl'", 
                    "'lce?'", 
                    "'ldk<'", 
                    "'ldpa'", 
                    "'lf1j>'", 
                    "'ljzn'", 
                    "'lk<x'", 
                    "'lkyk'", 
                    "'lq-l'", 
                    "'lr_g'", 
                    "'lsgp'", 
                    "'lsul'", 
                    "'lu/s'", 
                    "'lwpns/u'", 
                    "'lx.vs.'", 
                    "'lxkbr'", 
                    "'lzmp'", 
                    "'m(qr'", 
                    "'m-(vw'", 
                    "'m1yk'", 
                    "'m2o0'", 
                    "'m5rk'", 
                    "'m7t8'", 
                    "'m>0u'", 
                    "'m]or'", 
                    "'masiy'", 
                    "'mc-i'", 
                    "'mc_o@ '", 
                    "'mgr@'", 
                    "'ml6k'", 
                    "'mlwm'", 
                    "'mnbg'", 
                    "'mnwk'", 
                    "'mp.u'", 
                    "'mub.'", 
                    "'mw3u'", 
                    "'mw[sh'", 
                    "'my(('", 
                    "'mz6ravwt'", 
                    "'n%.9e'", 
                    "'n&jc'", 
                    "'n,afr0'", 
                    "'n03j'", 
                    "'n1p(f'", 
                    "'n2e '", 
                    "'n2wgy'", 
                    "'n?d '", 
                    "'nc?4'", 
                    "'ncid'", 
                    "'ncubk'", 
                    "'ndsi'", 
                    "'ng1=o('", 
                    "'ngerh'", 
                    "'njd$%'", 
                    "'nm9,'", 
                    "'no77'", 
                    "'nse9,'", 
                    "'nso-'", 
                    "'nu%g'", 
                    "'nvux9'", 
                    "'nwz_y'", 
                    "'nwzz'", 
                    "'ny:]@[3'", 
                    "'nzecw'", 
                    "'o/[,'", 
                    "'o4vk'", 
                    "'o7.r'", 
                    "'o:,.'", 
                    "'o:lu'", 
                    "'o<@b'", 
                    "'o>1q.'", 
                    "'o@:w'", 
                    "'o_hm'", 
                    "'ob4b'", 
                    "'obd_sm'", 
                    "'oc_i'", 
                    "'odml'", 
                    "'oe%8<'", 
                    "'oe8b'", 
                    "'oe?_'", 
                    "'ofnq'", 
                    "'ogu&'", 
                    "'oi5y'", 
                    "'om$q?'", 
                    "'on3o'", 
                    "'oqza'", 
                    "'orfozu'", 
                    "'os:u'", 
                    "'os_('", 
                    "'oso]'", 
                    "'ot:<'", 
                    "'p&t_'", 
                    "'p,z)x'", 
                    "'p0h7'", 
                    "'p3=%z/d'", 
                    "'p7v,'", 
                    "'p:yz'", 
                    "'p[)d'", 
                    "'p_th'", 
                    "'pa$3'", 
                    "'payo'", 
                    "'pbpr'", 
                    "'peej'", 
                    "'pf]t'", 
                    "'pgq:'", 
                    "'pgxjd&'", 
                    "'ph,y'", 
                    "'pheq'", 
                    "'pm-o?'", 
                    "'pn_ml'", 
                    "'pp[4'", 
                    "'pqrs'", 
                    "'puvwuv'", 
                    "'pwy]x_'", 
                    "'px-veg@'", 
                    "'pxh=]k'", 
                    "'py/b'", 
                    "'pysk'", 
                    "'q(5>'", 
                    "'q)imv'", 
                    "'q,aj'", 
                    "'q-rmzz'", 
                    "'q.ju'", 
                    "'q.xi'", 
                    "'q0eo'", 
                    "'q2ki'", 
                    "'q7e,/'", 
                    "'q<)hf4i'", 
                    "'q<nd'", 
                    "'q>o_'", 
                    "'qbalape'", 
                    "'qd%pp'", 
                    "'qe[>'", 
                    "'qgyl'", 
                    "'qivfa'", 
                    "'ql0k'", 
                    "'qm?g'", 
                    "'qm_]=o'", 
                    "'qov0y@'", 
                    "'qtjwy'", 
                    "'qxkz'", 
                    "'qy,z'", 
                    "'qyq[r'", 
                    "'qzv>$'", 
                    "'r&k6xp'", 
                    "'r,dqm'", 
                    "'r/b(w'", 
                    "'r1qm'", 
                    "'r3r.'", 
                    "'r8&g'", 
                    "'r829'", 
                    "'r[%z3f'", 
                    "'r]x)'", 
                    "'rcn=vw.'", 
                    "'re<h:'", 
                    "'reiz'", 
                    "'rfd@'", 
                    "'rghb'", 
                    "'rgt:'", 
                    "'rjg_u'", 
                    "'rlesv'", 
                    "'rm)e)'", 
                    "'rmh=h'", 
                    "'rqz2'", 
                    "'rt7<'", 
                    "'ru<%'", 
                    "'rvo]w'", 
                    "'rxr]'", 
                    "'s 6u1s'", 
                    "'s&a0'", 
                    "'s4,w'", 
                    "'s5%t'", 
                    "'s?tw>r'", 
                    "'se3-j'", 
                    "'sekg'", 
                    "'sgy9f'", 
                    "'skl[@'", 
                    "'sn>r'", 
                    "'soxj'", 
                    "'ss$a'", 
                    "'ssskm'", 
                    "'ssxy='", 
                    "'suv6e'", 
                    "'sx(n&'", 
                    "'syb0'", 
                    "'t&zv'", 
                    "'t(?<'", 
                    "'t)l/'", 
                    "'t,zx'", 
                    "'t.,j'", 
                    "'t/2k'", 
                    "'t/>r'", 
                    "'t]/y'", 
                    "'tc5zw'", 
                    "'tgak'", 
                    "'tgxigh'", 
                    "'ti0i$'", 
                    "'tj%j7'", 
                    "'tkhqq'", 
                    "'tmnri'", 
                    "'tnuzk'", 
                    "'tobh'", 
                    "'ts2r'", 
                    "'tuyv'", 
                    "'tvvf'", 
                    "'twfx'", 
                    "'tx[tm'", 
                    "'ty@?:'", 
                    "'tzese'", 
                    "'tzwp'", 
                    "'u  ce'", 
                    "'u7$qap'", 
                    "'u=s,'", 
                    "'u>o<'", 
                    "'u?:)'", 
                    "'u[oa9r'", 
                    "'u[osy$'", 
                    "'u]lc'", 
                    "'uedv'", 
                    "'uf=anw'", 
                    "'uirvs'", 
                    "'uj5r'", 
                    "'ujao'", 
                    "'ujjz'", 
                    "'ujlewf'", 
                    "'ukg]'", 
                    "'ulwp'", 
                    "'un&2'", 
                    "'ur?$'", 
                    "'urf9'", 
                    "'us6fs<'", 
                    "'uud)'", 
                    "'uv.q5'", 
                    "'uy))'", 
                    "'v fux'", 
                    "'v mn'", 
                    "'v%4 '", 
                    "'v)u:yb3'", 
                    "'v=b:'", 
                    "'v>t@'", 
                    "'v[tx'", 
                    "'v]tg'", 
                    "'v_zd'", 
                    "'vc%r'", 
                    "'vcnl6'", 
                    "'vfah'", 
                    "'vgo:'", 
                    "'vhr<d'", 
                    "'vk:a'", 
                    "'vvn2'", 
                    "'vx3?l'", 
                    "'vxvl'", 
                    "'vy?b'", 
                    "'vylc'", 
                    "'vyx9'", 
                    "'w1xck'", 
                    "'w9)c'", 
                    "'w_8(x'", 
                    "'w_tk'", 
                    "'weqa'", 
                    "'wjn2s'", 
                    "'wl3l'", 
                    "'wl:?z'", 
                    "'wpctn5p'", 
                    "'wpdv<'", 
                    "'wtks'", 
                    "'wvwm'", 
                    "'wwpp'", 
                    "'wxm['", 
                    "'wz5/'", 
                    "'x(zu'", 
                    "'x):1'", 
                    "'x1p&4'", 
                    "'x2ua'", 
                    "'x5-_<'", 
                    "'x69f'", 
                    "'x:lc'", 
                    "'x>2g<<'", 
                    "'x[h7'", 
                    "'xd)o'", 
                    "'xdsq'", 
                    "'xez='", 
                    "'xhb:'", 
                    "'xi)@'", 
                    "'xjmb'", 
                    "'xk2_'", 
                    "'xnj:'", 
                    "'xns5'", 
                    "'xtxn'", 
                    "'xvhd'", 
                    "'xw)o'", 
                    "'xw.&'", 
                    "'xzns'", 
                    "'y$h1kv'", 
                    "'y-zm8'", 
                    "'y5:htz'", 
                    "'y8zem'", 
                    "'y9ub'", 
                    "'y?v]'", 
                    "'y[vh'", 
                    "'ybtao'", 
                    "'yg%j'", 
                    "'ygk6'", 
                    "'yibn'", 
                    "'yk:vs'", 
                    "'ylgr'", 
                    "'ynsu'", 
                    "'ypv:b'", 
                    "'ys,:'", 
                    "'ysss'", 
                    "'ytlm'", 
                    "'yu6y'", 
                    "'ywd%'", 
                    "'yy20'", 
                    "'z s4e@'", 
                    "'z$cjru'", 
                    "'z$ew.'", 
                    "'z$z['", 
                    "'z/a]h'", 
                    "'z2z-'", 
                    "'z3>s'", 
                    "'z4zk'", 
                    "'z5s4sf'", 
                    "'z=@s'", 
                    "'z[dr'", 
                    "'zb-h<xbeh'", 
                    "'zbfy'", 
                    "'ze6a'", 
                    "'zfik'", 
                    "'zfq8l'", 
                    "'zi@i'", 
                    "'zphx'", 
                    "'zscf'", 
                    "'zvnv'", 
                    "'zy@c'", 
                    "'zymah'", 
                    "'zzm '"
                ]
            }, 
            "version": {}
        }, 
        "size": 157065
    }, 
    "attack-pattern": [
        {
            "created": "2017-05-31T21:30:49.546Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Command-line interfaces provide a way of interacting with computer systems and is a common feature across many types of operating system platforms. (Citation: Wikipedia Command-Line Interface) One example command-line interface on Windows systems is cmd, which can be used to perform a number of tasks including execution of other software. Command-line interfaces can be interacted with locally or remotely via a remote desktop application, reverse shell session, etc. Commands that are executed run with the current permission level of the command-line interface process unless the command includes process invocation that changes permissions context for that execution (e.g. Scheduled Task).\n\nAdversaries may use command-line interfaces to interact with systems and execute other software during the course of an operation.\n\nDetection: Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.\n\nPlatforms: Linux, Windows, macOS\n\nData Sources: Process command-line parameters, Process monitoring\n\nPermissions Required: Administrator, SYSTEM, User\n\nRemote Support: No", 
            "external_references": [
                {
                    "external_id": "T1059", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1059"
                }, 
                {
                    "description": "Wikipedia. (2016, June 26). Command-line interface. Retrieved June 27, 2016.", 
                    "source_name": "Wikipedia Command-Line Interface", 
                    "url": "https://en.wikipedia.org/wiki/Command-line%20interface"
                }
            ], 
            "id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "execution"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Command-Line Interface", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Process command-line parameters", 
                "Process monitoring"
            ], 
            "x_mitre_permissions_required": [
                "Administrator", 
                "SYSTEM", 
                "User"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "Windows", 
                "macOS"
            ], 
            "x_mitre_remote_support": false
        }, 
        {
            "created": "2017-05-31T21:30:49.988Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. (Citation: Microsoft Run Key) The program will be executed under the context of the user and will have the account's associated permissions level.\n\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.\n\nDetection: Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders. (Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nPlatforms: Windows\n\nData Sources: Windows Registry, File monitoring\n\nPermissions Required: User, Administrator", 
            "external_references": [
                {
                    "external_id": "T1060", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1060"
                }, 
                {
                    "description": "Microsoft. (n.d.). Run and RunOnce Registry Keys. Retrieved November 12, 2014.", 
                    "source_name": "Microsoft Run Key", 
                    "url": "http://msdn.microsoft.com/en-us/library/aa376977"
                }, 
                {
                    "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.", 
                    "source_name": "TechNet Autoruns", 
                    "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902"
                }
            ], 
            "id": "attack-pattern--9422fc14-1c43-410d-ab0f-a709b76c72dc", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "persistence"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Registry Run Keys / Start Folder", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Windows Registry", 
                "File monitoring"
            ], 
            "x_mitre_permissions_required": [
                "User", 
                "Administrator"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:32.662Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses.\n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as Javascript.\n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also obfuscate commands executed from payloads or directly via a Command-Line Interface. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and whitelisting mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017) (Citation: PaloAlto EncodedCommand March 2017)\n\nAnother example of obfuscation is through the use of steganography, a technique of hiding messages or code in images, audio tracks, video clips, or text files. One of the first known and reported adversaries that used steganography activity surrounding Invoke-PSImage. The Duqu malware encrypted the gathered information from a victim's system and hid it into an image followed by exfiltrating the image to a C2 server. (Citation: Wikipedia Duqu) By the end of 2017, an adversary group used Invoke-PSImage to hide PowerShell commands in an image file (png) and execute the code on a victim's system. In this particular case the PowerShell code downloaded another obfuscated script to gather intelligence from the victim's machine and communicate it back to the adversary. (Citation: McAfee Malicious Doc Targets Pyeongchang Olympics)\n\nDetection: Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).\n\nFlag and analyze commands containing indicators of obfuscation and known suspicious syntax such as uninterpreted escape characters like '''^''' and '''\"'''. Windows' Sysmon and Event ID 4688 displays command-line arguments for processes. Deobfuscation tools can be used to detect these indicators in files/payloads. (Citation: GitHub Revoke-Obfuscation) (Citation: FireEye Revoke-Obfuscation July 2017) (Citation: GitHub Office-Crackros Aug 2016)\n\nObfuscation used in payloads for Initial Access can be detected at the network. Use network intrusion detection systems and email gateway filtering to identify compressed and encrypted attachments and scripts. Some email attachment detonation systems can open compressed and encrypted attachments. Payloads delivered over an encrypted connection from a website require encrypted network traffic inspection.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Network protocol analysis, Process use of network, Binary file metadata, File monitoring, Malware reverse engineering, Process command-line parameters, Environment variable, Process Monitoring, Windows event logs, Network intrusion detection system, Email gateway, SSL/TLS inspection\n\nDefense Bypassed: Host forensic analysis, Signature-based detection, Host intrusion prevention systems, Application whitelisting, Process whitelisting, Log analysis, Whitelisting by file name or path\n\nContributors: Red Canary, Christiaan Beek, @ChristiaanBeek", 
            "external_references": [
                {
                    "external_id": "T1027", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1027"
                }, 
                {
                    "description": "Adair, S.. (2016, November 9). PowerDuke: Widespread Post-Election Spear Phishing Campaigns Targeting Think Tanks and NGOs. Retrieved January 11, 2017.", 
                    "source_name": "Volexity PowerDuke November 2016", 
                    "url": "https://www.volexity.com/blog/2016/11/09/powerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos/"
                }, 
                {
                    "description": "Pierre-Marc Bureau. (2013, April 26). Linux/Cdorked.A: New Apache backdoor being used in the wild to serve Blackhole. Retrieved September 10, 2017.", 
                    "source_name": "Linux/Cdorked.A We Live Security Analysis", 
                    "url": "https://www.welivesecurity.com/2013/04/26/linuxcdorked-new-apache-backdoor-in-the-wild-serves-blackhole/"
                }, 
                {
                    "description": "Tedesco, B. (2016, September 23). Security Alert Summary. Retrieved February 12, 2018.", 
                    "source_name": "Carbon Black Obfuscation Sept 2016", 
                    "url": "https://www.carbonblack.com/2016/09/23/security-advisory-variants-well-known-adware-families-discovered-include-sophisticated-obfuscation-techniques-previously-associated-nation-state-attacks/"
                }, 
                {
                    "description": "Bohannon, D. & Carr N. (2017, June 30). Obfuscation in the Wild: Targeted Attackers Lead the Way in Evasion Techniques. Retrieved February 12, 2018.", 
                    "source_name": "FireEye Obfuscation June 2017", 
                    "url": "https://www.fireeye.com/blog/threat-research/2017/06/obfuscation-in-the-wild.html"
                }, 
                {
                    "description": "Bohannon, D. & Holmes, L. (2017, July 27). Revoke-Obfuscation: PowerShell Obfuscation Detection Using Science. Retrieved February 12, 2018.", 
                    "source_name": "FireEye Revoke-Obfuscation July 2017", 
                    "url": "https://www.fireeye.com/content/dam/fireeye-www/blog/pdfs/revoke-obfuscation-report.pdf"
                }, 
                {
                    "description": "White, J. (2017, March 10). Pulling Back the Curtains on EncodedCommand PowerShell Attacks. Retrieved February 12, 2018.", 
                    "source_name": "PaloAlto EncodedCommand March 2017", 
                    "url": "https://researchcenter.paloaltonetworks.com/2017/03/unit42-pulling-back-the-curtains-on-encodedcommand-powershell-attacks/"
                }, 
                {
                    "description": "Wikipedia. (2017, December 29). Duqu. Retrieved April 10, 2018.", 
                    "source_name": "Wikipedia Duqu", 
                    "url": "https://en.wikipedia.org/wiki/Duqu"
                }, 
                {
                    "description": "Saavedra-Morales, J., Sherstobitoff, R. (2018, January 6). Malicious Document Targets Pyeongchang Olympics. Retrieved April 10, 2018.", 
                    "source_name": "McAfee Malicious Doc Targets Pyeongchang Olympics", 
                    "url": "https://securingtomorrow.mcafee.com/mcafee-labs/malicious-document-targets-pyeongchang-olympics/"
                }, 
                {
                    "description": "Bohannon, D. (2017, July 27). Revoke-Obfuscation. Retrieved February 12, 2018.", 
                    "source_name": "GitHub Revoke-Obfuscation", 
                    "url": "https://github.com/danielbohannon/Revoke-Obfuscation"
                }, 
                {
                    "description": "Carr, N. (2016, August 14). OfficeCrackros. Retrieved February 12, 2018.", 
                    "source_name": "GitHub Office-Crackros Aug 2016", 
                    "url": "https://github.com/itsreallynick/office-crackros"
                }
            ], 
            "id": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "defense-evasion"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Obfuscated Files or Information", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "Red Canary", 
                "Christiaan Beek, @ChristiaanBeek"
            ], 
            "x_mitre_data_sources": [
                "Network protocol analysis", 
                "Process use of network", 
                "Binary file metadata", 
                "File monitoring", 
                "Malware reverse engineering", 
                "Process command-line parameters", 
                "Environment variable", 
                "Process Monitoring", 
                "Windows event logs", 
                "Network intrusion detection system", 
                "Email gateway", 
                "SSL/TLS inspection"
            ], 
            "x_mitre_defense_bypassed": [
                "Host forensic analysis", 
                "Signature-based detection", 
                "Host intrusion prevention systems", 
                "Application whitelisting", 
                "Process whitelisting", 
                "Log analysis", 
                "Whitelisting by file name or path"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:24.512Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used or give context to information collected by a keylogger.\n\nIn Mac, this can be done natively with a small AppleScript script.\n\nDetection: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nPlatforms: macOS, Windows\n\nData Sources: API monitoring, Process command-line parameters, Process monitoring\n\nPermissions Required: User", 
            "external_references": [
                {
                    "external_id": "T1010", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1010"
                }
            ], 
            "id": "attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "discovery"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Application Window Discovery", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "API monitoring", 
                "Process command-line parameters", 
                "Process monitoring"
            ], 
            "x_mitre_permissions_required": [
                "User"
            ], 
            "x_mitre_platforms": [
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:58.938Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Collected data is staged in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as Data Compressed or Data Encrypted.\n\nInteractive command shells may be used, and common functionality within cmd and bash may be used to copy data into a staging location.\n\nDetection: Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: File monitoring, Process monitoring, Process command-line parameters", 
            "external_references": [
                {
                    "external_id": "T1074", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1074"
                }
            ], 
            "id": "attack-pattern--7dd95ff6-712e-4056-9626-312ea4ab4c5e", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "collection"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Data Staged", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "File monitoring", 
                "Process monitoring", 
                "Process command-line parameters"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:23.587Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in Persistence and Execution.\n\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility Reg may be used for local or remote Registry modification. (Citation: Microsoft Reg) Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API (see examples).\n\nThe Registry of a remote system may be modified to aid in execution of files as part of Lateral Movement. It requires the remote Registry service to be running on the target system. (Citation: Microsoft Remote) Often Valid Accounts are required, along with access to the remote system's Windows Admin Shares for RPC communication.\n\nDetection: Modifications to the Registry are normal and occur throughout typical use of the Windows operating system. Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.\n\nMonitor processes and command-line arguments for actions that could be taken to change or delete information in the Registry. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell, which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nPlatforms: Windows\n\nData Sources: Windows Registry, File monitoring, Process monitoring, Process command-line parameters\n\nDefense Bypassed: Host forensic analysis\n\nPermissions Required: User, Administrator, SYSTEM\n\nContributors: Bartosz Jerzman, Travis Smith, Tripwire", 
            "external_references": [
                {
                    "external_id": "T1112", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1112"
                }, 
                {
                    "description": "Microsoft. (2012, April 17). Reg. Retrieved May 1, 2015.", 
                    "source_name": "Microsoft Reg", 
                    "url": "https://technet.microsoft.com/en-us/library/cc732643.aspx"
                }, 
                {
                    "description": "Microsoft. (n.d.). Enable the Remote Registry Service. Retrieved May 1, 2015.", 
                    "source_name": "Microsoft Remote", 
                    "url": "https://technet.microsoft.com/en-us/library/cc754820.aspx"
                }
            ], 
            "id": "attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "defense-evasion"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Modify Registry", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "Bartosz Jerzman", 
                "Travis Smith, Tripwire"
            ], 
            "x_mitre_data_sources": [
                "Windows Registry", 
                "File monitoring", 
                "Process monitoring", 
                "Process command-line parameters"
            ], 
            "x_mitre_defense_bypassed": [
                "Host forensic analysis"
            ], 
            "x_mitre_permissions_required": [
                "User", 
                "Administrator", 
                "SYSTEM"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:31:16.408Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Files may be copied from one system to another to stage adversary tools or other files over the course of an operation. Files may be copied from an external adversary-controlled system through the Command and Control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.\n\nAdversaries may also copy files laterally between internal victim systems to support Lateral Movement with remote Execution using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with Windows Admin Shares or Remote Desktop Protocol.\n\nDetection: Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: File monitoring, Packet capture, Process use of network, Netflow/Enclave netflow, Network protocol analysis, Process monitoring\n\nPermissions Required: User\n\nRequires Network: Yes", 
            "external_references": [
                {
                    "external_id": "T1105", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1105"
                }, 
                {
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", 
                    "source_name": "University of Birmingham C2", 
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ], 
            "id": "attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "command-and-control"
                }, 
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "lateral-movement"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Remote File Copy", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "File monitoring", 
                "Packet capture", 
                "Process use of network", 
                "Netflow/Enclave netflow", 
                "Network protocol analysis", 
                "Process monitoring"
            ], 
            "x_mitre_network_requirements": true, 
            "x_mitre_permissions_required": [
                "User"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:47.843Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process.\n\n===Windows===\n\nThere are multiple approaches to injecting code into a live process. Windows implementations include: (Citation: Engame Process Injection July 2017)\n* '''Dynamic-link library (DLL) injection''' involves writing the path to a malicious DLL inside a process then invoking execution by creating a remote thread.\n* '''Portable executable injection''' involves writing malicious code directly into the process (without a file on disk) then invoking execution with either additional code or by creating a remote thread. The displacement of the injected code introduces the additional requirement for functionality to remap memory references. Variations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue. (Citation: Endgame HuntingNMemory June 2017)\n* '''Thread execution hijacking''' involves injecting malicious code or the path to a DLL into a thread of a process. Similar to Process Hollowing, the thread must first be suspended.\n* '''Asynchronous Procedure Call''' (APC) injection involves attaching malicious code to the APC Queue (Citation: Microsoft APC) of a process's thread. Queued APC functions are executed when the thread enters an alterable state. AtomBombing  (Citation: ENSIL AtomBombing Oct 2016) is a variation that utilizes APCs to invoke malicious code previously written to the global atom table. (Citation: Microsoft Atom Table)\n* '''Thread Local Storage''' (TLS) callback injection involves manipulating pointers inside a portable executable (PE) to redirect a process to malicious code before reaching the code's legitimate entry point. (Citation: FireEye TLS Nov 2017)\n\n===Mac and Linux===\n\nImplementations for Linux and OS X/macOS systems include: (Citation: Datawire Code Injection) (Citation: Uninformed Needle)\n*'''LD_PRELOAD, LD_LIBRARY_PATH''' (Linux), '''DYLD_INSERT_LIBRARIES''' (Mac OS X) environment variables, or the dlfcn application programming interface (API) can be used to dynamically load a library (shared object) in a process which can be used to intercept API calls from the running process. (Citation: Phrack halfdead 1997)\n*'''Ptrace system calls''' can be used to attach to a running process and modify it in runtime. (Citation: Uninformed Needle)\n*'''/proc/[pid]/mem''' provides access to the memory of the process and can be used to read/write arbitrary data to it. This technique is very rare due to its complexity. (Citation: Uninformed Needle)\n*'''VDSO hijacking''' performs runtime injection on ELF binaries by manipulating code stubs mapped in from the linux-vdso.so shared object. (Citation: VDSO hijack 2009)\n\nMalware commonly utilizes process injection to access system resources through which Persistence and other environment modifications can be made. More sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel.\n\nDetection: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. API calls such as CreateRemoteThread, SuspendThread/SetThreadContext/ResumeThread, QueueUserAPC, and those that can be used to modify memory within another process, such as WriteProcessMemory, may be used for this technique. (Citation: Engame Process Injection July 2017)\n\nMonitoring for Linux specific calls such as the ptrace system call, the use of LD_PRELOAD environment variable, or dlfcn dynamic linking API calls, should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.  (Citation: ArtOfMemoryForensics)  (Citation: GNU Acct)  (Citation: RHEL auditd)  (Citation: Chokepoint preload rootkits)\n\nMonitor for named pipe creation and connection events (Event IDs 17 and 18) for possible indicators of infected processes with external modules. (Citation: Microsoft Sysmon v6 May 2017)\n\nMonitor processes and command-line arguments for actions that could be done before or after code injection has occurred and correlate the information with related event information. Code injection may also be performed using PowerShell with tools such as PowerSploit, (Citation: Powersploit) so additional PowerShell monitoring may be required to cover known implementations of this behavior.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: API monitoring, Windows Registry, File monitoring, DLL monitoring, Named Pipes, Process Monitoring\n\nEffective Permissions: User, Administrator, SYSTEM, root\n\nDefense Bypassed: Process whitelisting, Anti-virus\n\nPermissions Required: User, Administrator, SYSTEM, root\n\nContributors: Anastasios Pingios", 
            "external_references": [
                {
                    "external_id": "T1055", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1055"
                }, 
                {
                    "description": "PowerSploit. (n.d.).  Retrieved December 4, 2014.", 
                    "source_name": "Powersploit", 
                    "url": "https://github.com/mattifestation/PowerSploit"
                }, 
                {
                    "description": "Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.", 
                    "source_name": "Engame Process Injection July 2017", 
                    "url": "https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process"
                }, 
                {
                    "description": "Desimone, J. (2017, June 13). Hunting in Memory. Retrieved December 7, 2017.", 
                    "source_name": "Endgame HuntingNMemory June 2017", 
                    "url": "https://www.endgame.com/blog/technical-blog/hunting-memory"
                }, 
                {
                    "description": "Microsoft. (n.d.). Asynchronous Procedure Calls. Retrieved December 8, 2017.", 
                    "source_name": "Microsoft APC", 
                    "url": "https://msdn.microsoft.com/library/windows/desktop/ms681951.aspx"
                }, 
                {
                    "description": "Liberman, T. (2016, October 27). ATOMBOMBING: BRAND NEW CODE INJECTION FOR WINDOWS. Retrieved December 8, 2017.", 
                    "source_name": "ENSIL AtomBombing Oct 2016", 
                    "url": "https://blog.ensilo.com/atombombing-brand-new-code-injection-for-windows"
                }, 
                {
                    "description": "Microsoft. (n.d.). About Atom Tables. Retrieved December 8, 2017.", 
                    "source_name": "Microsoft Atom Table", 
                    "url": "https://msdn.microsoft.com/library/windows/desktop/ms649053.aspx"
                }, 
                {
                    "description": "Vaish, A. & Nemes, S. (2017, November 28). Newly Observed Ursnif Variant Employs Malicious TLS Callback Technique to Achieve Process Injection. Retrieved December 18, 2017.", 
                    "source_name": "FireEye TLS Nov 2017", 
                    "url": "https://www.fireeye.com/blog/threat-research/2017/11/ursnif-variant-malicious-tls-callback-technique.html"
                }, 
                {
                    "description": "Turner-Trauring, I. (2017, April 18). \u201cThis will only hurt for a moment\u201d: code injection on Linux and macOS with LD_PRELOAD. Retrieved December 20, 2017.", 
                    "source_name": "Datawire Code Injection", 
                    "url": "https://www.datawire.io/code-injection-on-linux-and-macos/"
                }, 
                {
                    "description": "skape. (2003, January 19). Linux x86 run-time process manipulation. Retrieved December 20, 2017.", 
                    "source_name": "Uninformed Needle", 
                    "url": "http://hick.org/code/skape/papers/needle.txt"
                }, 
                {
                    "description": "halflife. (1997, September 1). Shared Library Redirection Techniques. Retrieved December 20, 2017.", 
                    "source_name": "Phrack halfdead 1997", 
                    "url": "http://phrack.org/issues/51/8.html"
                }, 
                {
                    "description": "O'Neill, R. (2009, May). Modern Day ELF Runtime infection via GOT poisoning. Retrieved December 20, 2017.", 
                    "source_name": "VDSO hijack 2009", 
                    "url": "http://vxer.org/lib/vrn00.html"
                }, 
                {
                    "description": "Ligh, M.H. et al.. (2014, July). The Art of Memory Forensics: Detecting Malware and Threats in Windows, Linux, and Mac Memory. Retrieved December 20, 2017.", 
                    "source_name": "ArtOfMemoryForensics"
                }, 
                {
                    "description": "GNU. (2010, February 5). The GNU Accounting Utilities. Retrieved December 20, 2017.", 
                    "source_name": "GNU Acct", 
                    "url": "https://www.gnu.org/software/acct/"
                }, 
                {
                    "description": "Jahoda, M. et al.. (2017, March 14). redhat Security Guide - Chapter 7 - System Auditing. Retrieved December 20, 2017.", 
                    "source_name": "RHEL auditd", 
                    "url": "https://access.redhat.com/documentation/red%20hat%20enterprise%20linux/6/html/security%20guide/chap-system%20auditing"
                }, 
                {
                    "description": "stderr. (2014, February 14). Detecting Userland Preload Rootkits. Retrieved December 20, 2017.", 
                    "source_name": "Chokepoint preload rootkits", 
                    "url": "http://www.chokepoint.net/2014/02/detecting-userland-preload-rootkits.html"
                }, 
                {
                    "description": "Russinovich, M. & Garnier, T. (2017, May 22). Sysmon v6.20. Retrieved December 13, 2017.", 
                    "source_name": "Microsoft Sysmon v6 May 2017", 
                    "url": "https://docs.microsoft.com/sysinternals/downloads/sysmon"
                }
            ], 
            "id": "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "defense-evasion"
                }, 
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "privilege-escalation"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Process Injection", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "Anastasios Pingios"
            ], 
            "x_mitre_data_sources": [
                "API monitoring", 
                "Windows Registry", 
                "File monitoring", 
                "DLL monitoring", 
                "Named Pipes", 
                "Process Monitoring"
            ], 
            "x_mitre_defense_bypassed": [
                "Process whitelisting", 
                "Anti-virus"
            ], 
            "x_mitre_effective_permissions": [
                "User", 
                "Administrator", 
                "SYSTEM", 
                "root"
            ], 
            "x_mitre_permissions_required": [
                "User", 
                "Administrator", 
                "SYSTEM", 
                "root"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:26.496Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Rootkits are programs that hide the existence of malware by intercepting (i.e., Hooking) and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) Rootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a Hypervisor, Master Boot Record, or the System Firmware. (Citation: Wikipedia Rootkit)\n\nAdversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)\n\nDetection: Some rootkit protections may be built into anti-virus or operating system software. There are dedicated rootkit detection tools that look for specific types of rootkit behavior. Monitor for the existence of unrecognized DLLs, devices, services, and changes to the MBR. (Citation: Wikipedia Rootkit)\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: BIOS, MBR, System calls\n\nDefense Bypassed: Anti-virus, File monitoring, Host intrusion prevention systems, Process whitelisting, Signature-based detection, System access controls, Whitelisting by file name or path\n\nPermissions Required: Administrator, SYSTEM, root", 
            "external_references": [
                {
                    "external_id": "T1014", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1014"
                }, 
                {
                    "description": "Wikipedia. (2016, June 1). Rootkit. Retrieved June 2, 2016.", 
                    "source_name": "Wikipedia Rootkit", 
                    "url": "https://en.wikipedia.org/wiki/Rootkit"
                }, 
                {
                    "description": "Symantec. (n.d.). Windows Rootkit Overview. Retrieved December 21, 2017.", 
                    "source_name": "Symantec Windows Rootkits", 
                    "url": "https://www.symantec.com/avcenter/reference/windows.rootkit.overview.pdf"
                }, 
                {
                    "description": "Kurtz, G. (2012, November 19). HTTP iframe Injecting Linux Rootkit. Retrieved December 21, 2017.", 
                    "source_name": "CrowdStrike Linux Rootkit", 
                    "url": "https://www.crowdstrike.com/blog/http-iframe-injecting-linux-rootkit/"
                }, 
                {
                    "description": "Pan, M., Tsai, S. (2014). You can\u2019t see me: A Mac OS X Rootkit uses the tricks you haven't known yet. Retrieved December 21, 2017.", 
                    "source_name": "BlackHat Mac OSX Rootkit", 
                    "url": "http://www.blackhat.com/docs/asia-14/materials/Tsai/WP-Asia-14-Tsai-You-Cant-See-Me-A-Mac-OS-X-Rootkit-Uses-The-Tricks-You-Havent-Known-Yet.pdf"
                }
            ], 
            "id": "attack-pattern--0f20e3cb-245b-4a61-8a91-2d93f7cb0e9b", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "defense-evasion"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Rootkit", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "BIOS", 
                "MBR", 
                "System calls"
            ], 
            "x_mitre_defense_bypassed": [
                "Anti-virus", 
                "File monitoring", 
                "Host intrusion prevention systems", 
                "Process whitelisting", 
                "Signature-based detection", 
                "System access controls", 
                "Whitelisting by file name or path"
            ], 
            "x_mitre_permissions_required": [
                "Administrator", 
                "SYSTEM", 
                "root"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:45.613Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "When operating systems boot up, they can start programs or applications called services that perform background system functions. (Citation: TechNet Services) A service's configuration information, including the file path to the service's executable, is stored in the Windows Registry. \n\nAdversaries may install a new service that can be configured to execute at startup by using utilities to interact with services or by directly modifying the Registry. The service name may be disguised by using a name from a related operating system or benign software with Masquerading. Services may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges from administrator to SYSTEM. Adversaries may also directly start services through Service Execution.\n\nDetection: Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence. (Citation: TechNet Autoruns) Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.\n\nPlatforms: Windows\n\nData Sources: Windows Registry, Process monitoring, Process command-line parameters\n\nEffective Permissions: SYSTEM\n\nPermissions Required: Administrator, SYSTEM", 
            "external_references": [
                {
                    "external_id": "T1050", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1050"
                }, 
                {
                    "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.", 
                    "source_name": "TechNet Autoruns", 
                    "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902"
                }, 
                {
                    "description": "Microsoft. (n.d.). Services. Retrieved June 7, 2016.", 
                    "source_name": "TechNet Services", 
                    "url": "https://technet.microsoft.com/en-us/library/cc772408.aspx"
                }
            ], 
            "id": "attack-pattern--478aa214-2ca7-4ec0-9978-18798e514790", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "persistence"
                }, 
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "privilege-escalation"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "New Service", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Windows Registry", 
                "Process monitoring", 
                "Process command-line parameters"
            ], 
            "x_mitre_effective_permissions": [
                "SYSTEM"
            ], 
            "x_mitre_permissions_required": [
                "Administrator", 
                "SYSTEM"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:53.408Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries may conduct C2 communications over a non-standard port to bypass proxies and firewalls that have been improperly configured.\n\nDetection: Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Netflow/Enclave netflow, Process use of network, Process monitoring\n\nRequires Network: Yes", 
            "external_references": [
                {
                    "external_id": "T1065", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1065"
                }, 
                {
                    "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", 
                    "source_name": "University of Birmingham C2", 
                    "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"
                }
            ], 
            "id": "attack-pattern--c848fcf7-6b62-4bde-8216-b6c157d48da0", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "command-and-control"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Uncommonly Used Port", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "Netflow/Enclave netflow", 
                "Process use of network", 
                "Process monitoring"
            ], 
            "x_mitre_network_requirements": true, 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:48.323Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Adversaries can use methods of capturing user input for obtaining credentials for Valid Accounts and information Collection that include keylogging and user input field interception.\n\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes, (Citation: Adventures of a Keystroke) but other methods exist to target information for specific purposes, such as performing a UAC prompt or wrapping the Windows default credential provider. (Citation: Wrightson 2012)\n\nKeylogging is likely to be used to acquire credentials for new access opportunities when Credential Dumping efforts are not effective, and may require an adversary to remain passive on a system for a period of time before an opportunity arises.\n\nAdversaries may also install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. This variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access through External Remote Services and Valid Accounts or as part of the initial compromise by exploitation of the externally facing web service. (Citation: Volexity Virtual Private Keylogging)\n\nDetection: Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState. (Citation: Adventures of a Keystroke) Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider. (Citation: Wrightson 2012) Detection of compromised Valid Accounts in use by adversaries may help to catch the result of user input interception if new techniques are used.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Windows Registry, Kernel drivers, Process monitoring, API monitoring\n\nPermissions Required: Administrator, SYSTEM\n\nContributors: John Lambert, Microsoft Threat Intelligence Center", 
            "external_references": [
                {
                    "external_id": "T1056", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1056"
                }, 
                {
                    "description": "Tinaztepe,  E. (n.d.). The Adventures of a Keystroke:  An in-depth look into keyloggers on Windows. Retrieved April 27, 2016.", 
                    "source_name": "Adventures of a Keystroke"
                }, 
                {
                    "description": "Wrightson, T. (2012, January 2). CAPTURING WINDOWS 7 CREDENTIALS AT LOGON USING CUSTOM CREDENTIAL PROVIDER. Retrieved November 12, 2014.", 
                    "source_name": "Wrightson 2012", 
                    "url": "http://blog.leetsys.com/2012/01/02/capturing-windows-7-credentials-at-logon-using-custom-credential-provider/"
                }, 
                {
                    "description": "Adair, S. (2015, October 7). Virtual Private Keylogging: Cisco Web VPNs Leveraged for Access and Persistence. Retrieved March 20, 2017.", 
                    "source_name": "Volexity Virtual Private Keylogging", 
                    "url": "https://www.volexity.com/blog/2015/10/07/virtual-private-keylogging-cisco-web-vpns-leveraged-for-access-and-persistence/"
                }
            ], 
            "id": "attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "collection"
                }, 
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "credential-access"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Input Capture", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "John Lambert, Microsoft Threat Intelligence Center"
            ], 
            "x_mitre_data_sources": [
                "Windows Registry", 
                "Kernel drivers", 
                "Process monitoring", 
                "API monitoring"
            ], 
            "x_mitre_permissions_required": [
                "Administrator", 
                "SYSTEM"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:20.537Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Sensitive data can be collected from local system sources, such as the file system or databases of information residing on the system prior to Exfiltration.\n\nAdversaries will often search the file system on computers they have compromised to find files of interest. They may do this using a Command-Line Interface, such as cmd, which has functionality to interact with the file system to gather information. Some adversaries may also use Automated Collection on the local system.\n\nDetection: Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: File monitoring, Process monitoring, Process command-line parameters\n\nSystem Requirements: Privileges to access certain files and directories", 
            "external_references": [
                {
                    "external_id": "T1005", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1005"
                }
            ], 
            "id": "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "collection"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Data from Local System", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_data_sources": [
                "File monitoring", 
                "Process monitoring", 
                "Process command-line parameters"
            ], 
            "x_mitre_platforms": [
                "Linux", 
                "macOS", 
                "Windows"
            ], 
            "x_mitre_system_requirements": [
                "Privileges to access certain files and directories"
            ]
        }, 
        {
            "created": "2017-05-31T21:30:34.928Z", 
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5", 
            "description": "Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Registry. Service configurations can be modified using utilities such as sc.exe and Reg.\n\nAdversaries can modify an existing service to persist malware on a system by using system utilities or by using custom tools to interact with the Windows API. Use of existing services is a type of Masquerading that may make detection analysis more challenging. Modifying existing services may interrupt their functionality or may enable services that are disabled or otherwise not commonly used.\n\nAdversaries may also intentionally corrupt or kill services to execute malicious recovery programs/commands. (Citation: Twitter Service Recovery Nov 2017) (Citation: Microsoft Service Recovery Feb 2013)\n\nDetection: Look for changes to service Registry entries that do not correlate with known software, patch cycles, etc. Changes to the binary path and the service startup type changed from manual or disabled to automatic, if it does not typically do so, may be suspicious. Tools such as Sysinternals Autoruns may also be used to detect system service changes that could be attempts at persistence. (Citation: TechNet Autoruns) \n\nService information is stored in the Registry at <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>.\n\nCommand-line invocation of tools capable of modifying services may be unusual, depending on how systems are typically used in a particular environment. Collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute cmd commands or scripts.\n\nLook for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Services may also be modified through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.\n\nPlatforms: Windows\n\nData Sources: Windows Registry, File monitoring, Process command-line parameters, Process monitoring\n\nPermissions Required: Administrator, SYSTEM\n\nContributors: Travis Smith, Tripwire, Matthew Demaske, Adaptforward", 
            "external_references": [
                {
                    "external_id": "T1031", 
                    "source_name": "mitre-attack", 
                    "url": "https://attack.mitre.org/wiki/Technique/T1031"
                }, 
                {
                    "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.", 
                    "source_name": "TechNet Autoruns", 
                    "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902"
                }, 
                {
                    "description": "The Cyber (@r0wdy_). (2017, November 30). Service Recovery Parameters. Retrieved April 9, 2018.", 
                    "source_name": "Twitter Service Recovery Nov 2017", 
                    "url": "https://twitter.com/r0wdy%20/status/936365549553991680"
                }, 
                {
                    "description": "Microsoft. (2013, February 22). Set up Recovery Actions to Take Place When a Service Fails. Retrieved April 9, 2018.", 
                    "source_name": "Microsoft Service Recovery Feb 2013", 
                    "url": "https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc753662(v=ws.11)"
                }
            ], 
            "id": "attack-pattern--62dfd1ca-52d5-483c-a84b-d6e80bf94b7b", 
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack", 
                    "phase_name": "persistence"
                }
            ], 
            "modified": "2018-04-18T17:59:24.739Z", 
            "name": "Modify Existing Service", 
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ], 
            "type": "attack-pattern", 
            "x_mitre_contributors": [
                "Travis Smith, Tripwire", 
                "Matthew Demaske, Adaptforward"
            ], 
            "x_mitre_data_sources": [
                "Windows Registry", 
                "File monitoring", 
                "Process command-line parameters", 
                "Process monitoring"
            ], 
            "x_mitre_permissions_required": [
                "Administrator", 
                "SYSTEM"
            ], 
            "x_mitre_platforms": [
                "Windows"
            ]
        }
    ], 
    "hash": "91c8838808c7a00638972433f5b70f94964083a584138f033eb6b074c5a3afef", 
    "name": "Darkmoon"
}